"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@trpc";
exports.ids = ["vendor-chunks/@trpc"];
exports.modules = {

/***/ "(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPCClientError)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n/* harmony import */ var _transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transformResult-ace864b8.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\");\n\n\n\nfunction isTRPCClientError(cause) {\n    return cause instanceof TRPCClientError || /**\n     * @deprecated\n     * Delete in next major\n     */ cause instanceof Error && cause.name === 'TRPCClientError';\n}\nfunction isTRPCErrorResponse(obj) {\n    return (0,_transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__.i)(obj) && (0,_transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__.i)(obj.error) && typeof obj.error.code === 'number' && typeof obj.error.message === 'string';\n}\nclass TRPCClientError extends Error {\n    static from(_cause, opts = {}) {\n        const cause = _cause;\n        if (isTRPCClientError(cause)) {\n            if (opts.meta) {\n                // Decorate with meta error data\n                cause.meta = {\n                    ...cause.meta,\n                    ...opts.meta\n                };\n            }\n            return cause;\n        }\n        if (isTRPCErrorResponse(cause)) {\n            return new TRPCClientError(cause.error.message, {\n                ...opts,\n                result: cause\n            });\n        }\n        if (!(cause instanceof Error)) {\n            return new TRPCClientError('Unknown error', {\n                ...opts,\n                cause: cause\n            });\n        }\n        return new TRPCClientError(cause.message, {\n            ...opts,\n            cause: (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__.getCauseFromUnknown)(cause)\n        });\n    }\n    constructor(message, opts){\n        const cause = opts?.cause;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore https://github.com/tc39/proposal-error-cause\n        super(message, {\n            cause\n        });\n        this.meta = opts?.meta;\n        this.cause = cause;\n        this.shape = opts?.result?.error;\n        this.data = opts?.result?.error.data;\n        this.name = 'TRPCClientError';\n        Object.setPrototypeOf(this, TRPCClientError.prototype);\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvVFJQQ0NsaWVudEVycm9yLTM4ZjlhMzJhLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEQ7QUFDSzs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdFQUFRLFNBQVMsZ0VBQVE7QUFDcEM7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsd0VBQW1CO0FBQ3RDLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9jbGllbnQvZGlzdC9UUlBDQ2xpZW50RXJyb3ItMzhmOWEzMmEubWpzPzkyNzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q2F1c2VGcm9tVW5rbm93biB9IGZyb20gJ0B0cnBjL3NlcnZlci9zaGFyZWQnO1xuaW1wb3J0IHsgaSBhcyBpc09iamVjdCB9IGZyb20gJy4vdHJhbnNmb3JtUmVzdWx0LWFjZTg2NGI4Lm1qcyc7XG5cbmZ1bmN0aW9uIGlzVFJQQ0NsaWVudEVycm9yKGNhdXNlKSB7XG4gICAgcmV0dXJuIGNhdXNlIGluc3RhbmNlb2YgVFJQQ0NsaWVudEVycm9yIHx8IC8qKlxuICAgICAqIEBkZXByZWNhdGVkXG4gICAgICogRGVsZXRlIGluIG5leHQgbWFqb3JcbiAgICAgKi8gY2F1c2UgaW5zdGFuY2VvZiBFcnJvciAmJiBjYXVzZS5uYW1lID09PSAnVFJQQ0NsaWVudEVycm9yJztcbn1cbmZ1bmN0aW9uIGlzVFJQQ0Vycm9yUmVzcG9uc2Uob2JqKSB7XG4gICAgcmV0dXJuIGlzT2JqZWN0KG9iaikgJiYgaXNPYmplY3Qob2JqLmVycm9yKSAmJiB0eXBlb2Ygb2JqLmVycm9yLmNvZGUgPT09ICdudW1iZXInICYmIHR5cGVvZiBvYmouZXJyb3IubWVzc2FnZSA9PT0gJ3N0cmluZyc7XG59XG5jbGFzcyBUUlBDQ2xpZW50RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgc3RhdGljIGZyb20oX2NhdXNlLCBvcHRzID0ge30pIHtcbiAgICAgICAgY29uc3QgY2F1c2UgPSBfY2F1c2U7XG4gICAgICAgIGlmIChpc1RSUENDbGllbnRFcnJvcihjYXVzZSkpIHtcbiAgICAgICAgICAgIGlmIChvcHRzLm1ldGEpIHtcbiAgICAgICAgICAgICAgICAvLyBEZWNvcmF0ZSB3aXRoIG1ldGEgZXJyb3IgZGF0YVxuICAgICAgICAgICAgICAgIGNhdXNlLm1ldGEgPSB7XG4gICAgICAgICAgICAgICAgICAgIC4uLmNhdXNlLm1ldGEsXG4gICAgICAgICAgICAgICAgICAgIC4uLm9wdHMubWV0YVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY2F1c2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzVFJQQ0Vycm9yUmVzcG9uc2UoY2F1c2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFRSUENDbGllbnRFcnJvcihjYXVzZS5lcnJvci5tZXNzYWdlLCB7XG4gICAgICAgICAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgICAgICAgICByZXN1bHQ6IGNhdXNlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIShjYXVzZSBpbnN0YW5jZW9mIEVycm9yKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBUUlBDQ2xpZW50RXJyb3IoJ1Vua25vd24gZXJyb3InLCB7XG4gICAgICAgICAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgICAgICAgICBjYXVzZTogY2F1c2VcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgVFJQQ0NsaWVudEVycm9yKGNhdXNlLm1lc3NhZ2UsIHtcbiAgICAgICAgICAgIC4uLm9wdHMsXG4gICAgICAgICAgICBjYXVzZTogZ2V0Q2F1c2VGcm9tVW5rbm93bihjYXVzZSlcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG9wdHMpe1xuICAgICAgICBjb25zdCBjYXVzZSA9IG9wdHM/LmNhdXNlO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4gICAgICAgIC8vIEB0cy1pZ25vcmUgaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZXJyb3ItY2F1c2VcbiAgICAgICAgc3VwZXIobWVzc2FnZSwge1xuICAgICAgICAgICAgY2F1c2VcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubWV0YSA9IG9wdHM/Lm1ldGE7XG4gICAgICAgIHRoaXMuY2F1c2UgPSBjYXVzZTtcbiAgICAgICAgdGhpcy5zaGFwZSA9IG9wdHM/LnJlc3VsdD8uZXJyb3I7XG4gICAgICAgIHRoaXMuZGF0YSA9IG9wdHM/LnJlc3VsdD8uZXJyb3IuZGF0YTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1RSUENDbGllbnRFcnJvcic7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBUUlBDQ2xpZW50RXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFRSUENDbGllbnRFcnJvciBhcyBUIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/httpBatchLink-d0f9eac9.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/httpBatchLink-d0f9eac9.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ createHTTPBatchLink),\n/* harmony export */   h: () => (/* binding */ httpBatchLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n/* harmony import */ var _transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transformResult-ace864b8.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\");\n/* harmony import */ var _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TRPCClientError-38f9a32a.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\");\n/* harmony import */ var _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpUtils-b9d0cb48.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs\");\n\n\n\n\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */ /**\n * A function that should never be called unless we messed something up.\n */ const throwFatalError = ()=>{\n    throw new Error('Something went wrong. Please submit an issue at https://github.com/trpc/trpc/issues/new');\n};\n/**\n * Dataloader that's very inspired by https://github.com/graphql/dataloader\n * Less configuration, no caching, and allows you to cancel requests\n * When cancelling a single fetch the whole batch will be cancelled only when _all_ items are cancelled\n */ function dataLoader(batchLoader) {\n    let pendingItems = null;\n    let dispatchTimer = null;\n    const destroyTimerAndPendingItems = ()=>{\n        clearTimeout(dispatchTimer);\n        dispatchTimer = null;\n        pendingItems = null;\n    };\n    /**\n   * Iterate through the items and split them into groups based on the `batchLoader`'s validate function\n   */ function groupItems(items) {\n        const groupedItems = [\n            []\n        ];\n        let index = 0;\n        while(true){\n            const item = items[index];\n            if (!item) {\n                break;\n            }\n            const lastGroup = groupedItems[groupedItems.length - 1];\n            if (item.aborted) {\n                // Item was aborted before it was dispatched\n                item.reject?.(new Error('Aborted'));\n                index++;\n                continue;\n            }\n            const isValid = batchLoader.validate(lastGroup.concat(item).map((it)=>it.key));\n            if (isValid) {\n                lastGroup.push(item);\n                index++;\n                continue;\n            }\n            if (lastGroup.length === 0) {\n                item.reject?.(new Error('Input is too big for a single dispatch'));\n                index++;\n                continue;\n            }\n            // Create new group, next iteration will try to add the item to that\n            groupedItems.push([]);\n        }\n        return groupedItems;\n    }\n    function dispatch() {\n        const groupedItems = groupItems(pendingItems);\n        destroyTimerAndPendingItems();\n        // Create batches for each group of items\n        for (const items of groupedItems){\n            if (!items.length) {\n                continue;\n            }\n            const batch = {\n                items,\n                cancel: throwFatalError\n            };\n            for (const item of items){\n                item.batch = batch;\n            }\n            const unitResolver = (index, value)=>{\n                const item = batch.items[index];\n                item.resolve?.(value);\n                item.batch = null;\n                item.reject = null;\n                item.resolve = null;\n            };\n            const { promise , cancel  } = batchLoader.fetch(batch.items.map((_item)=>_item.key), unitResolver);\n            batch.cancel = cancel;\n            promise.then((result)=>{\n                for(let i = 0; i < result.length; i++){\n                    const value = result[i];\n                    unitResolver(i, value);\n                }\n                for (const item of batch.items){\n                    item.reject?.(new Error('Missing result'));\n                    item.batch = null;\n                }\n            }).catch((cause)=>{\n                for (const item of batch.items){\n                    item.reject?.(cause);\n                    item.batch = null;\n                }\n            });\n        }\n    }\n    function load(key) {\n        const item = {\n            aborted: false,\n            key,\n            batch: null,\n            resolve: throwFatalError,\n            reject: throwFatalError\n        };\n        const promise = new Promise((resolve, reject)=>{\n            item.reject = reject;\n            item.resolve = resolve;\n            if (!pendingItems) {\n                pendingItems = [];\n            }\n            pendingItems.push(item);\n        });\n        if (!dispatchTimer) {\n            dispatchTimer = setTimeout(dispatch);\n        }\n        const cancel = ()=>{\n            item.aborted = true;\n            if (item.batch?.items.every((item)=>item.aborted)) {\n                // All items in the batch have been cancelled\n                item.batch.cancel();\n                item.batch = null;\n            }\n        };\n        return {\n            promise,\n            cancel\n        };\n    }\n    return {\n        load\n    };\n}\n\n/**\n * @internal\n */ function createHTTPBatchLink(requester) {\n    return function httpBatchLink(opts) {\n        const resolvedOpts = (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__.r)(opts);\n        const maxURLLength = opts.maxURLLength ?? Infinity;\n        // initialized config\n        return (runtime)=>{\n            const batchLoader = (type)=>{\n                const validate = (batchOps)=>{\n                    if (maxURLLength === Infinity) {\n                        // escape hatch for quick calcs\n                        return true;\n                    }\n                    const path = batchOps.map((op)=>op.path).join(',');\n                    const inputs = batchOps.map((op)=>op.input);\n                    const url = (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__.g)({\n                        ...resolvedOpts,\n                        runtime,\n                        type,\n                        path,\n                        inputs\n                    });\n                    return url.length <= maxURLLength;\n                };\n                const fetch = requester({\n                    ...resolvedOpts,\n                    runtime,\n                    type,\n                    opts\n                });\n                return {\n                    validate,\n                    fetch\n                };\n            };\n            const query = dataLoader(batchLoader('query'));\n            const mutation = dataLoader(batchLoader('mutation'));\n            const subscription = dataLoader(batchLoader('subscription'));\n            const loaders = {\n                query,\n                subscription,\n                mutation\n            };\n            return ({ op  })=>{\n                return (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n                    const loader = loaders[op.type];\n                    const { promise , cancel  } = loader.load(op);\n                    let _res = undefined;\n                    promise.then((res)=>{\n                        _res = res;\n                        const transformed = (0,_transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__.t)(res.json, runtime);\n                        if (!transformed.ok) {\n                            observer.error(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(transformed.error, {\n                                meta: res.meta\n                            }));\n                            return;\n                        }\n                        observer.next({\n                            context: res.meta,\n                            result: transformed.result\n                        });\n                        observer.complete();\n                    }).catch((err)=>{\n                        observer.error(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(err, {\n                            meta: _res?.meta\n                        }));\n                    });\n                    return ()=>{\n                        cancel();\n                    };\n                });\n            };\n        };\n    };\n}\n\nconst batchRequester = (requesterOpts)=>{\n    return (batchOps)=>{\n        const path = batchOps.map((op)=>op.path).join(',');\n        const inputs = batchOps.map((op)=>op.input);\n        const { promise , cancel  } = (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__.j)({\n            ...requesterOpts,\n            path,\n            inputs,\n            headers () {\n                if (!requesterOpts.opts.headers) {\n                    return {};\n                }\n                if (typeof requesterOpts.opts.headers === 'function') {\n                    return requesterOpts.opts.headers({\n                        opList: batchOps\n                    });\n                }\n                return requesterOpts.opts.headers;\n            }\n        });\n        return {\n            promise: promise.then((res)=>{\n                const resJSON = Array.isArray(res.json) ? res.json : batchOps.map(()=>res.json);\n                const result = resJSON.map((item)=>({\n                        meta: res.meta,\n                        json: item\n                    }));\n                return result;\n            }),\n            cancel\n        };\n    };\n};\nconst httpBatchLink = createHTTPBatchLink(batchRequester);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/httpBatchLink-d0f9eac9.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ getBody),\n/* harmony export */   b: () => (/* binding */ getFetch),\n/* harmony export */   f: () => (/* binding */ fetchHTTPResponse),\n/* harmony export */   g: () => (/* binding */ getUrl),\n/* harmony export */   h: () => (/* binding */ httpRequest),\n/* harmony export */   j: () => (/* binding */ jsonHttpRequester),\n/* harmony export */   r: () => (/* binding */ resolveHTTPLinkOptions)\n/* harmony export */ });\n/* harmony import */ var _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TRPCClientError-38f9a32a.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\");\n\n\nconst isFunction = (fn)=>typeof fn === 'function';\nfunction getFetch(customFetchImpl) {\n    if (customFetchImpl) {\n        return customFetchImpl;\n    }\n    if (typeof window !== 'undefined' && isFunction(window.fetch)) {\n        return window.fetch;\n    }\n    if (typeof globalThis !== 'undefined' && isFunction(globalThis.fetch)) {\n        return globalThis.fetch;\n    }\n    throw new Error('No fetch implementation found');\n}\n\nfunction getAbortController(customAbortControllerImpl) {\n    if (customAbortControllerImpl) {\n        return customAbortControllerImpl;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof window !== 'undefined' && window.AbortController) {\n        return window.AbortController;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof globalThis !== 'undefined' && globalThis.AbortController) {\n        return globalThis.AbortController;\n    }\n    return null;\n}\n\nfunction resolveHTTPLinkOptions(opts) {\n    return {\n        url: opts.url.toString().replace(/\\/$/, ''),\n        fetch: opts.fetch,\n        AbortController: getAbortController(opts.AbortController)\n    };\n}\n// https://github.com/trpc/trpc/pull/669\nfunction arrayToDict(array) {\n    const dict = {};\n    for(let index = 0; index < array.length; index++){\n        const element = array[index];\n        dict[index] = element;\n    }\n    return dict;\n}\nconst METHOD = {\n    query: 'GET',\n    mutation: 'POST'\n};\nfunction getInput(opts) {\n    return 'input' in opts ? opts.runtime.transformer.serialize(opts.input) : arrayToDict(opts.inputs.map((_input)=>opts.runtime.transformer.serialize(_input)));\n}\nconst getUrl = (opts)=>{\n    let url = opts.url + '/' + opts.path;\n    const queryParts = [];\n    if ('inputs' in opts) {\n        queryParts.push('batch=1');\n    }\n    if (opts.type === 'query') {\n        const input = getInput(opts);\n        if (input !== undefined) {\n            queryParts.push(`input=${encodeURIComponent(JSON.stringify(input))}`);\n        }\n    }\n    if (queryParts.length) {\n        url += '?' + queryParts.join('&');\n    }\n    return url;\n};\nconst getBody = (opts)=>{\n    if (opts.type === 'query') {\n        return undefined;\n    }\n    const input = getInput(opts);\n    return input !== undefined ? JSON.stringify(input) : undefined;\n};\nconst jsonHttpRequester = (opts)=>{\n    return httpRequest({\n        ...opts,\n        contentTypeHeader: 'application/json',\n        getUrl,\n        getBody\n    });\n};\nasync function fetchHTTPResponse(opts, ac) {\n    const url = opts.getUrl(opts);\n    const body = opts.getBody(opts);\n    const { type  } = opts;\n    const resolvedHeaders = await opts.headers();\n    /* istanbul ignore if -- @preserve */ if (type === 'subscription') {\n        throw new Error('Subscriptions should use wsLink');\n    }\n    const headers = {\n        ...opts.contentTypeHeader ? {\n            'content-type': opts.contentTypeHeader\n        } : {},\n        ...opts.batchModeHeader ? {\n            'trpc-batch-mode': opts.batchModeHeader\n        } : {},\n        ...resolvedHeaders\n    };\n    return getFetch(opts.fetch)(url, {\n        method: METHOD[type],\n        signal: ac?.signal,\n        body: body,\n        headers\n    });\n}\nfunction httpRequest(opts) {\n    const ac = opts.AbortController ? new opts.AbortController() : null;\n    const meta = {};\n    let done = false;\n    const promise = new Promise((resolve, reject)=>{\n        fetchHTTPResponse(opts, ac).then((_res)=>{\n            meta.response = _res;\n            done = true;\n            return _res.json();\n        }).then((json)=>{\n            meta.responseJSON = json;\n            resolve({\n                json: json,\n                meta\n            });\n        }).catch((err)=>{\n            done = true;\n            reject(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_0__.T.from(err, {\n                meta\n            }));\n        });\n    });\n    const cancel = ()=>{\n        if (!done) {\n            ac?.abort();\n        }\n    };\n    return {\n        promise,\n        cancel\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvaHR0cFV0aWxzLWI5ZDBjYjQ4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRTs7QUFFdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLDBDQUEwQztBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxJQUFJO0FBQ2Q7QUFDQTtBQUNBLFVBQVUsSUFBSTtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBLG1CQUFtQiw0REFBZTtBQUNsQztBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtSiIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9jbGllbnQvZGlzdC9odHRwVXRpbHMtYjlkMGNiNDgubWpzPzllODUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVCBhcyBUUlBDQ2xpZW50RXJyb3IgfSBmcm9tICcuL1RSUENDbGllbnRFcnJvci0zOGY5YTMyYS5tanMnO1xuXG5jb25zdCBpc0Z1bmN0aW9uID0gKGZuKT0+dHlwZW9mIGZuID09PSAnZnVuY3Rpb24nO1xuZnVuY3Rpb24gZ2V0RmV0Y2goY3VzdG9tRmV0Y2hJbXBsKSB7XG4gICAgaWYgKGN1c3RvbUZldGNoSW1wbCkge1xuICAgICAgICByZXR1cm4gY3VzdG9tRmV0Y2hJbXBsO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgaXNGdW5jdGlvbih3aW5kb3cuZmV0Y2gpKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuZmV0Y2g7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcgJiYgaXNGdW5jdGlvbihnbG9iYWxUaGlzLmZldGNoKSkge1xuICAgICAgICByZXR1cm4gZ2xvYmFsVGhpcy5mZXRjaDtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdObyBmZXRjaCBpbXBsZW1lbnRhdGlvbiBmb3VuZCcpO1xufVxuXG5mdW5jdGlvbiBnZXRBYm9ydENvbnRyb2xsZXIoY3VzdG9tQWJvcnRDb250cm9sbGVySW1wbCkge1xuICAgIGlmIChjdXN0b21BYm9ydENvbnRyb2xsZXJJbXBsKSB7XG4gICAgICAgIHJldHVybiBjdXN0b21BYm9ydENvbnRyb2xsZXJJbXBsO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3ByZWZlci1vcHRpb25hbC1jaGFpblxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuQWJvcnRDb250cm9sbGVyKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuQWJvcnRDb250cm9sbGVyO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3ByZWZlci1vcHRpb25hbC1jaGFpblxuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcgJiYgZ2xvYmFsVGhpcy5BYm9ydENvbnRyb2xsZXIpIHtcbiAgICAgICAgcmV0dXJuIGdsb2JhbFRoaXMuQWJvcnRDb250cm9sbGVyO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZUhUVFBMaW5rT3B0aW9ucyhvcHRzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXJsOiBvcHRzLnVybC50b1N0cmluZygpLnJlcGxhY2UoL1xcLyQvLCAnJyksXG4gICAgICAgIGZldGNoOiBvcHRzLmZldGNoLFxuICAgICAgICBBYm9ydENvbnRyb2xsZXI6IGdldEFib3J0Q29udHJvbGxlcihvcHRzLkFib3J0Q29udHJvbGxlcilcbiAgICB9O1xufVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RycGMvdHJwYy9wdWxsLzY2OVxuZnVuY3Rpb24gYXJyYXlUb0RpY3QoYXJyYXkpIHtcbiAgICBjb25zdCBkaWN0ID0ge307XG4gICAgZm9yKGxldCBpbmRleCA9IDA7IGluZGV4IDwgYXJyYXkubGVuZ3RoOyBpbmRleCsrKXtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGFycmF5W2luZGV4XTtcbiAgICAgICAgZGljdFtpbmRleF0gPSBlbGVtZW50O1xuICAgIH1cbiAgICByZXR1cm4gZGljdDtcbn1cbmNvbnN0IE1FVEhPRCA9IHtcbiAgICBxdWVyeTogJ0dFVCcsXG4gICAgbXV0YXRpb246ICdQT1NUJ1xufTtcbmZ1bmN0aW9uIGdldElucHV0KG9wdHMpIHtcbiAgICByZXR1cm4gJ2lucHV0JyBpbiBvcHRzID8gb3B0cy5ydW50aW1lLnRyYW5zZm9ybWVyLnNlcmlhbGl6ZShvcHRzLmlucHV0KSA6IGFycmF5VG9EaWN0KG9wdHMuaW5wdXRzLm1hcCgoX2lucHV0KT0+b3B0cy5ydW50aW1lLnRyYW5zZm9ybWVyLnNlcmlhbGl6ZShfaW5wdXQpKSk7XG59XG5jb25zdCBnZXRVcmwgPSAob3B0cyk9PntcbiAgICBsZXQgdXJsID0gb3B0cy51cmwgKyAnLycgKyBvcHRzLnBhdGg7XG4gICAgY29uc3QgcXVlcnlQYXJ0cyA9IFtdO1xuICAgIGlmICgnaW5wdXRzJyBpbiBvcHRzKSB7XG4gICAgICAgIHF1ZXJ5UGFydHMucHVzaCgnYmF0Y2g9MScpO1xuICAgIH1cbiAgICBpZiAob3B0cy50eXBlID09PSAncXVlcnknKSB7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gZ2V0SW5wdXQob3B0cyk7XG4gICAgICAgIGlmIChpbnB1dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBxdWVyeVBhcnRzLnB1c2goYGlucHV0PSR7ZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGlucHV0KSl9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHF1ZXJ5UGFydHMubGVuZ3RoKSB7XG4gICAgICAgIHVybCArPSAnPycgKyBxdWVyeVBhcnRzLmpvaW4oJyYnKTtcbiAgICB9XG4gICAgcmV0dXJuIHVybDtcbn07XG5jb25zdCBnZXRCb2R5ID0gKG9wdHMpPT57XG4gICAgaWYgKG9wdHMudHlwZSA9PT0gJ3F1ZXJ5Jykge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCBpbnB1dCA9IGdldElucHV0KG9wdHMpO1xuICAgIHJldHVybiBpbnB1dCAhPT0gdW5kZWZpbmVkID8gSlNPTi5zdHJpbmdpZnkoaW5wdXQpIDogdW5kZWZpbmVkO1xufTtcbmNvbnN0IGpzb25IdHRwUmVxdWVzdGVyID0gKG9wdHMpPT57XG4gICAgcmV0dXJuIGh0dHBSZXF1ZXN0KHtcbiAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgY29udGVudFR5cGVIZWFkZXI6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgZ2V0VXJsLFxuICAgICAgICBnZXRCb2R5XG4gICAgfSk7XG59O1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2hIVFRQUmVzcG9uc2Uob3B0cywgYWMpIHtcbiAgICBjb25zdCB1cmwgPSBvcHRzLmdldFVybChvcHRzKTtcbiAgICBjb25zdCBib2R5ID0gb3B0cy5nZXRCb2R5KG9wdHMpO1xuICAgIGNvbnN0IHsgdHlwZSAgfSA9IG9wdHM7XG4gICAgY29uc3QgcmVzb2x2ZWRIZWFkZXJzID0gYXdhaXQgb3B0cy5oZWFkZXJzKCk7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmIC0tIEBwcmVzZXJ2ZSAqLyBpZiAodHlwZSA9PT0gJ3N1YnNjcmlwdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdWJzY3JpcHRpb25zIHNob3VsZCB1c2Ugd3NMaW5rJyk7XG4gICAgfVxuICAgIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgICAgIC4uLm9wdHMuY29udGVudFR5cGVIZWFkZXIgPyB7XG4gICAgICAgICAgICAnY29udGVudC10eXBlJzogb3B0cy5jb250ZW50VHlwZUhlYWRlclxuICAgICAgICB9IDoge30sXG4gICAgICAgIC4uLm9wdHMuYmF0Y2hNb2RlSGVhZGVyID8ge1xuICAgICAgICAgICAgJ3RycGMtYmF0Y2gtbW9kZSc6IG9wdHMuYmF0Y2hNb2RlSGVhZGVyXG4gICAgICAgIH0gOiB7fSxcbiAgICAgICAgLi4ucmVzb2x2ZWRIZWFkZXJzXG4gICAgfTtcbiAgICByZXR1cm4gZ2V0RmV0Y2gob3B0cy5mZXRjaCkodXJsLCB7XG4gICAgICAgIG1ldGhvZDogTUVUSE9EW3R5cGVdLFxuICAgICAgICBzaWduYWw6IGFjPy5zaWduYWwsXG4gICAgICAgIGJvZHk6IGJvZHksXG4gICAgICAgIGhlYWRlcnNcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGh0dHBSZXF1ZXN0KG9wdHMpIHtcbiAgICBjb25zdCBhYyA9IG9wdHMuQWJvcnRDb250cm9sbGVyID8gbmV3IG9wdHMuQWJvcnRDb250cm9sbGVyKCkgOiBudWxsO1xuICAgIGNvbnN0IG1ldGEgPSB7fTtcbiAgICBsZXQgZG9uZSA9IGZhbHNlO1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KT0+e1xuICAgICAgICBmZXRjaEhUVFBSZXNwb25zZShvcHRzLCBhYykudGhlbigoX3Jlcyk9PntcbiAgICAgICAgICAgIG1ldGEucmVzcG9uc2UgPSBfcmVzO1xuICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm4gX3Jlcy5qc29uKCk7XG4gICAgICAgIH0pLnRoZW4oKGpzb24pPT57XG4gICAgICAgICAgICBtZXRhLnJlc3BvbnNlSlNPTiA9IGpzb247XG4gICAgICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICAgICAgICBqc29uOiBqc29uLFxuICAgICAgICAgICAgICAgIG1ldGFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KS5jYXRjaCgoZXJyKT0+e1xuICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICByZWplY3QoVFJQQ0NsaWVudEVycm9yLmZyb20oZXJyLCB7XG4gICAgICAgICAgICAgICAgbWV0YVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICBjb25zdCBjYW5jZWwgPSAoKT0+e1xuICAgICAgICBpZiAoIWRvbmUpIHtcbiAgICAgICAgICAgIGFjPy5hYm9ydCgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9taXNlLFxuICAgICAgICBjYW5jZWxcbiAgICB9O1xufVxuXG5leHBvcnQgeyBnZXRCb2R5IGFzIGEsIGdldEZldGNoIGFzIGIsIGZldGNoSFRUUFJlc3BvbnNlIGFzIGYsIGdldFVybCBhcyBnLCBodHRwUmVxdWVzdCBhcyBoLCBqc29uSHR0cFJlcXVlc3RlciBhcyBqLCByZXNvbHZlSFRUUExpbmtPcHRpb25zIGFzIHIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@trpc/client/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCClientError: () => (/* reexport safe */ _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T),\n/* harmony export */   TRPCUntypedClient: () => (/* binding */ TRPCUntypedClient),\n/* harmony export */   clientCallTypeToProcedureType: () => (/* binding */ clientCallTypeToProcedureType),\n/* harmony export */   createTRPCClient: () => (/* binding */ createTRPCClient),\n/* harmony export */   createTRPCClientProxy: () => (/* binding */ createTRPCClientProxy),\n/* harmony export */   createTRPCProxyClient: () => (/* binding */ createTRPCProxyClient),\n/* harmony export */   createTRPCUntypedClient: () => (/* binding */ createTRPCUntypedClient),\n/* harmony export */   createWSClient: () => (/* reexport safe */ _links_wsLink_mjs__WEBPACK_IMPORTED_MODULE_8__.createWSClient),\n/* harmony export */   experimental_formDataLink: () => (/* binding */ experimental_formDataLink),\n/* harmony export */   getFetch: () => (/* reexport safe */ _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__.b),\n/* harmony export */   getUntypedClient: () => (/* binding */ getUntypedClient),\n/* harmony export */   httpBatchLink: () => (/* reexport safe */ _httpBatchLink_d0f9eac9_mjs__WEBPACK_IMPORTED_MODULE_5__.h),\n/* harmony export */   httpLink: () => (/* reexport safe */ _links_httpLink_mjs__WEBPACK_IMPORTED_MODULE_6__.httpLink),\n/* harmony export */   httpLinkFactory: () => (/* reexport safe */ _links_httpLink_mjs__WEBPACK_IMPORTED_MODULE_6__.httpLinkFactory),\n/* harmony export */   loggerLink: () => (/* reexport safe */ _links_loggerLink_mjs__WEBPACK_IMPORTED_MODULE_7__.loggerLink),\n/* harmony export */   splitLink: () => (/* reexport safe */ _splitLink_4c75f7be_mjs__WEBPACK_IMPORTED_MODULE_1__.s),\n/* harmony export */   unstable_httpBatchStreamLink: () => (/* binding */ unstable_httpBatchStreamLink),\n/* harmony export */   wsLink: () => (/* reexport safe */ _links_wsLink_mjs__WEBPACK_IMPORTED_MODULE_8__.wsLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n/* harmony import */ var _splitLink_4c75f7be_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./splitLink-4c75f7be.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/splitLink-4c75f7be.mjs\");\n/* harmony import */ var _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TRPCClientError-38f9a32a.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\");\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n/* harmony import */ var _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./httpUtils-b9d0cb48.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs\");\n/* harmony import */ var _httpBatchLink_d0f9eac9_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./httpBatchLink-d0f9eac9.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpBatchLink-d0f9eac9.mjs\");\n/* harmony import */ var _links_httpLink_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./links/httpLink.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/links/httpLink.mjs\");\n/* harmony import */ var _links_loggerLink_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./links/loggerLink.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/links/loggerLink.mjs\");\n/* harmony import */ var _links_wsLink_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./links/wsLink.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/links/wsLink.mjs\");\n/* harmony import */ var _transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./transformResult-ace864b8.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass TRPCUntypedClient {\n    $request({ type , input , path , context ={}  }) {\n        const chain$ = (0,_splitLink_4c75f7be_mjs__WEBPACK_IMPORTED_MODULE_1__.c)({\n            links: this.links,\n            op: {\n                id: ++this.requestId,\n                type,\n                path,\n                input,\n                context\n            }\n        });\n        return chain$.pipe((0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.share)());\n    }\n    requestAsPromise(opts) {\n        const req$ = this.$request(opts);\n        const { promise , abort  } = (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observableToPromise)(req$);\n        const abortablePromise = new Promise((resolve, reject)=>{\n            opts.signal?.addEventListener('abort', abort);\n            promise.then((envelope)=>{\n                resolve(envelope.result.data);\n            }).catch((err)=>{\n                reject(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(err));\n            });\n        });\n        return abortablePromise;\n    }\n    query(path, input, opts) {\n        return this.requestAsPromise({\n            type: 'query',\n            path,\n            input,\n            context: opts?.context,\n            signal: opts?.signal\n        });\n    }\n    mutation(path, input, opts) {\n        return this.requestAsPromise({\n            type: 'mutation',\n            path,\n            input,\n            context: opts?.context,\n            signal: opts?.signal\n        });\n    }\n    subscription(path, input, opts) {\n        const observable$ = this.$request({\n            type: 'subscription',\n            path,\n            input,\n            context: opts?.context\n        });\n        return observable$.subscribe({\n            next (envelope) {\n                if (envelope.result.type === 'started') {\n                    opts.onStarted?.();\n                } else if (envelope.result.type === 'stopped') {\n                    opts.onStopped?.();\n                } else {\n                    opts.onData?.(envelope.result.data);\n                }\n            },\n            error (err) {\n                opts.onError?.(err);\n            },\n            complete () {\n                opts.onComplete?.();\n            }\n        });\n    }\n    constructor(opts){\n        this.requestId = 0;\n        const combinedTransformer = (()=>{\n            const transformer = opts.transformer;\n            if (!transformer) {\n                return {\n                    input: {\n                        serialize: (data)=>data,\n                        deserialize: (data)=>data\n                    },\n                    output: {\n                        serialize: (data)=>data,\n                        deserialize: (data)=>data\n                    }\n                };\n            }\n            if ('input' in transformer) {\n                return opts.transformer;\n            }\n            return {\n                input: transformer,\n                output: transformer\n            };\n        })();\n        this.runtime = {\n            transformer: {\n                serialize: (data)=>combinedTransformer.input.serialize(data),\n                deserialize: (data)=>combinedTransformer.output.deserialize(data)\n            },\n            combinedTransformer\n        };\n        // Initialize the links\n        this.links = opts.links.map((link)=>link(this.runtime));\n    }\n}\n\nfunction createTRPCUntypedClient(opts) {\n    return new TRPCUntypedClient(opts);\n}\n\n/**\n * @deprecated use `createTRPCProxyClient` instead\n */ function createTRPCClient(opts) {\n    const client = new TRPCUntypedClient(opts);\n    return client;\n}\n\nconst clientCallTypeMap = {\n    query: 'query',\n    mutate: 'mutation',\n    subscribe: 'subscription'\n};\n/** @internal */ const clientCallTypeToProcedureType = (clientCallType)=>{\n    return clientCallTypeMap[clientCallType];\n};\n/**\n * @deprecated use `createTRPCProxyClient` instead\n * @internal\n */ function createTRPCClientProxy(client) {\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_3__.createFlatProxy)((key)=>{\n        if (client.hasOwnProperty(key)) {\n            return client[key];\n        }\n        if (key === '__untypedClient') {\n            return client;\n        }\n        return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_3__.createRecursiveProxy)(({ path , args  })=>{\n            const pathCopy = [\n                key,\n                ...path\n            ];\n            const procedureType = clientCallTypeToProcedureType(pathCopy.pop());\n            const fullPath = pathCopy.join('.');\n            return client[procedureType](fullPath, ...args);\n        });\n    });\n}\nfunction createTRPCProxyClient(opts) {\n    const client = new TRPCUntypedClient(opts);\n    const proxy = createTRPCClientProxy(client);\n    return proxy;\n}\n/**\n * Get an untyped client from a proxy client\n * @internal\n */ function getUntypedClient(client) {\n    return client.__untypedClient;\n}\n\nfunction getTextDecoder(customTextDecoder) {\n    if (customTextDecoder) {\n        return customTextDecoder;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof window !== 'undefined' && window.TextDecoder) {\n        return new window.TextDecoder();\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof globalThis !== 'undefined' && globalThis.TextDecoder) {\n        return new globalThis.TextDecoder();\n    }\n    throw new Error('No TextDecoder implementation found');\n}\n\n// Stream parsing adapted from https://www.loginradius.com/blog/engineering/guest-post/http-streaming-with-nodejs-and-fetch-api/\n/**\n * @internal\n * @description Take a stream of bytes and call `onLine` with\n * a JSON object for each line in the stream. Expected stream\n * format is:\n * ```json\n * {\"1\": {...}\n * ,\"0\": {...}\n * }\n * ```\n */ async function parseJSONStream(opts) {\n    const parse = opts.parse ?? JSON.parse;\n    const onLine = (line)=>{\n        if (opts.signal?.aborted) return;\n        if (!line || line === '}') {\n            return;\n        }\n        /**\n     * At this point, `line` can be one of two things:\n     * - The first line of the stream `{\"2\":{...}`\n     * - A line in the middle of the stream `,\"2\":{...}`\n     */ const indexOfColon = line.indexOf(':');\n        const indexAsStr = line.substring(2, indexOfColon - 1);\n        const text = line.substring(indexOfColon + 1);\n        opts.onSingle(Number(indexAsStr), parse(text));\n    };\n    await readLines(opts.readableStream, onLine, opts.textDecoder);\n}\n/**\n * Handle transforming a stream of bytes into lines of text.\n * To avoid using AsyncIterators / AsyncGenerators,\n * we use a callback for each line.\n *\n * @param readableStream can be a NodeJS stream or a WebAPI stream\n * @param onLine will be called for every line ('\\n' delimited) in the stream\n */ async function readLines(readableStream, onLine, textDecoder) {\n    let partOfLine = '';\n    const onChunk = (chunk)=>{\n        const chunkText = textDecoder.decode(chunk);\n        const chunkLines = chunkText.split('\\n');\n        if (chunkLines.length === 1) {\n            partOfLine += chunkLines[0];\n        } else if (chunkLines.length > 1) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length checked on line above\n            onLine(partOfLine + chunkLines[0]);\n            for(let i = 1; i < chunkLines.length - 1; i++){\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length checked on line above\n                onLine(chunkLines[i]);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length doesn't change, so is necessarily > 1\n            partOfLine = chunkLines[chunkLines.length - 1];\n        }\n    };\n    // we handle 2 different types of streams, this if where we figure out which one we have\n    if ('getReader' in readableStream) {\n        await readStandardChunks(readableStream, onChunk);\n    } else {\n        await readNodeChunks(readableStream, onChunk);\n    }\n    onLine(partOfLine);\n}\n/**\n * Handle NodeJS stream\n */ function readNodeChunks(stream, onChunk) {\n    return new Promise((resolve)=>{\n        stream.on('data', onChunk);\n        stream.on('end', resolve);\n    });\n}\n/**\n * Handle WebAPI stream\n */ async function readStandardChunks(stream, onChunk) {\n    const reader = stream.getReader();\n    let readResult = await reader.read();\n    while(!readResult.done){\n        onChunk(readResult.value);\n        readResult = await reader.read();\n    }\n}\nconst streamingJsonHttpRequester = (opts, onSingle)=>{\n    const ac = opts.AbortController ? new opts.AbortController() : null;\n    const responsePromise = (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__.f)({\n        ...opts,\n        contentTypeHeader: 'application/json',\n        batchModeHeader: 'stream',\n        getUrl: _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__.g,\n        getBody: _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__.a\n    }, ac);\n    const cancel = ()=>ac?.abort();\n    const promise = responsePromise.then(async (res)=>{\n        if (!res.body) throw new Error('Received response without body');\n        const meta = {\n            response: res\n        };\n        return parseJSONStream({\n            readableStream: res.body,\n            onSingle,\n            parse: (string)=>({\n                    json: JSON.parse(string),\n                    meta\n                }),\n            signal: ac?.signal,\n            textDecoder: opts.textDecoder\n        });\n    });\n    return {\n        cancel,\n        promise\n    };\n};\n\nconst streamRequester = (requesterOpts)=>{\n    const textDecoder = getTextDecoder(requesterOpts.opts.textDecoder);\n    return (batchOps, unitResolver)=>{\n        const path = batchOps.map((op)=>op.path).join(',');\n        const inputs = batchOps.map((op)=>op.input);\n        const { cancel , promise  } = streamingJsonHttpRequester({\n            ...requesterOpts,\n            textDecoder,\n            path,\n            inputs,\n            headers () {\n                if (!requesterOpts.opts.headers) {\n                    return {};\n                }\n                if (typeof requesterOpts.opts.headers === 'function') {\n                    return requesterOpts.opts.headers({\n                        opList: batchOps\n                    });\n                }\n                return requesterOpts.opts.headers;\n            }\n        }, (index, res)=>{\n            unitResolver(index, res);\n        });\n        return {\n            /**\n       * return an empty array because the batchLoader expects an array of results\n       * but we've already called the `unitResolver` for each of them, there's\n       * nothing left to do here.\n       */ promise: promise.then(()=>[]),\n            cancel\n        };\n    };\n};\nconst unstable_httpBatchStreamLink = (0,_httpBatchLink_d0f9eac9_mjs__WEBPACK_IMPORTED_MODULE_5__.c)(streamRequester);\n\nconst getBody = (opts)=>{\n    if (!('input' in opts)) {\n        return undefined;\n    }\n    if (!(opts.input instanceof FormData)) {\n        throw new Error('Input is not FormData');\n    }\n    return opts.input;\n};\nconst formDataRequester = (opts)=>{\n    if (opts.type !== 'mutation') {\n        // TODO(?) handle formdata queries\n        throw new Error('We only handle mutations with formdata');\n    }\n    return (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_4__.h)({\n        ...opts,\n        getUrl () {\n            return `${opts.url}/${opts.path}`;\n        },\n        getBody\n    });\n};\nconst experimental_formDataLink = (0,_links_httpLink_mjs__WEBPACK_IMPORTED_MODULE_6__.httpLinkFactory)({\n    requester: formDataRequester\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/links/httpLink.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/client/dist/links/httpLink.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   httpLink: () => (/* binding */ httpLink),\n/* harmony export */   httpLinkFactory: () => (/* binding */ httpLinkFactory)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n/* harmony import */ var _transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transformResult-ace864b8.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\");\n/* harmony import */ var _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TRPCClientError-38f9a32a.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\");\n/* harmony import */ var _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../httpUtils-b9d0cb48.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs\");\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n\n\n\n\n\n\nfunction httpLinkFactory(factoryOpts) {\n    return (opts)=>{\n        const resolvedOpts = (0,_httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__.r)(opts);\n        return (runtime)=>({ op  })=>(0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n                    const { path , input , type  } = op;\n                    const { promise , cancel  } = factoryOpts.requester({\n                        ...resolvedOpts,\n                        runtime,\n                        type,\n                        path,\n                        input,\n                        headers () {\n                            if (!opts.headers) {\n                                return {};\n                            }\n                            if (typeof opts.headers === 'function') {\n                                return opts.headers({\n                                    op\n                                });\n                            }\n                            return opts.headers;\n                        }\n                    });\n                    let meta = undefined;\n                    promise.then((res)=>{\n                        meta = res.meta;\n                        const transformed = (0,_transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__.t)(res.json, runtime);\n                        if (!transformed.ok) {\n                            observer.error(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(transformed.error, {\n                                meta\n                            }));\n                            return;\n                        }\n                        observer.next({\n                            context: res.meta,\n                            result: transformed.result\n                        });\n                        observer.complete();\n                    }).catch((cause)=>{\n                        observer.error(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(cause, {\n                            meta\n                        }));\n                    });\n                    return ()=>{\n                        cancel();\n                    };\n                });\n    };\n}\n/**\n * @see https://trpc.io/docs/client/links/httpLink\n */ const httpLink = httpLinkFactory({\n    requester: _httpUtils_b9d0cb48_mjs__WEBPACK_IMPORTED_MODULE_3__.j\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvbGlua3MvaHR0cExpbmsubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBcUQ7QUFDa0I7QUFDQTtBQUN5QjtBQUNuRTs7QUFFN0I7QUFDQTtBQUNBLDZCQUE2QiwwREFBc0I7QUFDbkQsNkJBQTZCLEtBQUssR0FBRyxtRUFBVTtBQUMvQyw0QkFBNEIsdUJBQXVCO0FBQ25ELDRCQUE0QixvQkFBb0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsZ0VBQWU7QUFDM0Q7QUFDQSwyQ0FBMkMsNERBQWU7QUFDMUQ7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLHFCQUFxQjtBQUNyQix1Q0FBdUMsNERBQWU7QUFDdEQ7QUFDQSx5QkFBeUI7QUFDekIscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzREFBaUI7QUFDaEMsQ0FBQzs7QUFFb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9icmFpbnJvdC12aWRlby1nZW4vLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvbGlua3MvaHR0cExpbmsubWpzPzZmZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgb2JzZXJ2YWJsZSB9IGZyb20gJ0B0cnBjL3NlcnZlci9vYnNlcnZhYmxlJztcbmltcG9ydCB7IHQgYXMgdHJhbnNmb3JtUmVzdWx0IH0gZnJvbSAnLi4vdHJhbnNmb3JtUmVzdWx0LWFjZTg2NGI4Lm1qcyc7XG5pbXBvcnQgeyBUIGFzIFRSUENDbGllbnRFcnJvciB9IGZyb20gJy4uL1RSUENDbGllbnRFcnJvci0zOGY5YTMyYS5tanMnO1xuaW1wb3J0IHsgciBhcyByZXNvbHZlSFRUUExpbmtPcHRpb25zLCBqIGFzIGpzb25IdHRwUmVxdWVzdGVyIH0gZnJvbSAnLi4vaHR0cFV0aWxzLWI5ZDBjYjQ4Lm1qcyc7XG5pbXBvcnQgJ0B0cnBjL3NlcnZlci9zaGFyZWQnO1xuXG5mdW5jdGlvbiBodHRwTGlua0ZhY3RvcnkoZmFjdG9yeU9wdHMpIHtcbiAgICByZXR1cm4gKG9wdHMpPT57XG4gICAgICAgIGNvbnN0IHJlc29sdmVkT3B0cyA9IHJlc29sdmVIVFRQTGlua09wdGlvbnMob3B0cyk7XG4gICAgICAgIHJldHVybiAocnVudGltZSk9Pih7IG9wICB9KT0+b2JzZXJ2YWJsZSgob2JzZXJ2ZXIpPT57XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcGF0aCAsIGlucHV0ICwgdHlwZSAgfSA9IG9wO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHByb21pc2UgLCBjYW5jZWwgIH0gPSBmYWN0b3J5T3B0cy5yZXF1ZXN0ZXIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4ucmVzb2x2ZWRPcHRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgcnVudGltZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW9wdHMuaGVhZGVycykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb3B0cy5oZWFkZXJzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvcHRzLmhlYWRlcnMoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvcHRzLmhlYWRlcnM7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBsZXQgbWV0YSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgcHJvbWlzZS50aGVuKChyZXMpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRhID0gcmVzLm1ldGE7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm1lZCA9IHRyYW5zZm9ybVJlc3VsdChyZXMuanNvbiwgcnVudGltZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRyYW5zZm9ybWVkLm9rKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIuZXJyb3IoVFJQQ0NsaWVudEVycm9yLmZyb20odHJhbnNmb3JtZWQuZXJyb3IsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0YVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5uZXh0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0OiByZXMubWV0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQ6IHRyYW5zZm9ybWVkLnJlc3VsdFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaCgoY2F1c2UpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5lcnJvcihUUlBDQ2xpZW50RXJyb3IuZnJvbShjYXVzZSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGFcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsKCk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgfTtcbn1cbi8qKlxuICogQHNlZSBodHRwczovL3RycGMuaW8vZG9jcy9jbGllbnQvbGlua3MvaHR0cExpbmtcbiAqLyBjb25zdCBodHRwTGluayA9IGh0dHBMaW5rRmFjdG9yeSh7XG4gICAgcmVxdWVzdGVyOiBqc29uSHR0cFJlcXVlc3RlclxufSk7XG5cbmV4cG9ydCB7IGh0dHBMaW5rLCBodHRwTGlua0ZhY3RvcnkgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/links/httpLink.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/links/loggerLink.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/links/loggerLink.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loggerLink: () => (/* binding */ loggerLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n\n\n/// <reference lib=\"dom.iterable\" />\nfunction isFormData(value) {\n    if (typeof FormData === 'undefined') {\n        // FormData is not supported\n        return false;\n    }\n    return value instanceof FormData;\n}\nconst palettes = {\n    css: {\n        query: [\n            '72e3ff',\n            '3fb0d8'\n        ],\n        mutation: [\n            'c5a3fc',\n            '904dfc'\n        ],\n        subscription: [\n            'ff49e1',\n            'd83fbe'\n        ]\n    },\n    ansi: {\n        regular: {\n            // Cyan background, black and white text respectively\n            query: [\n                '\\x1b[30;46m',\n                '\\x1b[97;46m'\n            ],\n            // Magenta background, black and white text respectively\n            mutation: [\n                '\\x1b[30;45m',\n                '\\x1b[97;45m'\n            ],\n            // Green background, black and white text respectively\n            subscription: [\n                '\\x1b[30;42m',\n                '\\x1b[97;42m'\n            ]\n        },\n        bold: {\n            query: [\n                '\\x1b[1;30;46m',\n                '\\x1b[1;97;46m'\n            ],\n            mutation: [\n                '\\x1b[1;30;45m',\n                '\\x1b[1;97;45m'\n            ],\n            subscription: [\n                '\\x1b[1;30;42m',\n                '\\x1b[1;97;42m'\n            ]\n        }\n    }\n};\nfunction constructPartsAndArgs(opts) {\n    const { direction , type , path , id , input  } = opts;\n    const parts = [];\n    const args = [];\n    if (opts.colorMode === 'ansi') {\n        const [lightRegular, darkRegular] = palettes.ansi.regular[type];\n        const [lightBold, darkBold] = palettes.ansi.bold[type];\n        const reset = '\\x1b[0m';\n        parts.push(direction === 'up' ? lightRegular : darkRegular, direction === 'up' ? '>>' : '<<', type, direction === 'up' ? lightBold : darkBold, `#${id}`, path, reset);\n        if (direction === 'up') {\n            args.push({\n                input: opts.input\n            });\n        } else {\n            args.push({\n                input: opts.input,\n                // strip context from result cause it's too noisy in terminal wihtout collapse mode\n                result: 'result' in opts.result ? opts.result.result : opts.result,\n                elapsedMs: opts.elapsedMs\n            });\n        }\n        return {\n            parts,\n            args\n        };\n    }\n    const [light, dark] = palettes.css[type];\n    const css = `\n    background-color: #${direction === 'up' ? light : dark}; \n    color: ${direction === 'up' ? 'black' : 'white'};\n    padding: 2px;\n  `;\n    parts.push('%c', direction === 'up' ? '>>' : '<<', type, `#${id}`, `%c${path}%c`, '%O');\n    args.push(css, `${css}; font-weight: bold;`, `${css}; font-weight: normal;`);\n    if (direction === 'up') {\n        args.push({\n            input,\n            context: opts.context\n        });\n    } else {\n        args.push({\n            input,\n            result: opts.result,\n            elapsedMs: opts.elapsedMs,\n            context: opts.context\n        });\n    }\n    return {\n        parts,\n        args\n    };\n}\n// maybe this should be moved to it's own package\nconst defaultLogger = ({ c =console , colorMode ='css'  })=>(props)=>{\n        const rawInput = props.input;\n        const input = isFormData(rawInput) ? Object.fromEntries(rawInput) : rawInput;\n        const { parts , args  } = constructPartsAndArgs({\n            ...props,\n            colorMode,\n            input\n        });\n        const fn = props.direction === 'down' && props.result && (props.result instanceof Error || 'error' in props.result.result) ? 'error' : 'log';\n        c[fn].apply(null, [\n            parts.join(' ')\n        ].concat(args));\n    };\n/**\n * @see https://trpc.io/docs/client/links/loggerLink\n */ function loggerLink(opts = {}) {\n    const { enabled =()=>true  } = opts;\n    const colorMode = opts.colorMode ?? (typeof window === 'undefined' ? 'ansi' : 'css');\n    const { logger =defaultLogger({\n        c: opts.console,\n        colorMode\n    })  } = opts;\n    return ()=>{\n        return ({ op , next  })=>{\n            return (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n                // ->\n                enabled({\n                    ...op,\n                    direction: 'up'\n                }) && logger({\n                    ...op,\n                    direction: 'up'\n                });\n                const requestStartTime = Date.now();\n                function logResult(result) {\n                    const elapsedMs = Date.now() - requestStartTime;\n                    enabled({\n                        ...op,\n                        direction: 'down',\n                        result\n                    }) && logger({\n                        ...op,\n                        direction: 'down',\n                        elapsedMs,\n                        result\n                    });\n                }\n                return next(op).pipe((0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.tap)({\n                    next (result) {\n                        logResult(result);\n                    },\n                    error (result) {\n                        logResult(result);\n                    }\n                })).subscribe(observer);\n            });\n        };\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/links/loggerLink.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/links/wsLink.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@trpc/client/dist/links/wsLink.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWSClient: () => (/* binding */ createWSClient),\n/* harmony export */   wsLink: () => (/* binding */ wsLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n/* harmony import */ var _transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transformResult-ace864b8.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\");\n/* harmony import */ var _TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TRPCClientError-38f9a32a.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs\");\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n\n\n\n\n\n/* istanbul ignore next -- @preserve */ const retryDelay = (attemptIndex)=>attemptIndex === 0 ? 0 : Math.min(1000 * 2 ** attemptIndex, 30000);\n\nfunction createWSClient(opts) {\n    const { url , WebSocket: WebSocketImpl = WebSocket , retryDelayMs: retryDelayFn = retryDelay , onOpen , onClose ,  } = opts;\n    /* istanbul ignore next -- @preserve */ if (!WebSocketImpl) {\n        throw new Error(\"No WebSocket implementation found - you probably don't want to use this on the server, but if you do you need to pass a `WebSocket`-ponyfill\");\n    }\n    /**\n   * outgoing messages buffer whilst not open\n   */ let outgoing = [];\n    const pendingRequests = Object.create(null);\n    let connectAttempt = 0;\n    let dispatchTimer = null;\n    let connectTimer = null;\n    let activeConnection = createWS();\n    let state = 'connecting';\n    /**\n   * tries to send the list of messages\n   */ function dispatch() {\n        if (state !== 'open' || dispatchTimer) {\n            return;\n        }\n        dispatchTimer = setTimeout(()=>{\n            dispatchTimer = null;\n            if (outgoing.length === 1) {\n                // single send\n                activeConnection.send(JSON.stringify(outgoing.pop()));\n            } else {\n                // batch send\n                activeConnection.send(JSON.stringify(outgoing));\n            }\n            // clear\n            outgoing = [];\n        });\n    }\n    function tryReconnect() {\n        if (connectTimer !== null || state === 'closed') {\n            return;\n        }\n        const timeout = retryDelayFn(connectAttempt++);\n        reconnectInMs(timeout);\n    }\n    function reconnect() {\n        state = 'connecting';\n        const oldConnection = activeConnection;\n        activeConnection = createWS();\n        closeIfNoPending(oldConnection);\n    }\n    function reconnectInMs(ms) {\n        if (connectTimer) {\n            return;\n        }\n        state = 'connecting';\n        connectTimer = setTimeout(reconnect, ms);\n    }\n    function closeIfNoPending(conn) {\n        // disconnect as soon as there are are no pending result\n        const hasPendingRequests = Object.values(pendingRequests).some((p)=>p.ws === conn);\n        if (!hasPendingRequests) {\n            conn.close();\n        }\n    }\n    function closeActiveSubscriptions() {\n        Object.values(pendingRequests).forEach((req)=>{\n            if (req.type === 'subscription') {\n                req.callbacks.complete();\n            }\n        });\n    }\n    function resumeSubscriptionOnReconnect(req) {\n        if (outgoing.some((r)=>r.id === req.op.id)) {\n            return;\n        }\n        request(req.op, req.callbacks);\n    }\n    function createWS() {\n        const urlString = typeof url === 'function' ? url() : url;\n        const conn = new WebSocketImpl(urlString);\n        clearTimeout(connectTimer);\n        connectTimer = null;\n        conn.addEventListener('open', ()=>{\n            /* istanbul ignore next -- @preserve */ if (conn !== activeConnection) {\n                return;\n            }\n            connectAttempt = 0;\n            state = 'open';\n            onOpen?.();\n            dispatch();\n        });\n        conn.addEventListener('error', ()=>{\n            if (conn === activeConnection) {\n                tryReconnect();\n            }\n        });\n        const handleIncomingRequest = (req)=>{\n            if (req.method === 'reconnect' && conn === activeConnection) {\n                if (state === 'open') {\n                    onClose?.();\n                }\n                reconnect();\n                // notify subscribers\n                for (const pendingReq of Object.values(pendingRequests)){\n                    if (pendingReq.type === 'subscription') {\n                        resumeSubscriptionOnReconnect(pendingReq);\n                    }\n                }\n            }\n        };\n        const handleIncomingResponse = (data)=>{\n            const req = data.id !== null && pendingRequests[data.id];\n            if (!req) {\n                // do something?\n                return;\n            }\n            req.callbacks.next?.(data);\n            if (req.ws !== activeConnection && conn === activeConnection) {\n                const oldWs = req.ws;\n                // gracefully replace old connection with this\n                req.ws = activeConnection;\n                closeIfNoPending(oldWs);\n            }\n            if ('result' in data && data.result.type === 'stopped' && conn === activeConnection) {\n                req.callbacks.complete();\n            }\n        };\n        conn.addEventListener('message', ({ data  })=>{\n            const msg = JSON.parse(data);\n            if ('method' in msg) {\n                handleIncomingRequest(msg);\n            } else {\n                handleIncomingResponse(msg);\n            }\n            if (conn !== activeConnection || state === 'closed') {\n                // when receiving a message, we close old connection that has no pending requests\n                closeIfNoPending(conn);\n            }\n        });\n        conn.addEventListener('close', ({ code  })=>{\n            if (state === 'open') {\n                onClose?.({\n                    code\n                });\n            }\n            if (activeConnection === conn) {\n                // connection might have been replaced already\n                tryReconnect();\n            }\n            for (const [key, req] of Object.entries(pendingRequests)){\n                if (req.ws !== conn) {\n                    continue;\n                }\n                if (state === 'closed') {\n                    // If the connection was closed, we just call `complete()` on the request\n                    delete pendingRequests[key];\n                    req.callbacks.complete?.();\n                    continue;\n                }\n                // The connection was closed either unexpectedly or because of a reconnect\n                if (req.type === 'subscription') {\n                    // Subscriptions will resume after we've reconnected\n                    resumeSubscriptionOnReconnect(req);\n                } else {\n                    // Queries and mutations will error if interrupted\n                    delete pendingRequests[key];\n                    req.callbacks.error?.(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(new TRPCWebSocketClosedError('WebSocket closed prematurely')));\n                }\n            }\n        });\n        return conn;\n    }\n    function request(op, callbacks) {\n        const { type , input , path , id  } = op;\n        const envelope = {\n            id,\n            method: type,\n            params: {\n                input,\n                path\n            }\n        };\n        pendingRequests[id] = {\n            ws: activeConnection,\n            type,\n            callbacks,\n            op\n        };\n        // enqueue message\n        outgoing.push(envelope);\n        dispatch();\n        return ()=>{\n            const callbacks = pendingRequests[id]?.callbacks;\n            delete pendingRequests[id];\n            outgoing = outgoing.filter((msg)=>msg.id !== id);\n            callbacks?.complete?.();\n            if (activeConnection.readyState === WebSocketImpl.OPEN && op.type === 'subscription') {\n                outgoing.push({\n                    id,\n                    method: 'subscription.stop'\n                });\n                dispatch();\n            }\n        };\n    }\n    return {\n        close: ()=>{\n            state = 'closed';\n            onClose?.();\n            closeActiveSubscriptions();\n            closeIfNoPending(activeConnection);\n            clearTimeout(connectTimer);\n            connectTimer = null;\n        },\n        request,\n        getConnection () {\n            return activeConnection;\n        }\n    };\n}\nclass TRPCWebSocketClosedError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'TRPCWebSocketClosedError';\n        Object.setPrototypeOf(this, TRPCWebSocketClosedError.prototype);\n    }\n}\n/**\n * @see https://trpc.io/docs/client/links/wsLink\n */ function wsLink(opts) {\n    return (runtime)=>{\n        const { client  } = opts;\n        return ({ op  })=>{\n            return (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n                const { type , path , id , context  } = op;\n                const input = runtime.transformer.serialize(op.input);\n                const unsub = client.request({\n                    type,\n                    path,\n                    input,\n                    id,\n                    context\n                }, {\n                    error (err) {\n                        observer.error(err);\n                        unsub();\n                    },\n                    complete () {\n                        observer.complete();\n                    },\n                    next (message) {\n                        const transformed = (0,_transformResult_ace864b8_mjs__WEBPACK_IMPORTED_MODULE_1__.t)(message, runtime);\n                        if (!transformed.ok) {\n                            observer.error(_TRPCClientError_38f9a32a_mjs__WEBPACK_IMPORTED_MODULE_2__.T.from(transformed.error));\n                            return;\n                        }\n                        observer.next({\n                            result: transformed.result\n                        });\n                        if (op.type !== 'subscription') {\n                            // if it isn't a subscription we don't care about next response\n                            unsub();\n                            observer.complete();\n                        }\n                    }\n                });\n                return ()=>{\n                    unsub();\n                };\n            });\n        };\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/links/wsLink.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/splitLink-4c75f7be.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/splitLink-4c75f7be.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ createChain),\n/* harmony export */   s: () => (/* binding */ splitLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\");\n\n\n/** @internal */ function createChain(opts) {\n    return (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n        function execute(index = 0, op = opts.op) {\n            const next = opts.links[index];\n            if (!next) {\n                throw new Error('No more links to execute - did you forget to add an ending link?');\n            }\n            const subscription = next({\n                op,\n                next (nextOp) {\n                    const nextObserver = execute(index + 1, nextOp);\n                    return nextObserver;\n                }\n            });\n            return subscription;\n        }\n        const obs$ = execute();\n        return obs$.subscribe(observer);\n    });\n}\n\nfunction asArray(value) {\n    return Array.isArray(value) ? value : [\n        value\n    ];\n}\nfunction splitLink(opts) {\n    return (runtime)=>{\n        const yes = asArray(opts.true).map((link)=>link(runtime));\n        const no = asArray(opts.false).map((link)=>link(runtime));\n        return (props)=>{\n            return (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer)=>{\n                const links = opts.condition(props.op) ? yes : no;\n                return createChain({\n                    op: props.op,\n                    links\n                }).subscribe(observer);\n            });\n        };\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3Qvc3BsaXRMaW5rLTRjNzVmN2JlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7O0FBRXJEO0FBQ0EsV0FBVyxtRUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1FQUFVO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnJhaW5yb3QtdmlkZW8tZ2VuLy4vbm9kZV9tb2R1bGVzL0B0cnBjL2NsaWVudC9kaXN0L3NwbGl0TGluay00Yzc1ZjdiZS5tanM/NDYwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBvYnNlcnZhYmxlIH0gZnJvbSAnQHRycGMvc2VydmVyL29ic2VydmFibGUnO1xuXG4vKiogQGludGVybmFsICovIGZ1bmN0aW9uIGNyZWF0ZUNoYWluKG9wdHMpIHtcbiAgICByZXR1cm4gb2JzZXJ2YWJsZSgob2JzZXJ2ZXIpPT57XG4gICAgICAgIGZ1bmN0aW9uIGV4ZWN1dGUoaW5kZXggPSAwLCBvcCA9IG9wdHMub3ApIHtcbiAgICAgICAgICAgIGNvbnN0IG5leHQgPSBvcHRzLmxpbmtzW2luZGV4XTtcbiAgICAgICAgICAgIGlmICghbmV4dCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gbW9yZSBsaW5rcyB0byBleGVjdXRlIC0gZGlkIHlvdSBmb3JnZXQgdG8gYWRkIGFuIGVuZGluZyBsaW5rPycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gbmV4dCh7XG4gICAgICAgICAgICAgICAgb3AsXG4gICAgICAgICAgICAgICAgbmV4dCAobmV4dE9wKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5leHRPYnNlcnZlciA9IGV4ZWN1dGUoaW5kZXggKyAxLCBuZXh0T3ApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV4dE9ic2VydmVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHN1YnNjcmlwdGlvbjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvYnMkID0gZXhlY3V0ZSgpO1xuICAgICAgICByZXR1cm4gb2JzJC5zdWJzY3JpYmUob2JzZXJ2ZXIpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBhc0FycmF5KHZhbHVlKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiBbXG4gICAgICAgIHZhbHVlXG4gICAgXTtcbn1cbmZ1bmN0aW9uIHNwbGl0TGluayhvcHRzKSB7XG4gICAgcmV0dXJuIChydW50aW1lKT0+e1xuICAgICAgICBjb25zdCB5ZXMgPSBhc0FycmF5KG9wdHMudHJ1ZSkubWFwKChsaW5rKT0+bGluayhydW50aW1lKSk7XG4gICAgICAgIGNvbnN0IG5vID0gYXNBcnJheShvcHRzLmZhbHNlKS5tYXAoKGxpbmspPT5saW5rKHJ1bnRpbWUpKTtcbiAgICAgICAgcmV0dXJuIChwcm9wcyk9PntcbiAgICAgICAgICAgIHJldHVybiBvYnNlcnZhYmxlKChvYnNlcnZlcik9PntcbiAgICAgICAgICAgICAgICBjb25zdCBsaW5rcyA9IG9wdHMuY29uZGl0aW9uKHByb3BzLm9wKSA/IHllcyA6IG5vO1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDaGFpbih7XG4gICAgICAgICAgICAgICAgICAgIG9wOiBwcm9wcy5vcCxcbiAgICAgICAgICAgICAgICAgICAgbGlua3NcbiAgICAgICAgICAgICAgICB9KS5zdWJzY3JpYmUob2JzZXJ2ZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgfTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQ2hhaW4gYXMgYywgc3BsaXRMaW5rIGFzIHMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/splitLink-4c75f7be.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ isObject),\n/* harmony export */   t: () => (/* binding */ transformResult)\n/* harmony export */ });\nfunction isObject(value) {\n    // check that value is object\n    return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n\n// FIXME:\n// - the generics here are probably unnecessary\n// - the RPC-spec could probably be simplified to combine HTTP + WS\n/** @internal */ function transformResultInner(response, runtime) {\n    if ('error' in response) {\n        const error = runtime.transformer.deserialize(response.error);\n        return {\n            ok: false,\n            error: {\n                ...response,\n                error\n            }\n        };\n    }\n    const result = {\n        ...response.result,\n        ...(!response.result.type || response.result.type === 'data') && {\n            type: 'data',\n            data: runtime.transformer.deserialize(response.result.data)\n        }\n    };\n    return {\n        ok: true,\n        result\n    };\n}\nclass TransformResultError extends Error {\n    constructor(){\n        super('Unable to transform response from server');\n    }\n}\n/**\n * Transforms and validates that the result is a valid TRPCResponse\n * @internal\n */ function transformResult(response, runtime) {\n    let result;\n    try {\n        // Use the data transformers on the JSON-response\n        result = transformResultInner(response, runtime);\n    } catch (err) {\n        throw new TransformResultError();\n    }\n    // check that output of the transformers is a valid TRPCResponse\n    if (!result.ok && (!isObject(result.error.error) || typeof result.error.error.code !== 'number')) {\n        throw new TransformResultError();\n    }\n    if (result.ok && !isObject(result.result)) {\n        throw new TransformResultError();\n    }\n    return result;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvdHJhbnNmb3JtUmVzdWx0LWFjZTg2NGI4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9jbGllbnQvZGlzdC90cmFuc2Zvcm1SZXN1bHQtYWNlODY0YjgubWpzP2VlOGUiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpIHtcbiAgICAvLyBjaGVjayB0aGF0IHZhbHVlIGlzIG9iamVjdFxuICAgIHJldHVybiAhIXZhbHVlICYmICFBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnO1xufVxuXG4vLyBGSVhNRTpcbi8vIC0gdGhlIGdlbmVyaWNzIGhlcmUgYXJlIHByb2JhYmx5IHVubmVjZXNzYXJ5XG4vLyAtIHRoZSBSUEMtc3BlYyBjb3VsZCBwcm9iYWJseSBiZSBzaW1wbGlmaWVkIHRvIGNvbWJpbmUgSFRUUCArIFdTXG4vKiogQGludGVybmFsICovIGZ1bmN0aW9uIHRyYW5zZm9ybVJlc3VsdElubmVyKHJlc3BvbnNlLCBydW50aW1lKSB7XG4gICAgaWYgKCdlcnJvcicgaW4gcmVzcG9uc2UpIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBydW50aW1lLnRyYW5zZm9ybWVyLmRlc2VyaWFsaXplKHJlc3BvbnNlLmVycm9yKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG9rOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgICAgICAgLi4ucmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgZXJyb3JcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICAuLi5yZXNwb25zZS5yZXN1bHQsXG4gICAgICAgIC4uLighcmVzcG9uc2UucmVzdWx0LnR5cGUgfHwgcmVzcG9uc2UucmVzdWx0LnR5cGUgPT09ICdkYXRhJykgJiYge1xuICAgICAgICAgICAgdHlwZTogJ2RhdGEnLFxuICAgICAgICAgICAgZGF0YTogcnVudGltZS50cmFuc2Zvcm1lci5kZXNlcmlhbGl6ZShyZXNwb25zZS5yZXN1bHQuZGF0YSlcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb2s6IHRydWUsXG4gICAgICAgIHJlc3VsdFxuICAgIH07XG59XG5jbGFzcyBUcmFuc2Zvcm1SZXN1bHRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcignVW5hYmxlIHRvIHRyYW5zZm9ybSByZXNwb25zZSBmcm9tIHNlcnZlcicpO1xuICAgIH1cbn1cbi8qKlxuICogVHJhbnNmb3JtcyBhbmQgdmFsaWRhdGVzIHRoYXQgdGhlIHJlc3VsdCBpcyBhIHZhbGlkIFRSUENSZXNwb25zZVxuICogQGludGVybmFsXG4gKi8gZnVuY3Rpb24gdHJhbnNmb3JtUmVzdWx0KHJlc3BvbnNlLCBydW50aW1lKSB7XG4gICAgbGV0IHJlc3VsdDtcbiAgICB0cnkge1xuICAgICAgICAvLyBVc2UgdGhlIGRhdGEgdHJhbnNmb3JtZXJzIG9uIHRoZSBKU09OLXJlc3BvbnNlXG4gICAgICAgIHJlc3VsdCA9IHRyYW5zZm9ybVJlc3VsdElubmVyKHJlc3BvbnNlLCBydW50aW1lKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRyYW5zZm9ybVJlc3VsdEVycm9yKCk7XG4gICAgfVxuICAgIC8vIGNoZWNrIHRoYXQgb3V0cHV0IG9mIHRoZSB0cmFuc2Zvcm1lcnMgaXMgYSB2YWxpZCBUUlBDUmVzcG9uc2VcbiAgICBpZiAoIXJlc3VsdC5vayAmJiAoIWlzT2JqZWN0KHJlc3VsdC5lcnJvci5lcnJvcikgfHwgdHlwZW9mIHJlc3VsdC5lcnJvci5lcnJvci5jb2RlICE9PSAnbnVtYmVyJykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRyYW5zZm9ybVJlc3VsdEVycm9yKCk7XG4gICAgfVxuICAgIGlmIChyZXN1bHQub2sgJiYgIWlzT2JqZWN0KHJlc3VsdC5yZXN1bHQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUcmFuc2Zvcm1SZXN1bHRFcnJvcigpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgeyBpc09iamVjdCBhcyBpLCB0cmFuc2Zvcm1SZXN1bHQgYXMgdCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/transformResult-ace864b8.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/react-query/dist/createHooksInternal-063195fc.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@trpc/react-query/dist/createHooksInternal-063195fc.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPCContext),\n/* harmony export */   a: () => (/* binding */ createReactQueryUtilsProxy),\n/* harmony export */   b: () => (/* binding */ createReactProxyDecoration),\n/* harmony export */   c: () => (/* binding */ createHooksInternal),\n/* harmony export */   d: () => (/* binding */ getClientArgs),\n/* harmony export */   e: () => (/* binding */ createUseQueriesProxy),\n/* harmony export */   f: () => (/* binding */ createRootHooks),\n/* harmony export */   g: () => (/* binding */ getQueryKey),\n/* harmony export */   h: () => (/* binding */ contextProps)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n/* harmony import */ var _getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getArrayQueryKey-86134f8b.mjs */ \"(ssr)/./node_modules/@trpc/react-query/dist/getArrayQueryKey-86134f8b.mjs\");\n/* harmony import */ var _trpc_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/client */ \"(ssr)/./node_modules/@trpc/client/dist/index.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/lib/useQuery.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/lib/useMutation.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/lib/useQueries.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\n\n\n\n\n/**\n * We treat `undefined` as an input the same as omitting an `input`\n * https://github.com/trpc/trpc/issues/2290\n */ function getQueryKeyInternal(path, input) {\n    if (path.length) return input === undefined ? [\n        path\n    ] : [\n        path,\n        input\n    ];\n    return [];\n}\n/**\n * Method to extract the query key for a procedure\n * @param procedureOrRouter - procedure or AnyRouter\n * @param input - input to procedureOrRouter\n * @param type - defaults to `any`\n * @link https://trpc.io/docs/getQueryKey\n */ function getQueryKey(..._params) {\n    const [procedureOrRouter, input, type] = _params;\n    // @ts-expect-error - we don't expose _def on the type layer\n    const path = procedureOrRouter._def().path;\n    const dotPath = path.join('.');\n    const queryKey = (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(getQueryKeyInternal(dotPath, input), type ?? 'any');\n    return queryKey;\n}\n\n/**\n * Create proxy for decorating procedures\n * @internal\n */ function createReactProxyDecoration(name, hooks) {\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__.createRecursiveProxy)((opts)=>{\n        const args = opts.args;\n        const pathCopy = [\n            name,\n            ...opts.path\n        ];\n        // The last arg is for instance `.useMutation` or `.useQuery()`\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const lastArg = pathCopy.pop();\n        // The `path` ends up being something like `post.byId`\n        const path = pathCopy.join('.');\n        if (lastArg === 'useMutation') {\n            return hooks[lastArg](path, ...args);\n        }\n        const [input, ...rest] = args;\n        const queryKey = getQueryKeyInternal(path, input);\n        // Expose queryKey helper\n        if (lastArg === 'getQueryKey') {\n            return (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, rest[0] ?? 'any');\n        }\n        if (lastArg === '_def') {\n            return {\n                path: pathCopy\n            };\n        }\n        if (lastArg.startsWith('useSuspense')) {\n            const opts1 = rest[0] || {};\n            const fn = lastArg === 'useSuspenseQuery' ? 'useQuery' : 'useInfiniteQuery';\n            const result = hooks[fn](queryKey, {\n                ...opts1,\n                suspense: true,\n                enabled: true\n            });\n            return [\n                result.data,\n                result\n            ];\n        }\n        return hooks[lastArg](queryKey, ...rest);\n    });\n}\n\nconst contextProps = [\n    'client',\n    'ssrContext',\n    'ssrState',\n    'abortOnUnmount'\n];\nconst TRPCContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\n\n/**\n * @internal\n */ function createReactQueryUtilsProxy(context) {\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__.createFlatProxy)((key)=>{\n        const contextName = key;\n        if (contextName === 'client') {\n            return (0,_trpc_client__WEBPACK_IMPORTED_MODULE_2__.createTRPCClientProxy)(context.client);\n        }\n        if (contextProps.includes(contextName)) {\n            return context[contextName];\n        }\n        return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__.createRecursiveProxy)(({ path , args  })=>{\n            const pathCopy = [\n                key,\n                ...path\n            ];\n            const utilName = pathCopy.pop();\n            const fullPath = pathCopy.join('.');\n            const getOpts = (name)=>{\n                if ([\n                    'setData',\n                    'setInfiniteData'\n                ].includes(name)) {\n                    const [input, updater, ...rest] = args;\n                    const queryKey = getQueryKeyInternal(fullPath, input);\n                    return {\n                        queryKey,\n                        updater,\n                        rest\n                    };\n                }\n                const [input1, ...rest1] = args;\n                const queryKey1 = getQueryKeyInternal(fullPath, input1);\n                return {\n                    queryKey: queryKey1,\n                    rest: rest1\n                };\n            };\n            const { queryKey , rest , updater  } = getOpts(utilName);\n            const contextMap = {\n                fetch: ()=>context.fetchQuery(queryKey, ...rest),\n                fetchInfinite: ()=>context.fetchInfiniteQuery(queryKey, ...rest),\n                prefetch: ()=>context.prefetchQuery(queryKey, ...rest),\n                prefetchInfinite: ()=>context.prefetchInfiniteQuery(queryKey, ...rest),\n                ensureData: ()=>context.ensureQueryData(queryKey, ...rest),\n                invalidate: ()=>context.invalidateQueries(queryKey, ...rest),\n                reset: ()=>context.resetQueries(queryKey, ...rest),\n                refetch: ()=>context.refetchQueries(queryKey, ...rest),\n                cancel: ()=>context.cancelQuery(queryKey, ...rest),\n                setData: ()=>{\n                    context.setQueryData(queryKey, updater, ...rest);\n                },\n                setInfiniteData: ()=>{\n                    context.setInfiniteQueryData(queryKey, updater, ...rest);\n                },\n                getData: ()=>context.getQueryData(queryKey),\n                getInfiniteData: ()=>context.getInfiniteQueryData(queryKey)\n            };\n            return contextMap[utilName]();\n        });\n    });\n}\n\n/**\n * Create proxy for `useQueries` options\n * @internal\n */ function createUseQueriesProxy(client) {\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_0__.createRecursiveProxy)((opts)=>{\n        const path = opts.path.join('.');\n        const [input, _opts] = opts.args;\n        const queryKey = getQueryKeyInternal(path, input);\n        const options = {\n            queryKey,\n            queryFn: ()=>{\n                return client.query(path, input, _opts?.trpc);\n            },\n            ..._opts\n        };\n        return options;\n    });\n}\n\nfunction getClientArgs(pathAndInput, opts) {\n    const [path, input] = pathAndInput;\n    return [\n        path,\n        input,\n        opts?.trpc\n    ];\n}\n\n/**\n * Makes a stable reference of the `trpc` prop\n */ function useHookResult(value) {\n    const { path  } = value;\n    return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(()=>({\n            path\n        }), [\n        path\n    ]);\n}\n\n/**\n * @internal\n */ function createRootHooks(config) {\n    const mutationSuccessOverride = (config?.overrides ?? config?.unstable_overrides)?.useMutation?.onSuccess ?? ((options)=>options.originalFn());\n    const Context = config?.context ?? TRPCContext;\n    const ReactQueryContext = config?.reactQueryContext;\n    const createClient = (opts)=>{\n        return (0,_trpc_client__WEBPACK_IMPORTED_MODULE_2__.createTRPCClient)(opts);\n    };\n    const TRPCProvider = (props)=>{\n        const { abortOnUnmount =false , client , queryClient , ssrContext  } = props;\n        const [ssrState, setSSRState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(props.ssrState ?? false);\n        (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n            // Only updating state to `mounted` if we are using SSR.\n            // This makes it so we don't have an unnecessary re-render when opting out of SSR.\n            setSSRState((state)=>state ? 'mounted' : false);\n        }, []);\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.createElement(Context.Provider, {\n            value: {\n                abortOnUnmount,\n                queryClient,\n                client,\n                ssrContext: ssrContext ?? null,\n                ssrState,\n                fetchQuery: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput, opts)=>{\n                    return queryClient.fetchQuery({\n                        ...opts,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'),\n                        queryFn: ()=>client.query(...getClientArgs(pathAndInput, opts))\n                    });\n                }, [\n                    client,\n                    queryClient\n                ]),\n                fetchInfiniteQuery: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput, opts)=>{\n                    return queryClient.fetchInfiniteQuery({\n                        ...opts,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'infinite'),\n                        queryFn: ({ pageParam  })=>{\n                            const [path, input] = pathAndInput;\n                            const actualInput = {\n                                ...input,\n                                cursor: pageParam\n                            };\n                            return client.query(...getClientArgs([\n                                path,\n                                actualInput\n                            ], opts));\n                        }\n                    });\n                }, [\n                    client,\n                    queryClient\n                ]),\n                prefetchQuery: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput, opts)=>{\n                    return queryClient.prefetchQuery({\n                        ...opts,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'),\n                        queryFn: ()=>client.query(...getClientArgs(pathAndInput, opts))\n                    });\n                }, [\n                    client,\n                    queryClient\n                ]),\n                prefetchInfiniteQuery: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput, opts)=>{\n                    return queryClient.prefetchInfiniteQuery({\n                        ...opts,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'infinite'),\n                        queryFn: ({ pageParam  })=>{\n                            const [path, input] = pathAndInput;\n                            const actualInput = {\n                                ...input,\n                                cursor: pageParam\n                            };\n                            return client.query(...getClientArgs([\n                                path,\n                                actualInput\n                            ], opts));\n                        }\n                    });\n                }, [\n                    client,\n                    queryClient\n                ]),\n                ensureQueryData: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput, opts)=>{\n                    return queryClient.ensureQueryData({\n                        ...opts,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'),\n                        queryFn: ()=>client.query(...getClientArgs(pathAndInput, opts))\n                    });\n                }, [\n                    client,\n                    queryClient\n                ]),\n                invalidateQueries: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((queryKey, filters, options)=>{\n                    return queryClient.invalidateQueries({\n                        ...filters,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'any')\n                    }, options);\n                }, [\n                    queryClient\n                ]),\n                resetQueries: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, filters, options] = args;\n                    return queryClient.resetQueries({\n                        ...filters,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'any')\n                    }, options);\n                }, [\n                    queryClient\n                ]),\n                refetchQueries: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, filters, options] = args;\n                    return queryClient.refetchQueries({\n                        ...filters,\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'any')\n                    }, options);\n                }, [\n                    queryClient\n                ]),\n                cancelQuery: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((pathAndInput)=>{\n                    return queryClient.cancelQueries({\n                        queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'any')\n                    });\n                }, [\n                    queryClient\n                ]),\n                setQueryData: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, ...rest] = args;\n                    return queryClient.setQueryData((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'query'), ...rest);\n                }, [\n                    queryClient\n                ]),\n                getQueryData: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, ...rest] = args;\n                    return queryClient.getQueryData((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'query'), ...rest);\n                }, [\n                    queryClient\n                ]),\n                setInfiniteQueryData: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, ...rest] = args;\n                    return queryClient.setQueryData((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'infinite'), ...rest);\n                }, [\n                    queryClient\n                ]),\n                getInfiniteQueryData: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args)=>{\n                    const [queryKey, ...rest] = args;\n                    return queryClient.getQueryData((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryKey, 'infinite'), ...rest);\n                }, [\n                    queryClient\n                ])\n            }\n        }, props.children);\n    };\n    function useContext() {\n        return react__WEBPACK_IMPORTED_MODULE_3__.useContext(Context);\n    }\n    /**\n   * Hack to make sure errors return `status`='error` when doing SSR\n   * @link https://github.com/trpc/trpc/pull/1645\n   */ function useSSRQueryOptionsIfNeeded(pathAndInput, type, opts) {\n        const { queryClient , ssrState  } = useContext();\n        return ssrState && ssrState !== 'mounted' && queryClient.getQueryCache().find((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, type))?.state.status === 'error' ? {\n            retryOnMount: false,\n            ...opts\n        } : opts;\n    }\n    function useQuery$1(// FIXME path should be a tuple in next major\n    pathAndInput, opts) {\n        const context = useContext();\n        if (!context) {\n            throw new Error('Unable to retrieve application context. Did you forget to wrap your App inside `withTRPC` HoC?');\n        }\n        const { abortOnUnmount , client , ssrState , queryClient , prefetchQuery  } = context;\n        const defaultOpts = queryClient.getQueryDefaults((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'));\n        if (typeof window === 'undefined' && ssrState === 'prepass' && opts?.trpc?.ssr !== false && (opts?.enabled ?? defaultOpts?.enabled) !== false && !queryClient.getQueryCache().find((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'))) {\n            void prefetchQuery(pathAndInput, opts);\n        }\n        const ssrOpts = useSSRQueryOptionsIfNeeded(pathAndInput, 'query', {\n            ...defaultOpts,\n            ...opts\n        });\n        const shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? config?.abortOnUnmount ?? abortOnUnmount;\n        const hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.useQuery)({\n            ...ssrOpts,\n            queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'query'),\n            queryFn: (queryFunctionContext)=>{\n                const actualOpts = {\n                    ...ssrOpts,\n                    trpc: {\n                        ...ssrOpts?.trpc,\n                        ...shouldAbortOnUnmount ? {\n                            signal: queryFunctionContext.signal\n                        } : {}\n                    }\n                };\n                return client.query(...getClientArgs(pathAndInput, actualOpts));\n            },\n            context: ReactQueryContext\n        });\n        hook.trpc = useHookResult({\n            path: pathAndInput[0]\n        });\n        return hook;\n    }\n    function useMutation$1(// FIXME: this should only be a tuple path in next major\n    path, opts) {\n        const { client  } = useContext();\n        const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.useQueryClient)({\n            context: ReactQueryContext\n        });\n        const actualPath = Array.isArray(path) ? path[0] : path;\n        const defaultOpts = queryClient.getMutationDefaults([\n            actualPath.split('.')\n        ]);\n        const hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_6__.useMutation)({\n            ...opts,\n            mutationKey: [\n                actualPath.split('.')\n            ],\n            mutationFn: (input)=>{\n                return client.mutation(...getClientArgs([\n                    actualPath,\n                    input\n                ], opts));\n            },\n            context: ReactQueryContext,\n            onSuccess (...args) {\n                const originalFn = ()=>opts?.onSuccess?.(...args) ?? defaultOpts?.onSuccess?.(...args);\n                return mutationSuccessOverride({\n                    originalFn,\n                    queryClient,\n                    meta: opts?.meta ?? defaultOpts?.meta ?? {}\n                });\n            }\n        });\n        hook.trpc = useHookResult({\n            path: actualPath\n        });\n        return hook;\n    }\n    /* istanbul ignore next -- @preserve */ function useSubscription(pathAndInput, opts) {\n        const enabled = opts?.enabled ?? true;\n        const queryKey = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.hashQueryKey)(pathAndInput);\n        const { client  } = useContext();\n        const optsRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(opts);\n        optsRef.current = opts;\n        (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n            if (!enabled) {\n                return;\n            }\n            const [path, input] = pathAndInput;\n            let isStopped = false;\n            const subscription = client.subscription(path, input ?? undefined, {\n                onStarted: ()=>{\n                    if (!isStopped) {\n                        optsRef.current.onStarted?.();\n                    }\n                },\n                onData: (data)=>{\n                    if (!isStopped) {\n                        // FIXME this shouldn't be needed as both should be `unknown` in next major\n                        optsRef.current.onData(data);\n                    }\n                },\n                onError: (err)=>{\n                    if (!isStopped) {\n                        optsRef.current.onError?.(err);\n                    }\n                }\n            });\n            return ()=>{\n                isStopped = true;\n                subscription.unsubscribe();\n            };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            queryKey,\n            enabled\n        ]);\n    }\n    function useInfiniteQuery$1(pathAndInput, opts) {\n        const [path, input] = pathAndInput;\n        const { client , ssrState , prefetchInfiniteQuery , queryClient , abortOnUnmount ,  } = useContext();\n        const defaultOpts = queryClient.getQueryDefaults((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'infinite'));\n        if (typeof window === 'undefined' && ssrState === 'prepass' && opts?.trpc?.ssr !== false && (opts?.enabled ?? defaultOpts?.enabled) !== false && !queryClient.getQueryCache().find((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'infinite'))) {\n            void prefetchInfiniteQuery(pathAndInput, {\n                ...defaultOpts,\n                ...opts\n            });\n        }\n        const ssrOpts = useSSRQueryOptionsIfNeeded(pathAndInput, 'infinite', {\n            ...defaultOpts,\n            ...opts\n        });\n        // request option should take priority over global\n        const shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? abortOnUnmount;\n        const hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__.useInfiniteQuery)({\n            ...ssrOpts,\n            queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(pathAndInput, 'infinite'),\n            queryFn: (queryFunctionContext)=>{\n                const actualOpts = {\n                    ...ssrOpts,\n                    trpc: {\n                        ...ssrOpts?.trpc,\n                        ...shouldAbortOnUnmount ? {\n                            signal: queryFunctionContext.signal\n                        } : {}\n                    }\n                };\n                const actualInput = {\n                    ...input ?? {},\n                    cursor: queryFunctionContext.pageParam ?? opts?.initialCursor\n                };\n                // FIXME as any shouldn't be needed as client should be untyped too\n                return client.query(...getClientArgs([\n                    path,\n                    actualInput\n                ], actualOpts));\n            },\n            context: ReactQueryContext\n        });\n        hook.trpc = useHookResult({\n            path\n        });\n        return hook;\n    }\n    const useQueries$1 = (queriesCallback, context)=>{\n        const { ssrState , queryClient , prefetchQuery , client  } = useContext();\n        const proxy = createUseQueriesProxy(client);\n        const queries = queriesCallback(proxy);\n        if (typeof window === 'undefined' && ssrState === 'prepass') {\n            for (const query of queries){\n                const queryOption = query;\n                if (queryOption.trpc?.ssr !== false && !queryClient.getQueryCache().find((0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(queryOption.queryKey, 'query'))) {\n                    void prefetchQuery(queryOption.queryKey, queryOption);\n                }\n            }\n        }\n        return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__.useQueries)({\n            queries: queries.map((query)=>({\n                    ...query,\n                    queryKey: (0,_getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(query.queryKey, 'query')\n                })),\n            context\n        });\n    };\n    const useDehydratedState = (client, trpcState)=>{\n        const transformed = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(()=>{\n            if (!trpcState) {\n                return trpcState;\n            }\n            return client.runtime.transformer.deserialize(trpcState);\n        }, [\n            trpcState,\n            client\n        ]);\n        return transformed;\n    };\n    return {\n        Provider: TRPCProvider,\n        createClient,\n        useContext,\n        useUtils: useContext,\n        useQuery: useQuery$1,\n        useQueries: useQueries$1,\n        useMutation: useMutation$1,\n        useSubscription,\n        useDehydratedState,\n        useInfiniteQuery: useInfiniteQuery$1\n    };\n}\n\n/**\n * Create strongly typed react hooks\n * @internal\n * @deprecated\n */ function createHooksInternal(config) {\n    return createRootHooks(config);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/react-query/dist/createHooksInternal-063195fc.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/react-query/dist/getArrayQueryKey-86134f8b.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@trpc/react-query/dist/getArrayQueryKey-86134f8b.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getArrayQueryKey)\n/* harmony export */ });\n/**\n * To allow easy interactions with groups of related queries, such as\n * invalidating all queries of a router, we use an array as the path when\n * storing in tanstack query. This function converts from the `.` separated\n * path passed around internally by both the legacy and proxy implementation.\n * https://github.com/trpc/trpc/issues/2611\n **/ function getArrayQueryKey(queryKey, type) {\n    const queryKeyArrayed = Array.isArray(queryKey) ? queryKey : [\n        queryKey\n    ];\n    const [path, input] = queryKeyArrayed;\n    const arrayPath = typeof path !== 'string' || path === '' ? [] : path.split('.');\n    // Construct a query key that is easy to destructure and flexible for\n    // partial selecting etc.\n    // https://github.com/trpc/trpc/issues/3128\n    if (!input && (!type || type === 'any')) // for `utils.invalidate()` to match all queries (including vanilla react-query)\n    // we don't want nested array if path is empty, i.e. `[]` instead of `[[]]`\n    return arrayPath.length ? [\n        arrayPath\n    ] : [];\n    return [\n        arrayPath,\n        {\n            ...typeof input !== 'undefined' && {\n                input: input\n            },\n            ...type && type !== 'any' && {\n                type: type\n            }\n        }\n    ];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvcmVhY3QtcXVlcnkvZGlzdC9nZXRBcnJheVF1ZXJ5S2V5LTg2MTM0ZjhiLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9yZWFjdC1xdWVyeS9kaXN0L2dldEFycmF5UXVlcnlLZXktODYxMzRmOGIubWpzPzc5YWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUbyBhbGxvdyBlYXN5IGludGVyYWN0aW9ucyB3aXRoIGdyb3VwcyBvZiByZWxhdGVkIHF1ZXJpZXMsIHN1Y2ggYXNcbiAqIGludmFsaWRhdGluZyBhbGwgcXVlcmllcyBvZiBhIHJvdXRlciwgd2UgdXNlIGFuIGFycmF5IGFzIHRoZSBwYXRoIHdoZW5cbiAqIHN0b3JpbmcgaW4gdGFuc3RhY2sgcXVlcnkuIFRoaXMgZnVuY3Rpb24gY29udmVydHMgZnJvbSB0aGUgYC5gIHNlcGFyYXRlZFxuICogcGF0aCBwYXNzZWQgYXJvdW5kIGludGVybmFsbHkgYnkgYm90aCB0aGUgbGVnYWN5IGFuZCBwcm94eSBpbXBsZW1lbnRhdGlvbi5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS90cnBjL3RycGMvaXNzdWVzLzI2MTFcbiAqKi8gZnVuY3Rpb24gZ2V0QXJyYXlRdWVyeUtleShxdWVyeUtleSwgdHlwZSkge1xuICAgIGNvbnN0IHF1ZXJ5S2V5QXJyYXllZCA9IEFycmF5LmlzQXJyYXkocXVlcnlLZXkpID8gcXVlcnlLZXkgOiBbXG4gICAgICAgIHF1ZXJ5S2V5XG4gICAgXTtcbiAgICBjb25zdCBbcGF0aCwgaW5wdXRdID0gcXVlcnlLZXlBcnJheWVkO1xuICAgIGNvbnN0IGFycmF5UGF0aCA9IHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJyB8fCBwYXRoID09PSAnJyA/IFtdIDogcGF0aC5zcGxpdCgnLicpO1xuICAgIC8vIENvbnN0cnVjdCBhIHF1ZXJ5IGtleSB0aGF0IGlzIGVhc3kgdG8gZGVzdHJ1Y3R1cmUgYW5kIGZsZXhpYmxlIGZvclxuICAgIC8vIHBhcnRpYWwgc2VsZWN0aW5nIGV0Yy5cbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vdHJwYy90cnBjL2lzc3Vlcy8zMTI4XG4gICAgaWYgKCFpbnB1dCAmJiAoIXR5cGUgfHwgdHlwZSA9PT0gJ2FueScpKSAvLyBmb3IgYHV0aWxzLmludmFsaWRhdGUoKWAgdG8gbWF0Y2ggYWxsIHF1ZXJpZXMgKGluY2x1ZGluZyB2YW5pbGxhIHJlYWN0LXF1ZXJ5KVxuICAgIC8vIHdlIGRvbid0IHdhbnQgbmVzdGVkIGFycmF5IGlmIHBhdGggaXMgZW1wdHksIGkuZS4gYFtdYCBpbnN0ZWFkIG9mIGBbW11dYFxuICAgIHJldHVybiBhcnJheVBhdGgubGVuZ3RoID8gW1xuICAgICAgICBhcnJheVBhdGhcbiAgICBdIDogW107XG4gICAgcmV0dXJuIFtcbiAgICAgICAgYXJyYXlQYXRoLFxuICAgICAgICB7XG4gICAgICAgICAgICAuLi50eXBlb2YgaW5wdXQgIT09ICd1bmRlZmluZWQnICYmIHtcbiAgICAgICAgICAgICAgICBpbnB1dDogaW5wdXRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAuLi50eXBlICYmIHR5cGUgIT09ICdhbnknICYmIHtcbiAgICAgICAgICAgICAgICB0eXBlOiB0eXBlXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdO1xufVxuXG5leHBvcnQgeyBnZXRBcnJheVF1ZXJ5S2V5IGFzIGcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/react-query/dist/getArrayQueryKey-86134f8b.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/react-query/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@trpc/react-query/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCClientError: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.TRPCClientError),\n/* harmony export */   TRPCUntypedClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.TRPCUntypedClient),\n/* harmony export */   clientCallTypeToProcedureType: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.clientCallTypeToProcedureType),\n/* harmony export */   createReactQueryHooks: () => (/* binding */ createReactQueryHooks),\n/* harmony export */   createTRPCClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.createTRPCClient),\n/* harmony export */   createTRPCClientProxy: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.createTRPCClientProxy),\n/* harmony export */   createTRPCProxyClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.createTRPCProxyClient),\n/* harmony export */   createTRPCReact: () => (/* binding */ createTRPCReact),\n/* harmony export */   createTRPCUntypedClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.createTRPCUntypedClient),\n/* harmony export */   createWSClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.createWSClient),\n/* harmony export */   experimental_formDataLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.experimental_formDataLink),\n/* harmony export */   getFetch: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.getFetch),\n/* harmony export */   getQueryKey: () => (/* reexport safe */ _createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   getUntypedClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.getUntypedClient),\n/* harmony export */   httpBatchLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.httpBatchLink),\n/* harmony export */   httpLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.httpLink),\n/* harmony export */   httpLinkFactory: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.httpLinkFactory),\n/* harmony export */   loggerLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.loggerLink),\n/* harmony export */   splitLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.splitLink),\n/* harmony export */   unstable_httpBatchStreamLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.unstable_httpBatchStreamLink),\n/* harmony export */   wsLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_0__.wsLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/client */ \"(ssr)/./node_modules/@trpc/client/dist/index.mjs\");\n/* harmony import */ var _createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createHooksInternal-063195fc.mjs */ \"(ssr)/./node_modules/@trpc/react-query/dist/createHooksInternal-063195fc.mjs\");\n/* harmony import */ var _trpc_server_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server/shared */ \"(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _getArrayQueryKey_86134f8b_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getArrayQueryKey-86134f8b.mjs */ \"(ssr)/./node_modules/@trpc/react-query/dist/getArrayQueryKey-86134f8b.mjs\");\n\n\n\n\n\n\n\n\n/**\n * @internal\n */ function createHooksInternalProxy(trpc) {\n    return (0,_trpc_server_shared__WEBPACK_IMPORTED_MODULE_2__.createFlatProxy)((key)=>{\n        if (key === 'useContext' || key === 'useUtils') {\n            return ()=>{\n                const context = trpc.useUtils();\n                // create a stable reference of the utils context\n                return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(()=>{\n                    return (0,_createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(context);\n                }, [\n                    context\n                ]);\n            };\n        }\n        if (trpc.hasOwnProperty(key)) {\n            return trpc[key];\n        }\n        return (0,_createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(key, trpc);\n    });\n}\nfunction createTRPCReact(opts) {\n    const hooks = (0,_createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__.c)(opts);\n    const proxy = createHooksInternalProxy(hooks);\n    return proxy;\n}\n\n// interop:\n/**\n * @deprecated use `createTRPCReact` instead\n */ function createReactQueryHooks(opts) {\n    const trpc = (0,_createHooksInternal_063195fc_mjs__WEBPACK_IMPORTED_MODULE_1__.c)(opts);\n    const proxy = createHooksInternalProxy(trpc);\n    return {\n        ...trpc,\n        proxy\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvcmVhY3QtcXVlcnkvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkI7QUFDbUg7QUFDMUU7QUFDaEI7QUFDdEI7QUFDRDtBQUNVOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLG9FQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDhDQUFPO0FBQzlCLDJCQUEyQixvRUFBMEI7QUFDckQsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvRUFBMEI7QUFDekMsS0FBSztBQUNMO0FBQ0E7QUFDQSxrQkFBa0Isb0VBQW1CO0FBQ3JDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvRUFBbUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrRCIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9yZWFjdC1xdWVyeS9kaXN0L2luZGV4Lm1qcz8zNjMxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJ0B0cnBjL2NsaWVudCc7XG5pbXBvcnQgeyBjIGFzIGNyZWF0ZUhvb2tzSW50ZXJuYWwsIGEgYXMgY3JlYXRlUmVhY3RRdWVyeVV0aWxzUHJveHksIGIgYXMgY3JlYXRlUmVhY3RQcm94eURlY29yYXRpb24gfSBmcm9tICcuL2NyZWF0ZUhvb2tzSW50ZXJuYWwtMDYzMTk1ZmMubWpzJztcbmV4cG9ydCB7IGcgYXMgZ2V0UXVlcnlLZXkgfSBmcm9tICcuL2NyZWF0ZUhvb2tzSW50ZXJuYWwtMDYzMTk1ZmMubWpzJztcbmltcG9ydCB7IGNyZWF0ZUZsYXRQcm94eSB9IGZyb20gJ0B0cnBjL3NlcnZlci9zaGFyZWQnO1xuaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5JztcbmltcG9ydCAnLi9nZXRBcnJheVF1ZXJ5S2V5LTg2MTM0ZjhiLm1qcyc7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi8gZnVuY3Rpb24gY3JlYXRlSG9va3NJbnRlcm5hbFByb3h5KHRycGMpIHtcbiAgICByZXR1cm4gY3JlYXRlRmxhdFByb3h5KChrZXkpPT57XG4gICAgICAgIGlmIChrZXkgPT09ICd1c2VDb250ZXh0JyB8fCBrZXkgPT09ICd1c2VVdGlscycpIHtcbiAgICAgICAgICAgIHJldHVybiAoKT0+e1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRleHQgPSB0cnBjLnVzZVV0aWxzKCk7XG4gICAgICAgICAgICAgICAgLy8gY3JlYXRlIGEgc3RhYmxlIHJlZmVyZW5jZSBvZiB0aGUgdXRpbHMgY29udGV4dFxuICAgICAgICAgICAgICAgIHJldHVybiB1c2VNZW1vKCgpPT57XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVSZWFjdFF1ZXJ5VXRpbHNQcm94eShjb250ZXh0KTtcbiAgICAgICAgICAgICAgICB9LCBbXG4gICAgICAgICAgICAgICAgICAgIGNvbnRleHRcbiAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRycGMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRycGNba2V5XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY3JlYXRlUmVhY3RQcm94eURlY29yYXRpb24oa2V5LCB0cnBjKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVRSUENSZWFjdChvcHRzKSB7XG4gICAgY29uc3QgaG9va3MgPSBjcmVhdGVIb29rc0ludGVybmFsKG9wdHMpO1xuICAgIGNvbnN0IHByb3h5ID0gY3JlYXRlSG9va3NJbnRlcm5hbFByb3h5KGhvb2tzKTtcbiAgICByZXR1cm4gcHJveHk7XG59XG5cbi8vIGludGVyb3A6XG4vKipcbiAqIEBkZXByZWNhdGVkIHVzZSBgY3JlYXRlVFJQQ1JlYWN0YCBpbnN0ZWFkXG4gKi8gZnVuY3Rpb24gY3JlYXRlUmVhY3RRdWVyeUhvb2tzKG9wdHMpIHtcbiAgICBjb25zdCB0cnBjID0gY3JlYXRlSG9va3NJbnRlcm5hbChvcHRzKTtcbiAgICBjb25zdCBwcm94eSA9IGNyZWF0ZUhvb2tzSW50ZXJuYWxQcm94eSh0cnBjKTtcbiAgICByZXR1cm4ge1xuICAgICAgICAuLi50cnBjLFxuICAgICAgICBwcm94eVxuICAgIH07XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVJlYWN0UXVlcnlIb29rcywgY3JlYXRlVFJQQ1JlYWN0IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/react-query/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/codes-c924c3db.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPC_ERROR_CODES_BY_KEY),\n/* harmony export */   a: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   i: () => (/* binding */ invert)\n/* harmony export */ });\n/**\n * @internal\n */ function invert(obj) {\n    const newObj = Object.create(null);\n    for(const key in obj){\n        const v = obj[key];\n        newObj[v] = key;\n    }\n    return newObj;\n}\n\n// reference: https://www.jsonrpc.org/specification\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */ const TRPC_ERROR_CODES_BY_KEY = {\n    /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */ PARSE_ERROR: -32700,\n    /**\n   * The JSON sent is not a valid Request object.\n   */ BAD_REQUEST: -32600,\n    // Internal JSON-RPC error\n    INTERNAL_SERVER_ERROR: -32603,\n    NOT_IMPLEMENTED: -32603,\n    // Implementation specific errors\n    UNAUTHORIZED: -32001,\n    FORBIDDEN: -32003,\n    NOT_FOUND: -32004,\n    METHOD_NOT_SUPPORTED: -32005,\n    TIMEOUT: -32008,\n    CONFLICT: -32009,\n    PRECONDITION_FAILED: -32012,\n    PAYLOAD_TOO_LARGE: -32013,\n    UNPROCESSABLE_CONTENT: -32022,\n    TOO_MANY_REQUESTS: -32029,\n    CLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvY29kZXMtYzkyNGMzZGIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRiIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9jb2Rlcy1jOTI0YzNkYi5tanM/MzUxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbnRlcm5hbFxuICovIGZ1bmN0aW9uIGludmVydChvYmopIHtcbiAgICBjb25zdCBuZXdPYmogPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGZvcihjb25zdCBrZXkgaW4gb2JqKXtcbiAgICAgICAgY29uc3QgdiA9IG9ialtrZXldO1xuICAgICAgICBuZXdPYmpbdl0gPSBrZXk7XG4gICAgfVxuICAgIHJldHVybiBuZXdPYmo7XG59XG5cbi8vIHJlZmVyZW5jZTogaHR0cHM6Ly93d3cuanNvbnJwYy5vcmcvc3BlY2lmaWNhdGlvblxuLyoqXG4gKiBKU09OLVJQQyAyLjAgRXJyb3IgY29kZXNcbiAqXG4gKiBgLTMyMDAwYCB0byBgLTMyMDk5YCBhcmUgcmVzZXJ2ZWQgZm9yIGltcGxlbWVudGF0aW9uLWRlZmluZWQgc2VydmVyLWVycm9ycy5cbiAqIEZvciB0UlBDIHdlJ3JlIGNvcHlpbmcgdGhlIGxhc3QgZGlnaXRzIG9mIEhUVFAgNFhYIGVycm9ycy5cbiAqLyBjb25zdCBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSA9IHtcbiAgICAvKipcbiAgICogSW52YWxpZCBKU09OIHdhcyByZWNlaXZlZCBieSB0aGUgc2VydmVyLlxuICAgKiBBbiBlcnJvciBvY2N1cnJlZCBvbiB0aGUgc2VydmVyIHdoaWxlIHBhcnNpbmcgdGhlIEpTT04gdGV4dC5cbiAgICovIFBBUlNFX0VSUk9SOiAtMzI3MDAsXG4gICAgLyoqXG4gICAqIFRoZSBKU09OIHNlbnQgaXMgbm90IGEgdmFsaWQgUmVxdWVzdCBvYmplY3QuXG4gICAqLyBCQURfUkVRVUVTVDogLTMyNjAwLFxuICAgIC8vIEludGVybmFsIEpTT04tUlBDIGVycm9yXG4gICAgSU5URVJOQUxfU0VSVkVSX0VSUk9SOiAtMzI2MDMsXG4gICAgTk9UX0lNUExFTUVOVEVEOiAtMzI2MDMsXG4gICAgLy8gSW1wbGVtZW50YXRpb24gc3BlY2lmaWMgZXJyb3JzXG4gICAgVU5BVVRIT1JJWkVEOiAtMzIwMDEsXG4gICAgRk9SQklEREVOOiAtMzIwMDMsXG4gICAgTk9UX0ZPVU5EOiAtMzIwMDQsXG4gICAgTUVUSE9EX05PVF9TVVBQT1JURUQ6IC0zMjAwNSxcbiAgICBUSU1FT1VUOiAtMzIwMDgsXG4gICAgQ09ORkxJQ1Q6IC0zMjAwOSxcbiAgICBQUkVDT05ESVRJT05fRkFJTEVEOiAtMzIwMTIsXG4gICAgUEFZTE9BRF9UT09fTEFSR0U6IC0zMjAxMyxcbiAgICBVTlBST0NFU1NBQkxFX0NPTlRFTlQ6IC0zMjAyMixcbiAgICBUT09fTUFOWV9SRVFVRVNUUzogLTMyMDI5LFxuICAgIENMSUVOVF9DTE9TRURfUkVRVUVTVDogLTMyMDk5XG59O1xuY29uc3QgVFJQQ19FUlJPUl9DT0RFU19CWV9OVU1CRVIgPSBpbnZlcnQoVFJQQ19FUlJPUl9DT0RFU19CWV9LRVkpO1xuXG5leHBvcnQgeyBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSBhcyBULCBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUiBhcyBhLCBpbnZlcnQgYXMgaSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getCauseFromUnknown)\n/* harmony export */ });\n/**\n * @internal\n */ function isObject(value) {\n    // check that value is object\n    return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n\nclass UnknownCauseError extends Error {\n}\nfunction getCauseFromUnknown(cause) {\n    if (cause instanceof Error) {\n        return cause;\n    }\n    const type = typeof cause;\n    if (type === 'undefined' || type === 'function' || cause === null) {\n        return undefined;\n    }\n    // Primitive types just get wrapped in an error\n    if (type !== 'object') {\n        return new Error(String(cause));\n    }\n    // If it's an object, we'll create a synthetic error\n    if (isObject(cause)) {\n        const err = new UnknownCauseError();\n        for(const key in cause){\n            err[key] = cause[key];\n        }\n        return err;\n    }\n    return undefined;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvZ2V0Q2F1c2VGcm9tVW5rbm93bi0yZDY2NDE0YS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnJhaW5yb3QtdmlkZW8tZ2VuLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2dldENhdXNlRnJvbVVua25vd24tMmQ2NjQxNGEubWpzPzllMmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW50ZXJuYWxcbiAqLyBmdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICAgIC8vIGNoZWNrIHRoYXQgdmFsdWUgaXMgb2JqZWN0XG4gICAgcmV0dXJuICEhdmFsdWUgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCc7XG59XG5cbmNsYXNzIFVua25vd25DYXVzZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuZnVuY3Rpb24gZ2V0Q2F1c2VGcm9tVW5rbm93bihjYXVzZSkge1xuICAgIGlmIChjYXVzZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHJldHVybiBjYXVzZTtcbiAgICB9XG4gICAgY29uc3QgdHlwZSA9IHR5cGVvZiBjYXVzZTtcbiAgICBpZiAodHlwZSA9PT0gJ3VuZGVmaW5lZCcgfHwgdHlwZSA9PT0gJ2Z1bmN0aW9uJyB8fCBjYXVzZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAvLyBQcmltaXRpdmUgdHlwZXMganVzdCBnZXQgd3JhcHBlZCBpbiBhbiBlcnJvclxuICAgIGlmICh0eXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFN0cmluZyhjYXVzZSkpO1xuICAgIH1cbiAgICAvLyBJZiBpdCdzIGFuIG9iamVjdCwgd2UnbGwgY3JlYXRlIGEgc3ludGhldGljIGVycm9yXG4gICAgaWYgKGlzT2JqZWN0KGNhdXNlKSkge1xuICAgICAgICBjb25zdCBlcnIgPSBuZXcgVW5rbm93bkNhdXNlRXJyb3IoKTtcbiAgICAgICAgZm9yKGNvbnN0IGtleSBpbiBjYXVzZSl7XG4gICAgICAgICAgICBlcnJba2V5XSA9IGNhdXNlW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVycjtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IHsgZ2V0Q2F1c2VGcm9tVW5rbm93biBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/index-f91d720c.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/index-f91d720c.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   a: () => (/* binding */ createRecursiveProxy),\n/* harmony export */   b: () => (/* binding */ getHTTPStatusCode),\n/* harmony export */   c: () => (/* binding */ createFlatProxy),\n/* harmony export */   g: () => (/* binding */ getHTTPStatusCodeFromError)\n/* harmony export */ });\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\nconst TRPC_ERROR_CODES_BY_NUMBER = (0,_codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__.i)(_codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__.T);\nconst JSONRPC2_TO_HTTP_CODE = {\n    PARSE_ERROR: 400,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    FORBIDDEN: 403,\n    METHOD_NOT_SUPPORTED: 405,\n    TIMEOUT: 408,\n    CONFLICT: 409,\n    PRECONDITION_FAILED: 412,\n    PAYLOAD_TOO_LARGE: 413,\n    UNPROCESSABLE_CONTENT: 422,\n    TOO_MANY_REQUESTS: 429,\n    CLIENT_CLOSED_REQUEST: 499,\n    INTERNAL_SERVER_ERROR: 500,\n    NOT_IMPLEMENTED: 501\n};\nfunction getStatusCodeFromKey(code) {\n    return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\n}\nfunction getHTTPStatusCode(json) {\n    const arr = Array.isArray(json) ? json : [\n        json\n    ];\n    const httpStatuses = new Set(arr.map((res)=>{\n        if ('error' in res) {\n            const data = res.error.data;\n            if (typeof data.httpStatus === 'number') {\n                return data.httpStatus;\n            }\n            const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n            return getStatusCodeFromKey(code);\n        }\n        return 200;\n    }));\n    if (httpStatuses.size !== 1) {\n        return 207;\n    }\n    const httpStatus = httpStatuses.values().next().value;\n    return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n    return getStatusCodeFromKey(error.code);\n}\n\nconst noop = ()=>{\n// noop\n};\nfunction createInnerProxy(callback, path) {\n    const proxy = new Proxy(noop, {\n        get (_obj, key) {\n            if (typeof key !== 'string' || key === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return createInnerProxy(callback, [\n                ...path,\n                key\n            ]);\n        },\n        apply (_1, _2, args) {\n            const isApply = path[path.length - 1] === 'apply';\n            return callback({\n                args: isApply ? args.length >= 2 ? args[1] : [] : args,\n                path: isApply ? path.slice(0, -1) : path\n            });\n        }\n    });\n    return proxy;\n}\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */ const createRecursiveProxy = (callback)=>createInnerProxy(callback, []);\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */ const createFlatProxy = (callback)=>{\n    return new Proxy(noop, {\n        get (_obj, name) {\n            if (typeof name !== 'string' || name === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return callback(name);\n        }\n    });\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvaW5kZXgtZjkxZDcyMGMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRjs7QUFFakYsbUNBQW1DLHNEQUFNLENBQUMsa0RBQXVCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRXFKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnJhaW5yb3QtdmlkZW8tZ2VuLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2luZGV4LWY5MWQ3MjBjLm1qcz85ZDVjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGkgYXMgaW52ZXJ0LCBUIGFzIFRSUENfRVJST1JfQ09ERVNfQllfS0VZIH0gZnJvbSAnLi9jb2Rlcy1jOTI0YzNkYi5tanMnO1xuXG5jb25zdCBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUiA9IGludmVydChUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSk7XG5jb25zdCBKU09OUlBDMl9UT19IVFRQX0NPREUgPSB7XG4gICAgUEFSU0VfRVJST1I6IDQwMCxcbiAgICBCQURfUkVRVUVTVDogNDAwLFxuICAgIFVOQVVUSE9SSVpFRDogNDAxLFxuICAgIE5PVF9GT1VORDogNDA0LFxuICAgIEZPUkJJRERFTjogNDAzLFxuICAgIE1FVEhPRF9OT1RfU1VQUE9SVEVEOiA0MDUsXG4gICAgVElNRU9VVDogNDA4LFxuICAgIENPTkZMSUNUOiA0MDksXG4gICAgUFJFQ09ORElUSU9OX0ZBSUxFRDogNDEyLFxuICAgIFBBWUxPQURfVE9PX0xBUkdFOiA0MTMsXG4gICAgVU5QUk9DRVNTQUJMRV9DT05URU5UOiA0MjIsXG4gICAgVE9PX01BTllfUkVRVUVTVFM6IDQyOSxcbiAgICBDTElFTlRfQ0xPU0VEX1JFUVVFU1Q6IDQ5OSxcbiAgICBJTlRFUk5BTF9TRVJWRVJfRVJST1I6IDUwMCxcbiAgICBOT1RfSU1QTEVNRU5URUQ6IDUwMVxufTtcbmZ1bmN0aW9uIGdldFN0YXR1c0NvZGVGcm9tS2V5KGNvZGUpIHtcbiAgICByZXR1cm4gSlNPTlJQQzJfVE9fSFRUUF9DT0RFW2NvZGVdID8/IDUwMDtcbn1cbmZ1bmN0aW9uIGdldEhUVFBTdGF0dXNDb2RlKGpzb24pIHtcbiAgICBjb25zdCBhcnIgPSBBcnJheS5pc0FycmF5KGpzb24pID8ganNvbiA6IFtcbiAgICAgICAganNvblxuICAgIF07XG4gICAgY29uc3QgaHR0cFN0YXR1c2VzID0gbmV3IFNldChhcnIubWFwKChyZXMpPT57XG4gICAgICAgIGlmICgnZXJyb3InIGluIHJlcykge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5lcnJvci5kYXRhO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBkYXRhLmh0dHBTdGF0dXMgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEuaHR0cFN0YXR1cztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNvZGUgPSBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUltyZXMuZXJyb3IuY29kZV07XG4gICAgICAgICAgICByZXR1cm4gZ2V0U3RhdHVzQ29kZUZyb21LZXkoY29kZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDIwMDtcbiAgICB9KSk7XG4gICAgaWYgKGh0dHBTdGF0dXNlcy5zaXplICE9PSAxKSB7XG4gICAgICAgIHJldHVybiAyMDc7XG4gICAgfVxuICAgIGNvbnN0IGh0dHBTdGF0dXMgPSBodHRwU3RhdHVzZXMudmFsdWVzKCkubmV4dCgpLnZhbHVlO1xuICAgIHJldHVybiBodHRwU3RhdHVzO1xufVxuZnVuY3Rpb24gZ2V0SFRUUFN0YXR1c0NvZGVGcm9tRXJyb3IoZXJyb3IpIHtcbiAgICByZXR1cm4gZ2V0U3RhdHVzQ29kZUZyb21LZXkoZXJyb3IuY29kZSk7XG59XG5cbmNvbnN0IG5vb3AgPSAoKT0+e1xuLy8gbm9vcFxufTtcbmZ1bmN0aW9uIGNyZWF0ZUlubmVyUHJveHkoY2FsbGJhY2ssIHBhdGgpIHtcbiAgICBjb25zdCBwcm94eSA9IG5ldyBQcm94eShub29wLCB7XG4gICAgICAgIGdldCAoX29iaiwga2V5KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGtleSAhPT0gJ3N0cmluZycgfHwga2V5ID09PSAndGhlbicpIHtcbiAgICAgICAgICAgICAgICAvLyBzcGVjaWFsIGNhc2UgZm9yIGlmIHRoZSBwcm94eSBpcyBhY2NpZGVudGFsbHkgdHJlYXRlZFxuICAgICAgICAgICAgICAgIC8vIGxpa2UgYSBQcm9taXNlTGlrZSAobGlrZSBpbiBgUHJvbWlzZS5yZXNvbHZlKHByb3h5KWApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVJbm5lclByb3h5KGNhbGxiYWNrLCBbXG4gICAgICAgICAgICAgICAgLi4ucGF0aCxcbiAgICAgICAgICAgICAgICBrZXlcbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9LFxuICAgICAgICBhcHBseSAoXzEsIF8yLCBhcmdzKSB7XG4gICAgICAgICAgICBjb25zdCBpc0FwcGx5ID0gcGF0aFtwYXRoLmxlbmd0aCAtIDFdID09PSAnYXBwbHknO1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHtcbiAgICAgICAgICAgICAgICBhcmdzOiBpc0FwcGx5ID8gYXJncy5sZW5ndGggPj0gMiA/IGFyZ3NbMV0gOiBbXSA6IGFyZ3MsXG4gICAgICAgICAgICAgICAgcGF0aDogaXNBcHBseSA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcHJveHk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBwcm94eSB0aGF0IGNhbGxzIHRoZSBjYWxsYmFjayB3aXRoIHRoZSBwYXRoIGFuZCBhcmd1bWVudHNcbiAqXG4gKiBAaW50ZXJuYWxcbiAqLyBjb25zdCBjcmVhdGVSZWN1cnNpdmVQcm94eSA9IChjYWxsYmFjayk9PmNyZWF0ZUlubmVyUHJveHkoY2FsbGJhY2ssIFtdKTtcbi8qKlxuICogVXNlZCBpbiBwbGFjZSBvZiBgbmV3IFByb3h5YCB3aGVyZSBlYWNoIGhhbmRsZXIgd2lsbCBtYXAgMSBsZXZlbCBkZWVwIHRvIGFub3RoZXIgdmFsdWUuXG4gKlxuICogQGludGVybmFsXG4gKi8gY29uc3QgY3JlYXRlRmxhdFByb3h5ID0gKGNhbGxiYWNrKT0+e1xuICAgIHJldHVybiBuZXcgUHJveHkobm9vcCwge1xuICAgICAgICBnZXQgKF9vYmosIG5hbWUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycgfHwgbmFtZSA9PT0gJ3RoZW4nKSB7XG4gICAgICAgICAgICAgICAgLy8gc3BlY2lhbCBjYXNlIGZvciBpZiB0aGUgcHJveHkgaXMgYWNjaWRlbnRhbGx5IHRyZWF0ZWRcbiAgICAgICAgICAgICAgICAvLyBsaWtlIGEgUHJvbWlzZUxpa2UgKGxpa2UgaW4gYFByb21pc2UucmVzb2x2ZShwcm94eSlgKVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2sobmFtZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5cbmV4cG9ydCB7IFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSIGFzIFQsIGNyZWF0ZVJlY3Vyc2l2ZVByb3h5IGFzIGEsIGdldEhUVFBTdGF0dXNDb2RlIGFzIGIsIGNyZWF0ZUZsYXRQcm94eSBhcyBjLCBnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvciBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/observable-ade1bad8.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/observable-ade1bad8.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ isObservable),\n/* harmony export */   o: () => (/* binding */ observable)\n/* harmony export */ });\nfunction identity(x) {\n    return x;\n}\n\n/** @internal */ function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce((prev, fn)=>fn(prev), input);\n    };\n}\n\nfunction isObservable(x) {\n    return typeof x === 'object' && x !== null && 'subscribe' in x;\n}\nfunction observable(subscribe) {\n    const self = {\n        subscribe (observer) {\n            let teardownRef = null;\n            let isDone = false;\n            let unsubscribed = false;\n            let teardownImmediately = false;\n            function unsubscribe() {\n                if (teardownRef === null) {\n                    teardownImmediately = true;\n                    return;\n                }\n                if (unsubscribed) {\n                    return;\n                }\n                unsubscribed = true;\n                if (typeof teardownRef === 'function') {\n                    teardownRef();\n                } else if (teardownRef) {\n                    teardownRef.unsubscribe();\n                }\n            }\n            teardownRef = subscribe({\n                next (value) {\n                    if (isDone) {\n                        return;\n                    }\n                    observer.next?.(value);\n                },\n                error (err) {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n                    observer.error?.(err);\n                    unsubscribe();\n                },\n                complete () {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n                    observer.complete?.();\n                    unsubscribe();\n                }\n            });\n            if (teardownImmediately) {\n                unsubscribe();\n            }\n            return {\n                unsubscribe\n            };\n        },\n        pipe (...operations) {\n            return pipeFromArray(operations)(self);\n        }\n    };\n    return self;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3Qvb2JzZXJ2YWJsZS1hZGUxYmFkOC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9vYnNlcnZhYmxlLWFkZTFiYWQ4Lm1qcz80YzMxIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlkZW50aXR5KHgpIHtcbiAgICByZXR1cm4geDtcbn1cblxuLyoqIEBpbnRlcm5hbCAqLyBmdW5jdGlvbiBwaXBlRnJvbUFycmF5KGZucykge1xuICAgIGlmIChmbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBpZGVudGl0eTtcbiAgICB9XG4gICAgaWYgKGZucy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICAgICAgcmV0dXJuIGZuc1swXTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHBpcGVkKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBmbnMucmVkdWNlKChwcmV2LCBmbik9PmZuKHByZXYpLCBpbnB1dCk7XG4gICAgfTtcbn1cblxuZnVuY3Rpb24gaXNPYnNlcnZhYmxlKHgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHggPT09ICdvYmplY3QnICYmIHggIT09IG51bGwgJiYgJ3N1YnNjcmliZScgaW4geDtcbn1cbmZ1bmN0aW9uIG9ic2VydmFibGUoc3Vic2NyaWJlKSB7XG4gICAgY29uc3Qgc2VsZiA9IHtcbiAgICAgICAgc3Vic2NyaWJlIChvYnNlcnZlcikge1xuICAgICAgICAgICAgbGV0IHRlYXJkb3duUmVmID0gbnVsbDtcbiAgICAgICAgICAgIGxldCBpc0RvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgIGxldCB1bnN1YnNjcmliZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGxldCB0ZWFyZG93bkltbWVkaWF0ZWx5ID0gZmFsc2U7XG4gICAgICAgICAgICBmdW5jdGlvbiB1bnN1YnNjcmliZSgpIHtcbiAgICAgICAgICAgICAgICBpZiAodGVhcmRvd25SZWYgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGVhcmRvd25JbW1lZGlhdGVseSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHVuc3Vic2NyaWJlZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0ZWFyZG93blJlZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICB0ZWFyZG93blJlZigpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGVhcmRvd25SZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgdGVhcmRvd25SZWYudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0ZWFyZG93blJlZiA9IHN1YnNjcmliZSh7XG4gICAgICAgICAgICAgICAgbmV4dCAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzRG9uZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLm5leHQ/Lih2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvciAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc0RvbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpc0RvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5lcnJvcj8uKGVycik7XG4gICAgICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjb21wbGV0ZSAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc0RvbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpc0RvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZT8uKCk7XG4gICAgICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAodGVhcmRvd25JbW1lZGlhdGVseSkge1xuICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBwaXBlICguLi5vcGVyYXRpb25zKSB7XG4gICAgICAgICAgICByZXR1cm4gcGlwZUZyb21BcnJheShvcGVyYXRpb25zKShzZWxmKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHNlbGY7XG59XG5cbmV4cG9ydCB7IGlzT2JzZXJ2YWJsZSBhcyBpLCBvYnNlcnZhYmxlIGFzIG8gfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/observable-ade1bad8.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/observable/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObservable: () => (/* reexport safe */ _observable_ade1bad8_mjs__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   observable: () => (/* reexport safe */ _observable_ade1bad8_mjs__WEBPACK_IMPORTED_MODULE_0__.o),\n/* harmony export */   observableToPromise: () => (/* binding */ observableToPromise),\n/* harmony export */   share: () => (/* binding */ share),\n/* harmony export */   tap: () => (/* binding */ tap)\n/* harmony export */ });\n/* harmony import */ var _observable_ade1bad8_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable-ade1bad8.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/observable-ade1bad8.mjs\");\n\n\nfunction share(_opts) {\n    return (originalObserver)=>{\n        let refCount = 0;\n        let subscription = null;\n        const observers = [];\n        function startIfNeeded() {\n            if (subscription) {\n                return;\n            }\n            subscription = originalObserver.subscribe({\n                next (value) {\n                    for (const observer of observers){\n                        observer.next?.(value);\n                    }\n                },\n                error (error) {\n                    for (const observer of observers){\n                        observer.error?.(error);\n                    }\n                },\n                complete () {\n                    for (const observer of observers){\n                        observer.complete?.();\n                    }\n                }\n            });\n        }\n        function resetIfNeeded() {\n            // \"resetOnRefCountZero\"\n            if (refCount === 0 && subscription) {\n                const _sub = subscription;\n                subscription = null;\n                _sub.unsubscribe();\n            }\n        }\n        return {\n            subscribe (observer) {\n                refCount++;\n                observers.push(observer);\n                startIfNeeded();\n                return {\n                    unsubscribe () {\n                        refCount--;\n                        resetIfNeeded();\n                        const index = observers.findIndex((v)=>v === observer);\n                        if (index > -1) {\n                            observers.splice(index, 1);\n                        }\n                    }\n                };\n            }\n        };\n    };\n}\n\nfunction map(project) {\n    return (originalObserver)=>{\n        return {\n            subscribe (observer) {\n                let index = 0;\n                const subscription = originalObserver.subscribe({\n                    next (value) {\n                        observer.next?.(project(value, index++));\n                    },\n                    error (error) {\n                        observer.error?.(error);\n                    },\n                    complete () {\n                        observer.complete?.();\n                    }\n                });\n                return subscription;\n            }\n        };\n    };\n}\n\nfunction tap(observer) {\n    return (originalObserver)=>{\n        return {\n            subscribe (observer2) {\n                return originalObserver.subscribe({\n                    next (v) {\n                        observer.next?.(v);\n                        observer2.next?.(v);\n                    },\n                    error (v) {\n                        observer.error?.(v);\n                        observer2.error?.(v);\n                    },\n                    complete () {\n                        observer.complete?.();\n                        observer2.complete?.();\n                    }\n                });\n            }\n        };\n    };\n}\n\nclass ObservableAbortError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'ObservableAbortError';\n        Object.setPrototypeOf(this, ObservableAbortError.prototype);\n    }\n}\n/** @internal */ function observableToPromise(observable) {\n    let abort;\n    const promise = new Promise((resolve, reject)=>{\n        let isDone = false;\n        function onDone() {\n            if (isDone) {\n                return;\n            }\n            isDone = true;\n            reject(new ObservableAbortError('This operation was aborted.'));\n            obs$.unsubscribe();\n        }\n        const obs$ = observable.subscribe({\n            next (data) {\n                isDone = true;\n                resolve(data);\n                onDone();\n            },\n            error (data) {\n                isDone = true;\n                reject(data);\n                onDone();\n            },\n            complete () {\n                isDone = true;\n                onDone();\n            }\n        });\n        abort = onDone;\n    });\n    return {\n        promise,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        abort: abort\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3Qvb2JzZXJ2YWJsZS9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFnRjs7QUFFaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVnRCIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9vYnNlcnZhYmxlL2luZGV4Lm1qcz8xYWVlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGkgYXMgaXNPYnNlcnZhYmxlLCBvIGFzIG9ic2VydmFibGUgfSBmcm9tICcuLi9vYnNlcnZhYmxlLWFkZTFiYWQ4Lm1qcyc7XG5cbmZ1bmN0aW9uIHNoYXJlKF9vcHRzKSB7XG4gICAgcmV0dXJuIChvcmlnaW5hbE9ic2VydmVyKT0+e1xuICAgICAgICBsZXQgcmVmQ291bnQgPSAwO1xuICAgICAgICBsZXQgc3Vic2NyaXB0aW9uID0gbnVsbDtcbiAgICAgICAgY29uc3Qgb2JzZXJ2ZXJzID0gW107XG4gICAgICAgIGZ1bmN0aW9uIHN0YXJ0SWZOZWVkZWQoKSB7XG4gICAgICAgICAgICBpZiAoc3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3Vic2NyaXB0aW9uID0gb3JpZ2luYWxPYnNlcnZlci5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgICAgIG5leHQgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgb2JzZXJ2ZXIgb2Ygb2JzZXJ2ZXJzKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLm5leHQ/Lih2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVycm9yIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IG9ic2VydmVyIG9mIG9ic2VydmVycyl7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5lcnJvcj8uKGVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY29tcGxldGUgKCkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IG9ic2VydmVyIG9mIG9ic2VydmVycyl7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZT8uKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiByZXNldElmTmVlZGVkKCkge1xuICAgICAgICAgICAgLy8gXCJyZXNldE9uUmVmQ291bnRaZXJvXCJcbiAgICAgICAgICAgIGlmIChyZWZDb3VudCA9PT0gMCAmJiBzdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBfc3ViID0gc3Vic2NyaXB0aW9uO1xuICAgICAgICAgICAgICAgIHN1YnNjcmlwdGlvbiA9IG51bGw7XG4gICAgICAgICAgICAgICAgX3N1Yi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdWJzY3JpYmUgKG9ic2VydmVyKSB7XG4gICAgICAgICAgICAgICAgcmVmQ291bnQrKztcbiAgICAgICAgICAgICAgICBvYnNlcnZlcnMucHVzaChvYnNlcnZlcik7XG4gICAgICAgICAgICAgICAgc3RhcnRJZk5lZWRlZCgpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZkNvdW50LS07XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNldElmTmVlZGVkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IG9ic2VydmVycy5maW5kSW5kZXgoKHYpPT52ID09PSBvYnNlcnZlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBtYXAocHJvamVjdCkge1xuICAgIHJldHVybiAob3JpZ2luYWxPYnNlcnZlcik9PntcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1YnNjcmliZSAob2JzZXJ2ZXIpIHtcbiAgICAgICAgICAgICAgICBsZXQgaW5kZXggPSAwO1xuICAgICAgICAgICAgICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IG9yaWdpbmFsT2JzZXJ2ZXIuc3Vic2NyaWJlKHtcbiAgICAgICAgICAgICAgICAgICAgbmV4dCAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLm5leHQ/Lihwcm9qZWN0KHZhbHVlLCBpbmRleCsrKSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGVycm9yIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIuZXJyb3I/LihlcnJvcik7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlPy4oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBzdWJzY3JpcHRpb247XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfTtcbn1cblxuZnVuY3Rpb24gdGFwKG9ic2VydmVyKSB7XG4gICAgcmV0dXJuIChvcmlnaW5hbE9ic2VydmVyKT0+e1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlIChvYnNlcnZlcjIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxPYnNlcnZlci5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgICAgICAgICBuZXh0ICh2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5uZXh0Py4odik7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlcjIubmV4dD8uKHYpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBlcnJvciAodikge1xuICAgICAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIuZXJyb3I/Lih2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyMi5lcnJvcj8uKHYpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZSAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZT8uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlcjIuY29tcGxldGU/LigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfTtcbn1cblxuY2xhc3MgT2JzZXJ2YWJsZUFib3J0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSl7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnT2JzZXJ2YWJsZUFib3J0RXJyb3InO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgT2JzZXJ2YWJsZUFib3J0RXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG4vKiogQGludGVybmFsICovIGZ1bmN0aW9uIG9ic2VydmFibGVUb1Byb21pc2Uob2JzZXJ2YWJsZSkge1xuICAgIGxldCBhYm9ydDtcbiAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCk9PntcbiAgICAgICAgbGV0IGlzRG9uZSA9IGZhbHNlO1xuICAgICAgICBmdW5jdGlvbiBvbkRvbmUoKSB7XG4gICAgICAgICAgICBpZiAoaXNEb25lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaXNEb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIHJlamVjdChuZXcgT2JzZXJ2YWJsZUFib3J0RXJyb3IoJ1RoaXMgb3BlcmF0aW9uIHdhcyBhYm9ydGVkLicpKTtcbiAgICAgICAgICAgIG9icyQudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvYnMkID0gb2JzZXJ2YWJsZS5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgbmV4dCAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGlzRG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhKTtcbiAgICAgICAgICAgICAgICBvbkRvbmUoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGlzRG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGRhdGEpO1xuICAgICAgICAgICAgICAgIG9uRG9uZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbXBsZXRlICgpIHtcbiAgICAgICAgICAgICAgICBpc0RvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIG9uRG9uZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgYWJvcnQgPSBvbkRvbmU7XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvbWlzZSxcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICAgICAgYWJvcnQ6IGFib3J0XG4gICAgfTtcbn1cblxuZXhwb3J0IHsgbWFwLCBvYnNlcnZhYmxlVG9Qcm9taXNlLCBzaGFyZSwgdGFwIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/observable/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/shared/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFlatProxy: () => (/* reexport safe */ _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   createRecursiveProxy: () => (/* reexport safe */ _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   getCauseFromUnknown: () => (/* reexport safe */ _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_2__.g),\n/* harmony export */   getErrorShape: () => (/* reexport safe */ _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   transformTRPCResponse: () => (/* reexport safe */ _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_1__.t)\n/* harmony export */ });\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index-f91d720c.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transformTRPCResponse-1153b421.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\");\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../getCauseFromUnknown-2d66414a.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../codes-c924c3db.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3Qvc2hhcmVkL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBd0Y7QUFDZTtBQUN4QjtBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9zaGFyZWQvaW5kZXgubWpzPzYxMzEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgYyBhcyBjcmVhdGVGbGF0UHJveHksIGEgYXMgY3JlYXRlUmVjdXJzaXZlUHJveHkgfSBmcm9tICcuLi9pbmRleC1mOTFkNzIwYy5tanMnO1xuZXhwb3J0IHsgZyBhcyBnZXRFcnJvclNoYXBlLCB0IGFzIHRyYW5zZm9ybVRSUENSZXNwb25zZSB9IGZyb20gJy4uL3RyYW5zZm9ybVRSUENSZXNwb25zZS0xMTUzYjQyMS5tanMnO1xuZXhwb3J0IHsgZyBhcyBnZXRDYXVzZUZyb21Vbmtub3duIH0gZnJvbSAnLi4vZ2V0Q2F1c2VGcm9tVW5rbm93bi0yZDY2NDE0YS5tanMnO1xuaW1wb3J0ICcuLi9jb2Rlcy1jOTI0YzNkYi5tanMnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/shared/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getErrorShape),\n/* harmony export */   t: () => (/* binding */ transformTRPCResponse)\n/* harmony export */ });\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\n\n/**\n * @internal\n */ function getErrorShape(opts) {\n    const { path , error , config  } = opts;\n    const { code  } = opts.error;\n    const shape = {\n        message: error.message,\n        code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_1__.T[code],\n        data: {\n            code,\n            httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(error)\n        }\n    };\n    if (config.isDev && typeof opts.error.stack === 'string') {\n        shape.data.stack = opts.error.stack;\n    }\n    if (typeof path === 'string') {\n        shape.data.path = path;\n    }\n    return config.errorFormatter({\n        ...opts,\n        shape\n    });\n}\n\nfunction transformTRPCResponseItem(config, item) {\n    if ('error' in item) {\n        return {\n            ...item,\n            error: config.transformer.output.serialize(item.error)\n        };\n    }\n    if ('data' in item.result) {\n        return {\n            ...item,\n            result: {\n                ...item.result,\n                data: config.transformer.output.serialize(item.result.data)\n            }\n        };\n    }\n    return item;\n}\n/**\n * Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n **/ function transformTRPCResponse(config, itemOrItems) {\n    return Array.isArray(itemOrItems) ? itemOrItems.map((item)=>transformTRPCResponseItem(config, item)) : transformTRPCResponseItem(config, itemOrItems);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLTExNTNiNDIxLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVFO0FBQ0g7O0FBRXBFO0FBQ0E7QUFDQTtBQUNBLFlBQVkseUJBQXlCO0FBQ3JDLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0EsY0FBYyxrREFBdUI7QUFDckM7QUFDQTtBQUNBLHdCQUF3QixzREFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwRCIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC90cmFuc2Zvcm1UUlBDUmVzcG9uc2UtMTE1M2I0MjEubWpzPzlkYjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZyBhcyBnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvciB9IGZyb20gJy4vaW5kZXgtZjkxZDcyMGMubWpzJztcbmltcG9ydCB7IFQgYXMgVFJQQ19FUlJPUl9DT0RFU19CWV9LRVkgfSBmcm9tICcuL2NvZGVzLWM5MjRjM2RiLm1qcyc7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi8gZnVuY3Rpb24gZ2V0RXJyb3JTaGFwZShvcHRzKSB7XG4gICAgY29uc3QgeyBwYXRoICwgZXJyb3IgLCBjb25maWcgIH0gPSBvcHRzO1xuICAgIGNvbnN0IHsgY29kZSAgfSA9IG9wdHMuZXJyb3I7XG4gICAgY29uc3Qgc2hhcGUgPSB7XG4gICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgIGNvZGU6IFRSUENfRVJST1JfQ09ERVNfQllfS0VZW2NvZGVdLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBjb2RlLFxuICAgICAgICAgICAgaHR0cFN0YXR1czogZ2V0SFRUUFN0YXR1c0NvZGVGcm9tRXJyb3IoZXJyb3IpXG4gICAgICAgIH1cbiAgICB9O1xuICAgIGlmIChjb25maWcuaXNEZXYgJiYgdHlwZW9mIG9wdHMuZXJyb3Iuc3RhY2sgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNoYXBlLmRhdGEuc3RhY2sgPSBvcHRzLmVycm9yLnN0YWNrO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNoYXBlLmRhdGEucGF0aCA9IHBhdGg7XG4gICAgfVxuICAgIHJldHVybiBjb25maWcuZXJyb3JGb3JtYXR0ZXIoe1xuICAgICAgICAuLi5vcHRzLFxuICAgICAgICBzaGFwZVxuICAgIH0pO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1UUlBDUmVzcG9uc2VJdGVtKGNvbmZpZywgaXRlbSkge1xuICAgIGlmICgnZXJyb3InIGluIGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLml0ZW0sXG4gICAgICAgICAgICBlcnJvcjogY29uZmlnLnRyYW5zZm9ybWVyLm91dHB1dC5zZXJpYWxpemUoaXRlbS5lcnJvcilcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKCdkYXRhJyBpbiBpdGVtLnJlc3VsdCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICAgIHJlc3VsdDoge1xuICAgICAgICAgICAgICAgIC4uLml0ZW0ucmVzdWx0LFxuICAgICAgICAgICAgICAgIGRhdGE6IGNvbmZpZy50cmFuc2Zvcm1lci5vdXRwdXQuc2VyaWFsaXplKGl0ZW0ucmVzdWx0LmRhdGEpXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBpdGVtO1xufVxuLyoqXG4gKiBUYWtlcyBhIHVuc2VyaWFsaXplZCBgVFJQQ1Jlc3BvbnNlYCBhbmQgc2VyaWFsaXplcyBpdCB3aXRoIHRoZSByb3V0ZXIncyB0cmFuc2Zvcm1lcnNcbiAqKi8gZnVuY3Rpb24gdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlKGNvbmZpZywgaXRlbU9ySXRlbXMpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShpdGVtT3JJdGVtcykgPyBpdGVtT3JJdGVtcy5tYXAoKGl0ZW0pPT50cmFuc2Zvcm1UUlBDUmVzcG9uc2VJdGVtKGNvbmZpZywgaXRlbSkpIDogdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlSXRlbShjb25maWcsIGl0ZW1Pckl0ZW1zKTtcbn1cblxuZXhwb3J0IHsgZ2V0RXJyb3JTaGFwZSBhcyBnLCB0cmFuc2Zvcm1UUlBDUmVzcG9uc2UgYXMgdCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPCError),\n/* harmony export */   g: () => (/* binding */ getTRPCErrorFromUnknown)\n/* harmony export */ });\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getCauseFromUnknown-2d66414a.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n\n\nfunction getTRPCErrorFromUnknown(cause) {\n    if (cause instanceof TRPCError) {\n        return cause;\n    }\n    if (cause instanceof Error && cause.name === 'TRPCError') {\n        // https://github.com/trpc/trpc/pull/4848\n        return cause;\n    }\n    const trpcError = new TRPCError({\n        code: 'INTERNAL_SERVER_ERROR',\n        cause\n    });\n    // Inherit stack from error\n    if (cause instanceof Error && cause.stack) {\n        trpcError.stack = cause.stack;\n    }\n    return trpcError;\n}\nclass TRPCError extends Error {\n    constructor(opts){\n        const cause = (0,_getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(opts.cause);\n        const message = opts.message ?? cause?.message ?? opts.code;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore https://github.com/tc39/proposal-error-cause\n        super(message, {\n            cause\n        });\n        this.code = opts.code;\n        this.name = 'TRPCError';\n        if (!this.cause) {\n            // < ES2022 / < Node 16.9.0 compatability\n            this.cause = cause;\n        }\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvVFJQQ0Vycm9yLTk4ZDQ0NzU4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEU7O0FBRTlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixvRUFBbUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3RCIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9UUlBDRXJyb3ItOThkNDQ3NTgubWpzPzAwOTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZyBhcyBnZXRDYXVzZUZyb21Vbmtub3duIH0gZnJvbSAnLi9nZXRDYXVzZUZyb21Vbmtub3duLTJkNjY0MTRhLm1qcyc7XG5cbmZ1bmN0aW9uIGdldFRSUENFcnJvckZyb21Vbmtub3duKGNhdXNlKSB7XG4gICAgaWYgKGNhdXNlIGluc3RhbmNlb2YgVFJQQ0Vycm9yKSB7XG4gICAgICAgIHJldHVybiBjYXVzZTtcbiAgICB9XG4gICAgaWYgKGNhdXNlIGluc3RhbmNlb2YgRXJyb3IgJiYgY2F1c2UubmFtZSA9PT0gJ1RSUENFcnJvcicpIHtcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3RycGMvdHJwYy9wdWxsLzQ4NDhcbiAgICAgICAgcmV0dXJuIGNhdXNlO1xuICAgIH1cbiAgICBjb25zdCB0cnBjRXJyb3IgPSBuZXcgVFJQQ0Vycm9yKHtcbiAgICAgICAgY29kZTogJ0lOVEVSTkFMX1NFUlZFUl9FUlJPUicsXG4gICAgICAgIGNhdXNlXG4gICAgfSk7XG4gICAgLy8gSW5oZXJpdCBzdGFjayBmcm9tIGVycm9yXG4gICAgaWYgKGNhdXNlIGluc3RhbmNlb2YgRXJyb3IgJiYgY2F1c2Uuc3RhY2spIHtcbiAgICAgICAgdHJwY0Vycm9yLnN0YWNrID0gY2F1c2Uuc3RhY2s7XG4gICAgfVxuICAgIHJldHVybiB0cnBjRXJyb3I7XG59XG5jbGFzcyBUUlBDRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3Iob3B0cyl7XG4gICAgICAgIGNvbnN0IGNhdXNlID0gZ2V0Q2F1c2VGcm9tVW5rbm93bihvcHRzLmNhdXNlKTtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IG9wdHMubWVzc2FnZSA/PyBjYXVzZT8ubWVzc2FnZSA/PyBvcHRzLmNvZGU7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbiAgICAgICAgLy8gQHRzLWlnbm9yZSBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1lcnJvci1jYXVzZVxuICAgICAgICBzdXBlcihtZXNzYWdlLCB7XG4gICAgICAgICAgICBjYXVzZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jb2RlID0gb3B0cy5jb2RlO1xuICAgICAgICB0aGlzLm5hbWUgPSAnVFJQQ0Vycm9yJztcbiAgICAgICAgaWYgKCF0aGlzLmNhdXNlKSB7XG4gICAgICAgICAgICAvLyA8IEVTMjAyMiAvIDwgTm9kZSAxNi45LjAgY29tcGF0YWJpbGl0eVxuICAgICAgICAgICAgdGhpcy5jYXVzZSA9IGNhdXNlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgeyBUUlBDRXJyb3IgYXMgVCwgZ2V0VFJQQ0Vycm9yRnJvbVVua25vd24gYXMgZyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/adapters/fetch/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/adapters/fetch/index.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchRequestHandler: () => (/* binding */ fetchRequestHandler)\n/* harmony export */ });\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index-f91d720c.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _resolveHTTPResponse_2fc435bb_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../resolveHTTPResponse-2fc435bb.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs\");\n/* harmony import */ var _batchStreamFormatter_fc1ffb26_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../batchStreamFormatter-fc1ffb26.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs\");\n/* harmony import */ var _toURL_8f0ea228_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../toURL-8f0ea228.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/toURL-8f0ea228.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../codes-c924c3db.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n/* harmony import */ var _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../config-d5fdbd39.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/config-d5fdbd39.mjs\");\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../TRPCError-98d44758.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../getCauseFromUnknown-2d66414a.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n/* harmony import */ var _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../transformTRPCResponse-1153b421.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\");\n/* harmony import */ var _contentType_9fd995d3_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../contentType-9fd995d3.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/contentType-9fd995d3.mjs\");\n\n\n\n\n\n\n\n\n\n\n\nconst trimSlashes = (path)=>{\n    path = path.startsWith('/') ? path.slice(1) : path;\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\n    return path;\n};\nasync function fetchRequestHandler(opts) {\n    const resHeaders = new Headers();\n    const createContext = async ()=>{\n        return opts.createContext?.({\n            req: opts.req,\n            resHeaders\n        });\n    };\n    const url = (0,_toURL_8f0ea228_mjs__WEBPACK_IMPORTED_MODULE_3__.t)(opts.req.url);\n    const pathname = trimSlashes(url.pathname);\n    const endpoint = trimSlashes(opts.endpoint);\n    const path = trimSlashes(pathname.slice(endpoint.length));\n    const req = {\n        query: url.searchParams,\n        method: opts.req.method,\n        headers: Object.fromEntries(opts.req.headers),\n        body: opts.req.headers.get('content-type')?.startsWith('application/json') ? await opts.req.text() : ''\n    };\n    let resolve;\n    const promise = new Promise((r)=>resolve = r);\n    let status = 200;\n    let isStream = false;\n    let controller;\n    let encoder;\n    let formatter;\n    const unstable_onHead = (head, isStreaming)=>{\n        for (const [key, value] of Object.entries(head.headers ?? {})){\n            /* istanbul ignore if -- @preserve */ if (typeof value === 'undefined') {\n                continue;\n            }\n            if (typeof value === 'string') {\n                resHeaders.set(key, value);\n                continue;\n            }\n            for (const v of value){\n                resHeaders.append(key, v);\n            }\n        }\n        status = head.status;\n        if (isStreaming) {\n            resHeaders.set('Transfer-Encoding', 'chunked');\n            resHeaders.append('Vary', 'trpc-batch-mode');\n            const stream = new ReadableStream({\n                start (c) {\n                    controller = c;\n                }\n            });\n            const response = new Response(stream, {\n                status,\n                headers: resHeaders\n            });\n            resolve(response);\n            encoder = new TextEncoder();\n            formatter = (0,_batchStreamFormatter_fc1ffb26_mjs__WEBPACK_IMPORTED_MODULE_2__.g)();\n            isStream = true;\n        }\n    };\n    const unstable_onChunk = ([index, string])=>{\n        if (index === -1) {\n            // full response, no streaming\n            const response = new Response(string || null, {\n                status,\n                headers: resHeaders\n            });\n            resolve(response);\n        } else {\n            controller.enqueue(encoder.encode(formatter(index, string)));\n        }\n    };\n    (0,_resolveHTTPResponse_2fc435bb_mjs__WEBPACK_IMPORTED_MODULE_1__.r)({\n        req,\n        createContext,\n        path,\n        router: opts.router,\n        batching: opts.batching,\n        responseMeta: opts.responseMeta,\n        onError (o) {\n            opts?.onError?.({\n                ...o,\n                req: opts.req\n            });\n        },\n        unstable_onHead,\n        unstable_onChunk\n    }).then(()=>{\n        if (isStream) {\n            controller.enqueue(encoder.encode(formatter.end()));\n            controller.close();\n        }\n    }).catch(()=>{\n        if (isStream) {\n            controller.close();\n        }\n    });\n    return promise;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvYWRhcHRlcnMvZmV0Y2gvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ2dEO0FBQ0s7QUFDakM7QUFDcEI7QUFDQztBQUNHO0FBQ1U7QUFDRTtBQUNWOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsZ0JBQWdCLHNEQUFLO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRUFBb0U7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSx3QkFBd0IscUVBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxJQUFJLG9FQUFtQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9icmFpbnJvdC12aWRlby1nZW4vLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvYWRhcHRlcnMvZmV0Y2gvaW5kZXgubWpzPzQ2OWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuLi8uLi9pbmRleC1mOTFkNzIwYy5tanMnO1xuaW1wb3J0IHsgciBhcyByZXNvbHZlSFRUUFJlc3BvbnNlIH0gZnJvbSAnLi4vLi4vcmVzb2x2ZUhUVFBSZXNwb25zZS0yZmM0MzViYi5tanMnO1xuaW1wb3J0IHsgZyBhcyBnZXRCYXRjaFN0cmVhbUZvcm1hdHRlciB9IGZyb20gJy4uLy4uL2JhdGNoU3RyZWFtRm9ybWF0dGVyLWZjMWZmYjI2Lm1qcyc7XG5pbXBvcnQgeyB0IGFzIHRvVVJMIH0gZnJvbSAnLi4vLi4vdG9VUkwtOGYwZWEyMjgubWpzJztcbmltcG9ydCAnLi4vLi4vY29kZXMtYzkyNGMzZGIubWpzJztcbmltcG9ydCAnLi4vLi4vY29uZmlnLWQ1ZmRiZDM5Lm1qcyc7XG5pbXBvcnQgJy4uLy4uL1RSUENFcnJvci05OGQ0NDc1OC5tanMnO1xuaW1wb3J0ICcuLi8uLi9nZXRDYXVzZUZyb21Vbmtub3duLTJkNjY0MTRhLm1qcyc7XG5pbXBvcnQgJy4uLy4uL3RyYW5zZm9ybVRSUENSZXNwb25zZS0xMTUzYjQyMS5tanMnO1xuaW1wb3J0ICcuLi8uLi9jb250ZW50VHlwZS05ZmQ5OTVkMy5tanMnO1xuXG5jb25zdCB0cmltU2xhc2hlcyA9IChwYXRoKT0+e1xuICAgIHBhdGggPSBwYXRoLnN0YXJ0c1dpdGgoJy8nKSA/IHBhdGguc2xpY2UoMSkgOiBwYXRoO1xuICAgIHBhdGggPSBwYXRoLmVuZHNXaXRoKCcvJykgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG4gICAgcmV0dXJuIHBhdGg7XG59O1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2hSZXF1ZXN0SGFuZGxlcihvcHRzKSB7XG4gICAgY29uc3QgcmVzSGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XG4gICAgY29uc3QgY3JlYXRlQ29udGV4dCA9IGFzeW5jICgpPT57XG4gICAgICAgIHJldHVybiBvcHRzLmNyZWF0ZUNvbnRleHQ/Lih7XG4gICAgICAgICAgICByZXE6IG9wdHMucmVxLFxuICAgICAgICAgICAgcmVzSGVhZGVyc1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIGNvbnN0IHVybCA9IHRvVVJMKG9wdHMucmVxLnVybCk7XG4gICAgY29uc3QgcGF0aG5hbWUgPSB0cmltU2xhc2hlcyh1cmwucGF0aG5hbWUpO1xuICAgIGNvbnN0IGVuZHBvaW50ID0gdHJpbVNsYXNoZXMob3B0cy5lbmRwb2ludCk7XG4gICAgY29uc3QgcGF0aCA9IHRyaW1TbGFzaGVzKHBhdGhuYW1lLnNsaWNlKGVuZHBvaW50Lmxlbmd0aCkpO1xuICAgIGNvbnN0IHJlcSA9IHtcbiAgICAgICAgcXVlcnk6IHVybC5zZWFyY2hQYXJhbXMsXG4gICAgICAgIG1ldGhvZDogb3B0cy5yZXEubWV0aG9kLFxuICAgICAgICBoZWFkZXJzOiBPYmplY3QuZnJvbUVudHJpZXMob3B0cy5yZXEuaGVhZGVycyksXG4gICAgICAgIGJvZHk6IG9wdHMucmVxLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKT8uc3RhcnRzV2l0aCgnYXBwbGljYXRpb24vanNvbicpID8gYXdhaXQgb3B0cy5yZXEudGV4dCgpIDogJydcbiAgICB9O1xuICAgIGxldCByZXNvbHZlO1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocik9PnJlc29sdmUgPSByKTtcbiAgICBsZXQgc3RhdHVzID0gMjAwO1xuICAgIGxldCBpc1N0cmVhbSA9IGZhbHNlO1xuICAgIGxldCBjb250cm9sbGVyO1xuICAgIGxldCBlbmNvZGVyO1xuICAgIGxldCBmb3JtYXR0ZXI7XG4gICAgY29uc3QgdW5zdGFibGVfb25IZWFkID0gKGhlYWQsIGlzU3RyZWFtaW5nKT0+e1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhoZWFkLmhlYWRlcnMgPz8ge30pKXtcbiAgICAgICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtLSBAcHJlc2VydmUgKi8gaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgcmVzSGVhZGVycy5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHYgb2YgdmFsdWUpe1xuICAgICAgICAgICAgICAgIHJlc0hlYWRlcnMuYXBwZW5kKGtleSwgdik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc3RhdHVzID0gaGVhZC5zdGF0dXM7XG4gICAgICAgIGlmIChpc1N0cmVhbWluZykge1xuICAgICAgICAgICAgcmVzSGVhZGVycy5zZXQoJ1RyYW5zZmVyLUVuY29kaW5nJywgJ2NodW5rZWQnKTtcbiAgICAgICAgICAgIHJlc0hlYWRlcnMuYXBwZW5kKCdWYXJ5JywgJ3RycGMtYmF0Y2gtbW9kZScpO1xuICAgICAgICAgICAgY29uc3Qgc3RyZWFtID0gbmV3IFJlYWRhYmxlU3RyZWFtKHtcbiAgICAgICAgICAgICAgICBzdGFydCAoYykge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyID0gYztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKHN0cmVhbSwge1xuICAgICAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNIZWFkZXJzXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgICAgICAgICAgZm9ybWF0dGVyID0gZ2V0QmF0Y2hTdHJlYW1Gb3JtYXR0ZXIoKTtcbiAgICAgICAgICAgIGlzU3RyZWFtID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgdW5zdGFibGVfb25DaHVuayA9IChbaW5kZXgsIHN0cmluZ10pPT57XG4gICAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgIC8vIGZ1bGwgcmVzcG9uc2UsIG5vIHN0cmVhbWluZ1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2Uoc3RyaW5nIHx8IG51bGwsIHtcbiAgICAgICAgICAgICAgICBzdGF0dXMsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogcmVzSGVhZGVyc1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShlbmNvZGVyLmVuY29kZShmb3JtYXR0ZXIoaW5kZXgsIHN0cmluZykpKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmVzb2x2ZUhUVFBSZXNwb25zZSh7XG4gICAgICAgIHJlcSxcbiAgICAgICAgY3JlYXRlQ29udGV4dCxcbiAgICAgICAgcGF0aCxcbiAgICAgICAgcm91dGVyOiBvcHRzLnJvdXRlcixcbiAgICAgICAgYmF0Y2hpbmc6IG9wdHMuYmF0Y2hpbmcsXG4gICAgICAgIHJlc3BvbnNlTWV0YTogb3B0cy5yZXNwb25zZU1ldGEsXG4gICAgICAgIG9uRXJyb3IgKG8pIHtcbiAgICAgICAgICAgIG9wdHM/Lm9uRXJyb3I/Lih7XG4gICAgICAgICAgICAgICAgLi4ubyxcbiAgICAgICAgICAgICAgICByZXE6IG9wdHMucmVxXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgdW5zdGFibGVfb25IZWFkLFxuICAgICAgICB1bnN0YWJsZV9vbkNodW5rXG4gICAgfSkudGhlbigoKT0+e1xuICAgICAgICBpZiAoaXNTdHJlYW0pIHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShlbmNvZGVyLmVuY29kZShmb3JtYXR0ZXIuZW5kKCkpKTtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH0pLmNhdGNoKCgpPT57XG4gICAgICAgIGlmIChpc1N0cmVhbSkge1xuICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHByb21pc2U7XG59XG5cbmV4cG9ydCB7IGZldGNoUmVxdWVzdEhhbmRsZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/adapters/fetch/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getBatchStreamFormatter)\n/* harmony export */ });\n/**\n * Format a batch response as a line-delimited JSON stream\n * that the `unstable_httpBatchStreamLink` can parse:\n *\n * @example\n * ```ts\n * const formatter = getBatchStreamFormatter();\n * res.send(formatter(1, 'response #2'));\n * res.send(formatter(0, 'response #1'));\n * res.send(formatter.end());\n * ```\n *\n * Expected format:\n * ```json\n * {\"1\":\"response #2\"\n * ,\"0\":\"response #1\"\n * }\n * ```\n */ function getBatchStreamFormatter() {\n    let first = true;\n    function format(index, string) {\n        const prefix = first ? '{' : ',';\n        first = false;\n        return `${prefix}\"${index}\":${string}\\n`;\n    }\n    format.end = ()=>'}';\n    return format;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvYmF0Y2hTdHJlYW1Gb3JtYXR0ZXItZmMxZmZiMjYubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBLGtCQUFrQixPQUFPLEdBQUcsTUFBTSxJQUFJLE9BQU87QUFDN0M7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTs7QUFFd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9icmFpbnJvdC12aWRlby1nZW4vLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvYmF0Y2hTdHJlYW1Gb3JtYXR0ZXItZmMxZmZiMjYubWpzP2IwYzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGb3JtYXQgYSBiYXRjaCByZXNwb25zZSBhcyBhIGxpbmUtZGVsaW1pdGVkIEpTT04gc3RyZWFtXG4gKiB0aGF0IHRoZSBgdW5zdGFibGVfaHR0cEJhdGNoU3RyZWFtTGlua2AgY2FuIHBhcnNlOlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc3QgZm9ybWF0dGVyID0gZ2V0QmF0Y2hTdHJlYW1Gb3JtYXR0ZXIoKTtcbiAqIHJlcy5zZW5kKGZvcm1hdHRlcigxLCAncmVzcG9uc2UgIzInKSk7XG4gKiByZXMuc2VuZChmb3JtYXR0ZXIoMCwgJ3Jlc3BvbnNlICMxJykpO1xuICogcmVzLnNlbmQoZm9ybWF0dGVyLmVuZCgpKTtcbiAqIGBgYFxuICpcbiAqIEV4cGVjdGVkIGZvcm1hdDpcbiAqIGBgYGpzb25cbiAqIHtcIjFcIjpcInJlc3BvbnNlICMyXCJcbiAqICxcIjBcIjpcInJlc3BvbnNlICMxXCJcbiAqIH1cbiAqIGBgYFxuICovIGZ1bmN0aW9uIGdldEJhdGNoU3RyZWFtRm9ybWF0dGVyKCkge1xuICAgIGxldCBmaXJzdCA9IHRydWU7XG4gICAgZnVuY3Rpb24gZm9ybWF0KGluZGV4LCBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgcHJlZml4ID0gZmlyc3QgPyAneycgOiAnLCc7XG4gICAgICAgIGZpcnN0ID0gZmFsc2U7XG4gICAgICAgIHJldHVybiBgJHtwcmVmaXh9XCIke2luZGV4fVwiOiR7c3RyaW5nfVxcbmA7XG4gICAgfVxuICAgIGZvcm1hdC5lbmQgPSAoKT0+J30nO1xuICAgIHJldHVybiBmb3JtYXQ7XG59XG5cbmV4cG9ydCB7IGdldEJhdGNoU3RyZWFtRm9ybWF0dGVyIGFzIGcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/batchStreamFormatter-fc1ffb26.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/codes-c924c3db.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPC_ERROR_CODES_BY_KEY),\n/* harmony export */   a: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   i: () => (/* binding */ invert)\n/* harmony export */ });\n/**\n * @internal\n */ function invert(obj) {\n    const newObj = Object.create(null);\n    for(const key in obj){\n        const v = obj[key];\n        newObj[v] = key;\n    }\n    return newObj;\n}\n\n// reference: https://www.jsonrpc.org/specification\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */ const TRPC_ERROR_CODES_BY_KEY = {\n    /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */ PARSE_ERROR: -32700,\n    /**\n   * The JSON sent is not a valid Request object.\n   */ BAD_REQUEST: -32600,\n    // Internal JSON-RPC error\n    INTERNAL_SERVER_ERROR: -32603,\n    NOT_IMPLEMENTED: -32603,\n    // Implementation specific errors\n    UNAUTHORIZED: -32001,\n    FORBIDDEN: -32003,\n    NOT_FOUND: -32004,\n    METHOD_NOT_SUPPORTED: -32005,\n    TIMEOUT: -32008,\n    CONFLICT: -32009,\n    PRECONDITION_FAILED: -32012,\n    PAYLOAD_TOO_LARGE: -32013,\n    UNPROCESSABLE_CONTENT: -32022,\n    TOO_MANY_REQUESTS: -32029,\n    CLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvY29kZXMtYzkyNGMzZGIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRiIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9jb2Rlcy1jOTI0YzNkYi5tanM/OWU2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbnRlcm5hbFxuICovIGZ1bmN0aW9uIGludmVydChvYmopIHtcbiAgICBjb25zdCBuZXdPYmogPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGZvcihjb25zdCBrZXkgaW4gb2JqKXtcbiAgICAgICAgY29uc3QgdiA9IG9ialtrZXldO1xuICAgICAgICBuZXdPYmpbdl0gPSBrZXk7XG4gICAgfVxuICAgIHJldHVybiBuZXdPYmo7XG59XG5cbi8vIHJlZmVyZW5jZTogaHR0cHM6Ly93d3cuanNvbnJwYy5vcmcvc3BlY2lmaWNhdGlvblxuLyoqXG4gKiBKU09OLVJQQyAyLjAgRXJyb3IgY29kZXNcbiAqXG4gKiBgLTMyMDAwYCB0byBgLTMyMDk5YCBhcmUgcmVzZXJ2ZWQgZm9yIGltcGxlbWVudGF0aW9uLWRlZmluZWQgc2VydmVyLWVycm9ycy5cbiAqIEZvciB0UlBDIHdlJ3JlIGNvcHlpbmcgdGhlIGxhc3QgZGlnaXRzIG9mIEhUVFAgNFhYIGVycm9ycy5cbiAqLyBjb25zdCBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSA9IHtcbiAgICAvKipcbiAgICogSW52YWxpZCBKU09OIHdhcyByZWNlaXZlZCBieSB0aGUgc2VydmVyLlxuICAgKiBBbiBlcnJvciBvY2N1cnJlZCBvbiB0aGUgc2VydmVyIHdoaWxlIHBhcnNpbmcgdGhlIEpTT04gdGV4dC5cbiAgICovIFBBUlNFX0VSUk9SOiAtMzI3MDAsXG4gICAgLyoqXG4gICAqIFRoZSBKU09OIHNlbnQgaXMgbm90IGEgdmFsaWQgUmVxdWVzdCBvYmplY3QuXG4gICAqLyBCQURfUkVRVUVTVDogLTMyNjAwLFxuICAgIC8vIEludGVybmFsIEpTT04tUlBDIGVycm9yXG4gICAgSU5URVJOQUxfU0VSVkVSX0VSUk9SOiAtMzI2MDMsXG4gICAgTk9UX0lNUExFTUVOVEVEOiAtMzI2MDMsXG4gICAgLy8gSW1wbGVtZW50YXRpb24gc3BlY2lmaWMgZXJyb3JzXG4gICAgVU5BVVRIT1JJWkVEOiAtMzIwMDEsXG4gICAgRk9SQklEREVOOiAtMzIwMDMsXG4gICAgTk9UX0ZPVU5EOiAtMzIwMDQsXG4gICAgTUVUSE9EX05PVF9TVVBQT1JURUQ6IC0zMjAwNSxcbiAgICBUSU1FT1VUOiAtMzIwMDgsXG4gICAgQ09ORkxJQ1Q6IC0zMjAwOSxcbiAgICBQUkVDT05ESVRJT05fRkFJTEVEOiAtMzIwMTIsXG4gICAgUEFZTE9BRF9UT09fTEFSR0U6IC0zMjAxMyxcbiAgICBVTlBST0NFU1NBQkxFX0NPTlRFTlQ6IC0zMjAyMixcbiAgICBUT09fTUFOWV9SRVFVRVNUUzogLTMyMDI5LFxuICAgIENMSUVOVF9DTE9TRURfUkVRVUVTVDogLTMyMDk5XG59O1xuY29uc3QgVFJQQ19FUlJPUl9DT0RFU19CWV9OVU1CRVIgPSBpbnZlcnQoVFJQQ19FUlJPUl9DT0RFU19CWV9LRVkpO1xuXG5leHBvcnQgeyBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSBhcyBULCBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUiBhcyBhLCBpbnZlcnQgYXMgaSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/config-d5fdbd39.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/config-d5fdbd39.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ defaultTransformer),\n/* harmony export */   b: () => (/* binding */ createCallerFactory),\n/* harmony export */   c: () => (/* binding */ createRouterFactory),\n/* harmony export */   d: () => (/* binding */ defaultFormatter),\n/* harmony export */   e: () => (/* binding */ callProcedure),\n/* harmony export */   g: () => (/* binding */ getDataTransformer),\n/* harmony export */   i: () => (/* binding */ isServerDefault),\n/* harmony export */   p: () => (/* binding */ procedureTypes)\n/* harmony export */ });\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\n\n\n/**\n * @public\n */ /**\n * @internal\n */ function getDataTransformer(transformer) {\n    if ('input' in transformer) {\n        return transformer;\n    }\n    return {\n        input: transformer,\n        output: transformer\n    };\n}\n/**\n * @internal\n */ const defaultTransformer = {\n    _default: true,\n    input: {\n        serialize: (obj)=>obj,\n        deserialize: (obj)=>obj\n    },\n    output: {\n        serialize: (obj)=>obj,\n        deserialize: (obj)=>obj\n    }\n};\n\nconst defaultFormatter = ({ shape  })=>{\n    return shape;\n};\n\n/**\n * Create an object without inheriting anything from `Object.prototype`\n * @internal\n */ function omitPrototype(obj) {\n    return Object.assign(Object.create(null), obj);\n}\n\nconst procedureTypes = [\n    'query',\n    'mutation',\n    'subscription'\n];\n\nfunction isRouter(procedureOrRouter) {\n    return 'router' in procedureOrRouter._def;\n}\nconst emptyRouter = {\n    _ctx: null,\n    _errorShape: null,\n    _meta: null,\n    queries: {},\n    mutations: {},\n    subscriptions: {},\n    errorFormatter: defaultFormatter,\n    transformer: defaultTransformer\n};\n/**\n * Reserved words that can't be used as router or procedure names\n */ const reservedWords = [\n    /**\n   * Then is a reserved word because otherwise we can't return a promise that returns a Proxy\n   * since JS will think that `.then` is something that exists\n   */ 'then'\n];\n/**\n * @internal\n */ function createRouterFactory(config) {\n    return function createRouterInner(procedures) {\n        const reservedWordsUsed = new Set(Object.keys(procedures).filter((v)=>reservedWords.includes(v)));\n        if (reservedWordsUsed.size > 0) {\n            throw new Error('Reserved words used in `router({})` call: ' + Array.from(reservedWordsUsed).join(', '));\n        }\n        const routerProcedures = omitPrototype({});\n        function recursiveGetPaths(procedures, path = '') {\n            for (const [key, procedureOrRouter] of Object.entries(procedures ?? {})){\n                const newPath = `${path}${key}`;\n                if (isRouter(procedureOrRouter)) {\n                    recursiveGetPaths(procedureOrRouter._def.procedures, `${newPath}.`);\n                    continue;\n                }\n                if (routerProcedures[newPath]) {\n                    throw new Error(`Duplicate key: ${newPath}`);\n                }\n                routerProcedures[newPath] = procedureOrRouter;\n            }\n        }\n        recursiveGetPaths(procedures);\n        const _def = {\n            _config: config,\n            router: true,\n            procedures: routerProcedures,\n            ...emptyRouter,\n            record: procedures,\n            queries: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.query).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {}),\n            mutations: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.mutation).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {}),\n            subscriptions: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.subscription).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {})\n        };\n        const router = {\n            ...procedures,\n            _def,\n            createCaller (ctx) {\n                return createCallerFactory()(router)(ctx);\n            },\n            getErrorShape (opts) {\n                const { path , error  } = opts;\n                const { code  } = opts.error;\n                const shape = {\n                    message: error.message,\n                    code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_2__.T[code],\n                    data: {\n                        code,\n                        httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(error)\n                    }\n                };\n                if (config.isDev && typeof opts.error.stack === 'string') {\n                    shape.data.stack = opts.error.stack;\n                }\n                if (typeof path === 'string') {\n                    shape.data.path = path;\n                }\n                return this._def._config.errorFormatter({\n                    ...opts,\n                    shape\n                });\n            }\n        };\n        return router;\n    };\n}\n/**\n * @internal\n */ function callProcedure(opts) {\n    const { type , path  } = opts;\n    if (!(path in opts.procedures) || !opts.procedures[path]?._def[type]) {\n        throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__.T({\n            code: 'NOT_FOUND',\n            message: `No \"${type}\"-procedure on path \"${path}\"`\n        });\n    }\n    const procedure = opts.procedures[path];\n    return procedure(opts);\n}\nfunction createCallerFactory() {\n    return function createCallerInner(router) {\n        const def = router._def;\n        return function createCaller(ctx) {\n            const proxy = (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(({ path , args  })=>{\n                // interop mode\n                if (path.length === 1 && procedureTypes.includes(path[0])) {\n                    return callProcedure({\n                        procedures: def.procedures,\n                        path: args[0],\n                        rawInput: args[1],\n                        ctx,\n                        type: path[0]\n                    });\n                }\n                const fullPath = path.join('.');\n                const procedure = def.procedures[fullPath];\n                let type = 'query';\n                if (procedure._def.mutation) {\n                    type = 'mutation';\n                } else if (procedure._def.subscription) {\n                    type = 'subscription';\n                }\n                return procedure({\n                    path: fullPath,\n                    rawInput: args[0],\n                    ctx,\n                    type\n                });\n            });\n            return proxy;\n        };\n    };\n}\n\n/**\n * The default check to see if we're in a server\n */ const isServerDefault = typeof window === 'undefined' || 'Deno' in window || globalThis.process?.env?.NODE_ENV === 'test' || !!globalThis.process?.env?.JEST_WORKER_ID || !!globalThis.process?.env?.VITEST_WORKER_ID;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/config-d5fdbd39.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/contentType-9fd995d3.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/contentType-9fd995d3.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getJsonContentTypeInputs)\n/* harmony export */ });\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n\n\nfunction getRawProcedureInputOrThrow(opts) {\n    const { req  } = opts;\n    try {\n        if (req.method === 'GET') {\n            if (!req.query.has('input')) {\n                return undefined;\n            }\n            const raw = req.query.get('input');\n            return JSON.parse(raw);\n        }\n        if (!opts.preprocessedBody && typeof req.body === 'string') {\n            // A mutation with no inputs will have req.body === ''\n            return req.body.length === 0 ? undefined : JSON.parse(req.body);\n        }\n        return req.body;\n    } catch (cause) {\n        throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__.T({\n            code: 'PARSE_ERROR',\n            cause\n        });\n    }\n}\nconst deserializeInputValue = (rawValue, transformer)=>{\n    return typeof rawValue !== 'undefined' ? transformer.input.deserialize(rawValue) : rawValue;\n};\nconst getJsonContentTypeInputs = (opts)=>{\n    const rawInput = getRawProcedureInputOrThrow(opts);\n    const transformer = opts.router._def._config.transformer;\n    if (!opts.isBatchCall) {\n        return {\n            0: deserializeInputValue(rawInput, transformer)\n        };\n    }\n    /* istanbul ignore if  */ if (rawInput == null || typeof rawInput !== 'object' || Array.isArray(rawInput)) {\n        throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_0__.T({\n            code: 'BAD_REQUEST',\n            message: '\"input\" needs to be an object when doing a batch call'\n        });\n    }\n    const input = {};\n    for(const key in rawInput){\n        const k = key;\n        const rawValue = rawInput[k];\n        const value = deserializeInputValue(rawValue, transformer);\n        input[k] = value;\n    }\n    return input;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvY29udGVudFR5cGUtOWZkOTk1ZDMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBEOztBQUUxRDtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixrQkFBa0Isc0RBQVM7QUFDM0I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNEQUFTO0FBQzNCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnJhaW5yb3QtdmlkZW8tZ2VuLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2NvbnRlbnRUeXBlLTlmZDk5NWQzLm1qcz9iYzViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFQgYXMgVFJQQ0Vycm9yIH0gZnJvbSAnLi9UUlBDRXJyb3ItOThkNDQ3NTgubWpzJztcblxuZnVuY3Rpb24gZ2V0UmF3UHJvY2VkdXJlSW5wdXRPclRocm93KG9wdHMpIHtcbiAgICBjb25zdCB7IHJlcSAgfSA9IG9wdHM7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHJlcS5tZXRob2QgPT09ICdHRVQnKSB7XG4gICAgICAgICAgICBpZiAoIXJlcS5xdWVyeS5oYXMoJ2lucHV0JykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmF3ID0gcmVxLnF1ZXJ5LmdldCgnaW5wdXQnKTtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHJhdyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFvcHRzLnByZXByb2Nlc3NlZEJvZHkgJiYgdHlwZW9mIHJlcS5ib2R5ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgLy8gQSBtdXRhdGlvbiB3aXRoIG5vIGlucHV0cyB3aWxsIGhhdmUgcmVxLmJvZHkgPT09ICcnXG4gICAgICAgICAgICByZXR1cm4gcmVxLmJvZHkubGVuZ3RoID09PSAwID8gdW5kZWZpbmVkIDogSlNPTi5wYXJzZShyZXEuYm9keSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcS5ib2R5O1xuICAgIH0gY2F0Y2ggKGNhdXNlKSB7XG4gICAgICAgIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuICAgICAgICAgICAgY29kZTogJ1BBUlNFX0VSUk9SJyxcbiAgICAgICAgICAgIGNhdXNlXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmNvbnN0IGRlc2VyaWFsaXplSW5wdXRWYWx1ZSA9IChyYXdWYWx1ZSwgdHJhbnNmb3JtZXIpPT57XG4gICAgcmV0dXJuIHR5cGVvZiByYXdWYWx1ZSAhPT0gJ3VuZGVmaW5lZCcgPyB0cmFuc2Zvcm1lci5pbnB1dC5kZXNlcmlhbGl6ZShyYXdWYWx1ZSkgOiByYXdWYWx1ZTtcbn07XG5jb25zdCBnZXRKc29uQ29udGVudFR5cGVJbnB1dHMgPSAob3B0cyk9PntcbiAgICBjb25zdCByYXdJbnB1dCA9IGdldFJhd1Byb2NlZHVyZUlucHV0T3JUaHJvdyhvcHRzKTtcbiAgICBjb25zdCB0cmFuc2Zvcm1lciA9IG9wdHMucm91dGVyLl9kZWYuX2NvbmZpZy50cmFuc2Zvcm1lcjtcbiAgICBpZiAoIW9wdHMuaXNCYXRjaENhbGwpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIDA6IGRlc2VyaWFsaXplSW5wdXRWYWx1ZShyYXdJbnB1dCwgdHJhbnNmb3JtZXIpXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi8gaWYgKHJhd0lucHV0ID09IG51bGwgfHwgdHlwZW9mIHJhd0lucHV0ICE9PSAnb2JqZWN0JyB8fCBBcnJheS5pc0FycmF5KHJhd0lucHV0KSkge1xuICAgICAgICB0aHJvdyBuZXcgVFJQQ0Vycm9yKHtcbiAgICAgICAgICAgIGNvZGU6ICdCQURfUkVRVUVTVCcsXG4gICAgICAgICAgICBtZXNzYWdlOiAnXCJpbnB1dFwiIG5lZWRzIHRvIGJlIGFuIG9iamVjdCB3aGVuIGRvaW5nIGEgYmF0Y2ggY2FsbCdcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IGlucHV0ID0ge307XG4gICAgZm9yKGNvbnN0IGtleSBpbiByYXdJbnB1dCl7XG4gICAgICAgIGNvbnN0IGsgPSBrZXk7XG4gICAgICAgIGNvbnN0IHJhd1ZhbHVlID0gcmF3SW5wdXRba107XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZGVzZXJpYWxpemVJbnB1dFZhbHVlKHJhd1ZhbHVlLCB0cmFuc2Zvcm1lcik7XG4gICAgICAgIGlucHV0W2tdID0gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBpbnB1dDtcbn07XG5cbmV4cG9ydCB7IGdldEpzb25Db250ZW50VHlwZUlucHV0cyBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/contentType-9fd995d3.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getCauseFromUnknown)\n/* harmony export */ });\n/**\n * @internal\n */ function isObject(value) {\n    // check that value is object\n    return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n\nclass UnknownCauseError extends Error {\n}\nfunction getCauseFromUnknown(cause) {\n    if (cause instanceof Error) {\n        return cause;\n    }\n    const type = typeof cause;\n    if (type === 'undefined' || type === 'function' || cause === null) {\n        return undefined;\n    }\n    // Primitive types just get wrapped in an error\n    if (type !== 'object') {\n        return new Error(String(cause));\n    }\n    // If it's an object, we'll create a synthetic error\n    if (isObject(cause)) {\n        const err = new UnknownCauseError();\n        for(const key in cause){\n            err[key] = cause[key];\n        }\n        return err;\n    }\n    return undefined;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvZ2V0Q2F1c2VGcm9tVW5rbm93bi0yZDY2NDE0YS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnJhaW5yb3QtdmlkZW8tZ2VuLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2dldENhdXNlRnJvbVVua25vd24tMmQ2NjQxNGEubWpzPzE2MjciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW50ZXJuYWxcbiAqLyBmdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICAgIC8vIGNoZWNrIHRoYXQgdmFsdWUgaXMgb2JqZWN0XG4gICAgcmV0dXJuICEhdmFsdWUgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCc7XG59XG5cbmNsYXNzIFVua25vd25DYXVzZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuZnVuY3Rpb24gZ2V0Q2F1c2VGcm9tVW5rbm93bihjYXVzZSkge1xuICAgIGlmIChjYXVzZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHJldHVybiBjYXVzZTtcbiAgICB9XG4gICAgY29uc3QgdHlwZSA9IHR5cGVvZiBjYXVzZTtcbiAgICBpZiAodHlwZSA9PT0gJ3VuZGVmaW5lZCcgfHwgdHlwZSA9PT0gJ2Z1bmN0aW9uJyB8fCBjYXVzZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAvLyBQcmltaXRpdmUgdHlwZXMganVzdCBnZXQgd3JhcHBlZCBpbiBhbiBlcnJvclxuICAgIGlmICh0eXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFN0cmluZyhjYXVzZSkpO1xuICAgIH1cbiAgICAvLyBJZiBpdCdzIGFuIG9iamVjdCwgd2UnbGwgY3JlYXRlIGEgc3ludGhldGljIGVycm9yXG4gICAgaWYgKGlzT2JqZWN0KGNhdXNlKSkge1xuICAgICAgICBjb25zdCBlcnIgPSBuZXcgVW5rbm93bkNhdXNlRXJyb3IoKTtcbiAgICAgICAgZm9yKGNvbnN0IGtleSBpbiBjYXVzZSl7XG4gICAgICAgICAgICBlcnJba2V5XSA9IGNhdXNlW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVycjtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IHsgZ2V0Q2F1c2VGcm9tVW5rbm93biBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/index-f91d720c.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   a: () => (/* binding */ createRecursiveProxy),\n/* harmony export */   b: () => (/* binding */ getHTTPStatusCode),\n/* harmony export */   c: () => (/* binding */ createFlatProxy),\n/* harmony export */   g: () => (/* binding */ getHTTPStatusCodeFromError)\n/* harmony export */ });\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\nconst TRPC_ERROR_CODES_BY_NUMBER = (0,_codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__.i)(_codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_0__.T);\nconst JSONRPC2_TO_HTTP_CODE = {\n    PARSE_ERROR: 400,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    FORBIDDEN: 403,\n    METHOD_NOT_SUPPORTED: 405,\n    TIMEOUT: 408,\n    CONFLICT: 409,\n    PRECONDITION_FAILED: 412,\n    PAYLOAD_TOO_LARGE: 413,\n    UNPROCESSABLE_CONTENT: 422,\n    TOO_MANY_REQUESTS: 429,\n    CLIENT_CLOSED_REQUEST: 499,\n    INTERNAL_SERVER_ERROR: 500,\n    NOT_IMPLEMENTED: 501\n};\nfunction getStatusCodeFromKey(code) {\n    return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\n}\nfunction getHTTPStatusCode(json) {\n    const arr = Array.isArray(json) ? json : [\n        json\n    ];\n    const httpStatuses = new Set(arr.map((res)=>{\n        if ('error' in res) {\n            const data = res.error.data;\n            if (typeof data.httpStatus === 'number') {\n                return data.httpStatus;\n            }\n            const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n            return getStatusCodeFromKey(code);\n        }\n        return 200;\n    }));\n    if (httpStatuses.size !== 1) {\n        return 207;\n    }\n    const httpStatus = httpStatuses.values().next().value;\n    return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n    return getStatusCodeFromKey(error.code);\n}\n\nconst noop = ()=>{\n// noop\n};\nfunction createInnerProxy(callback, path) {\n    const proxy = new Proxy(noop, {\n        get (_obj, key) {\n            if (typeof key !== 'string' || key === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return createInnerProxy(callback, [\n                ...path,\n                key\n            ]);\n        },\n        apply (_1, _2, args) {\n            const isApply = path[path.length - 1] === 'apply';\n            return callback({\n                args: isApply ? args.length >= 2 ? args[1] : [] : args,\n                path: isApply ? path.slice(0, -1) : path\n            });\n        }\n    });\n    return proxy;\n}\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */ const createRecursiveProxy = (callback)=>createInnerProxy(callback, []);\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */ const createFlatProxy = (callback)=>{\n    return new Proxy(noop, {\n        get (_obj, name) {\n            if (typeof name !== 'string' || name === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return callback(name);\n        }\n    });\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvaW5kZXgtZjkxZDcyMGMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRjs7QUFFakYsbUNBQW1DLHNEQUFNLENBQUMsa0RBQXVCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRXFKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnJhaW5yb3QtdmlkZW8tZ2VuLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2luZGV4LWY5MWQ3MjBjLm1qcz9lYzRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGkgYXMgaW52ZXJ0LCBUIGFzIFRSUENfRVJST1JfQ09ERVNfQllfS0VZIH0gZnJvbSAnLi9jb2Rlcy1jOTI0YzNkYi5tanMnO1xuXG5jb25zdCBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUiA9IGludmVydChUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSk7XG5jb25zdCBKU09OUlBDMl9UT19IVFRQX0NPREUgPSB7XG4gICAgUEFSU0VfRVJST1I6IDQwMCxcbiAgICBCQURfUkVRVUVTVDogNDAwLFxuICAgIFVOQVVUSE9SSVpFRDogNDAxLFxuICAgIE5PVF9GT1VORDogNDA0LFxuICAgIEZPUkJJRERFTjogNDAzLFxuICAgIE1FVEhPRF9OT1RfU1VQUE9SVEVEOiA0MDUsXG4gICAgVElNRU9VVDogNDA4LFxuICAgIENPTkZMSUNUOiA0MDksXG4gICAgUFJFQ09ORElUSU9OX0ZBSUxFRDogNDEyLFxuICAgIFBBWUxPQURfVE9PX0xBUkdFOiA0MTMsXG4gICAgVU5QUk9DRVNTQUJMRV9DT05URU5UOiA0MjIsXG4gICAgVE9PX01BTllfUkVRVUVTVFM6IDQyOSxcbiAgICBDTElFTlRfQ0xPU0VEX1JFUVVFU1Q6IDQ5OSxcbiAgICBJTlRFUk5BTF9TRVJWRVJfRVJST1I6IDUwMCxcbiAgICBOT1RfSU1QTEVNRU5URUQ6IDUwMVxufTtcbmZ1bmN0aW9uIGdldFN0YXR1c0NvZGVGcm9tS2V5KGNvZGUpIHtcbiAgICByZXR1cm4gSlNPTlJQQzJfVE9fSFRUUF9DT0RFW2NvZGVdID8/IDUwMDtcbn1cbmZ1bmN0aW9uIGdldEhUVFBTdGF0dXNDb2RlKGpzb24pIHtcbiAgICBjb25zdCBhcnIgPSBBcnJheS5pc0FycmF5KGpzb24pID8ganNvbiA6IFtcbiAgICAgICAganNvblxuICAgIF07XG4gICAgY29uc3QgaHR0cFN0YXR1c2VzID0gbmV3IFNldChhcnIubWFwKChyZXMpPT57XG4gICAgICAgIGlmICgnZXJyb3InIGluIHJlcykge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5lcnJvci5kYXRhO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBkYXRhLmh0dHBTdGF0dXMgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEuaHR0cFN0YXR1cztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNvZGUgPSBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUltyZXMuZXJyb3IuY29kZV07XG4gICAgICAgICAgICByZXR1cm4gZ2V0U3RhdHVzQ29kZUZyb21LZXkoY29kZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDIwMDtcbiAgICB9KSk7XG4gICAgaWYgKGh0dHBTdGF0dXNlcy5zaXplICE9PSAxKSB7XG4gICAgICAgIHJldHVybiAyMDc7XG4gICAgfVxuICAgIGNvbnN0IGh0dHBTdGF0dXMgPSBodHRwU3RhdHVzZXMudmFsdWVzKCkubmV4dCgpLnZhbHVlO1xuICAgIHJldHVybiBodHRwU3RhdHVzO1xufVxuZnVuY3Rpb24gZ2V0SFRUUFN0YXR1c0NvZGVGcm9tRXJyb3IoZXJyb3IpIHtcbiAgICByZXR1cm4gZ2V0U3RhdHVzQ29kZUZyb21LZXkoZXJyb3IuY29kZSk7XG59XG5cbmNvbnN0IG5vb3AgPSAoKT0+e1xuLy8gbm9vcFxufTtcbmZ1bmN0aW9uIGNyZWF0ZUlubmVyUHJveHkoY2FsbGJhY2ssIHBhdGgpIHtcbiAgICBjb25zdCBwcm94eSA9IG5ldyBQcm94eShub29wLCB7XG4gICAgICAgIGdldCAoX29iaiwga2V5KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGtleSAhPT0gJ3N0cmluZycgfHwga2V5ID09PSAndGhlbicpIHtcbiAgICAgICAgICAgICAgICAvLyBzcGVjaWFsIGNhc2UgZm9yIGlmIHRoZSBwcm94eSBpcyBhY2NpZGVudGFsbHkgdHJlYXRlZFxuICAgICAgICAgICAgICAgIC8vIGxpa2UgYSBQcm9taXNlTGlrZSAobGlrZSBpbiBgUHJvbWlzZS5yZXNvbHZlKHByb3h5KWApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVJbm5lclByb3h5KGNhbGxiYWNrLCBbXG4gICAgICAgICAgICAgICAgLi4ucGF0aCxcbiAgICAgICAgICAgICAgICBrZXlcbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9LFxuICAgICAgICBhcHBseSAoXzEsIF8yLCBhcmdzKSB7XG4gICAgICAgICAgICBjb25zdCBpc0FwcGx5ID0gcGF0aFtwYXRoLmxlbmd0aCAtIDFdID09PSAnYXBwbHknO1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHtcbiAgICAgICAgICAgICAgICBhcmdzOiBpc0FwcGx5ID8gYXJncy5sZW5ndGggPj0gMiA/IGFyZ3NbMV0gOiBbXSA6IGFyZ3MsXG4gICAgICAgICAgICAgICAgcGF0aDogaXNBcHBseSA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcHJveHk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBwcm94eSB0aGF0IGNhbGxzIHRoZSBjYWxsYmFjayB3aXRoIHRoZSBwYXRoIGFuZCBhcmd1bWVudHNcbiAqXG4gKiBAaW50ZXJuYWxcbiAqLyBjb25zdCBjcmVhdGVSZWN1cnNpdmVQcm94eSA9IChjYWxsYmFjayk9PmNyZWF0ZUlubmVyUHJveHkoY2FsbGJhY2ssIFtdKTtcbi8qKlxuICogVXNlZCBpbiBwbGFjZSBvZiBgbmV3IFByb3h5YCB3aGVyZSBlYWNoIGhhbmRsZXIgd2lsbCBtYXAgMSBsZXZlbCBkZWVwIHRvIGFub3RoZXIgdmFsdWUuXG4gKlxuICogQGludGVybmFsXG4gKi8gY29uc3QgY3JlYXRlRmxhdFByb3h5ID0gKGNhbGxiYWNrKT0+e1xuICAgIHJldHVybiBuZXcgUHJveHkobm9vcCwge1xuICAgICAgICBnZXQgKF9vYmosIG5hbWUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycgfHwgbmFtZSA9PT0gJ3RoZW4nKSB7XG4gICAgICAgICAgICAgICAgLy8gc3BlY2lhbCBjYXNlIGZvciBpZiB0aGUgcHJveHkgaXMgYWNjaWRlbnRhbGx5IHRyZWF0ZWRcbiAgICAgICAgICAgICAgICAvLyBsaWtlIGEgUHJvbWlzZUxpa2UgKGxpa2UgaW4gYFByb21pc2UucmVzb2x2ZShwcm94eSlgKVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2sobmFtZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5cbmV4cG9ydCB7IFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSIGFzIFQsIGNyZWF0ZVJlY3Vyc2l2ZVByb3h5IGFzIGEsIGdldEhUVFBTdGF0dXNDb2RlIGFzIGIsIGNyZWF0ZUZsYXRQcm94eSBhcyBjLCBnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvciBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@trpc/server/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCError: () => (/* reexport safe */ _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T),\n/* harmony export */   callProcedure: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   createCallerFactory: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   createInputMiddleware: () => (/* binding */ createInputMiddleware),\n/* harmony export */   createOutputMiddleware: () => (/* binding */ createOutputMiddleware),\n/* harmony export */   defaultTransformer: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   experimental_standaloneMiddleware: () => (/* binding */ experimental_standaloneMiddleware),\n/* harmony export */   getDataTransformer: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   getTRPCErrorFromUnknown: () => (/* reexport safe */ _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   initTRPC: () => (/* binding */ initTRPC),\n/* harmony export */   procedureTypes: () => (/* reexport safe */ _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   router: () => (/* binding */ router)\n/* harmony export */ });\n/* harmony import */ var _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config-d5fdbd39.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/config-d5fdbd39.mjs\");\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n/* harmony import */ var _getCauseFromUnknown_2d66414a_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getCauseFromUnknown-2d66414a.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs\");\n\n\n\n\n\n\n\n\n/**\n * @deprecated\n */ const middlewareMarker$1 = 'middlewareMarker';\n\nfunction getParseFn$1(procedureParser) {\n    const parser = procedureParser;\n    if (typeof parser === 'function') {\n        // ProcedureParserCustomValidatorEsque\n        return parser;\n    }\n    if (typeof parser.parseAsync === 'function') {\n        // ProcedureParserZodEsque\n        return parser.parseAsync.bind(parser);\n    }\n    if (typeof parser.parse === 'function') {\n        // ProcedureParserZodEsque\n        return parser.parse.bind(parser);\n    }\n    if (typeof parser.validateSync === 'function') {\n        // ProcedureParserYupEsque\n        return parser.validateSync.bind(parser);\n    }\n    if (typeof parser.create === 'function') {\n        // ProcedureParserSuperstructEsque\n        return parser.create.bind(parser);\n    }\n    throw new Error('Could not find a validator fn');\n}\n/**\n * @internal\n * @deprecated\n */ class Procedure {\n    _def() {\n        return {\n            middlewares: this.middlewares,\n            resolver: this.resolver,\n            inputParser: this.inputParser,\n            outputParser: this.outputParser,\n            meta: this.meta\n        };\n    }\n    async parseInput(rawInput) {\n        try {\n            return await this.parseInputFn(rawInput);\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'BAD_REQUEST',\n                cause\n            });\n        }\n    }\n    async parseOutput(rawOutput) {\n        try {\n            return await this.parseOutputFn(rawOutput);\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'INTERNAL_SERVER_ERROR',\n                cause,\n                message: 'Output validation failed'\n            });\n        }\n    }\n    /**\n   * Trigger middlewares in order, parse raw input, call resolver & parse raw output\n   * @internal\n   */ async call(opts) {\n        // wrap the actual resolver and treat as the last \"middleware\"\n        const middlewaresWithResolver = this.middlewares.concat([\n            async ({ ctx  })=>{\n                const input = await this.parseInput(opts.rawInput);\n                const rawOutput = await this.resolver({\n                    ...opts,\n                    ctx,\n                    input\n                });\n                const data = await this.parseOutput(rawOutput);\n                return {\n                    marker: middlewareMarker$1,\n                    ok: true,\n                    data,\n                    ctx\n                };\n            }\n        ]);\n        // run the middlewares recursively with the resolver as the last one\n        const callRecursive = async (callOpts = {\n            index: 0,\n            ctx: opts.ctx\n        })=>{\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const result = await middlewaresWithResolver[callOpts.index]({\n                    ctx: callOpts.ctx,\n                    type: opts.type,\n                    path: opts.path,\n                    rawInput: opts.rawInput,\n                    meta: this.meta,\n                    next: async (nextOpts)=>{\n                        return await callRecursive({\n                            index: callOpts.index + 1,\n                            ctx: nextOpts ? nextOpts.ctx : callOpts.ctx\n                        });\n                    }\n                });\n                return result;\n            } catch (cause) {\n                return {\n                    ctx: callOpts.ctx,\n                    ok: false,\n                    error: (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause),\n                    marker: middlewareMarker$1\n                };\n            }\n        };\n        // there's always at least one \"next\" since we wrap this.resolver in a middleware\n        const result = await callRecursive();\n        if (!result) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'No result from middlewares - did you forget to `return next()`?'\n            });\n        }\n        if (!result.ok) {\n            // re-throw original error\n            throw result.error;\n        }\n        return result.data;\n    }\n    /**\n   * Create new procedure with passed middlewares\n   * @param middlewares\n   */ inheritMiddlewares(middlewares) {\n        const Constructor = this.constructor;\n        const instance = new Constructor({\n            middlewares: [\n                ...middlewares,\n                ...this.middlewares\n            ],\n            resolver: this.resolver,\n            inputParser: this.inputParser,\n            outputParser: this.outputParser,\n            meta: this.meta\n        });\n        return instance;\n    }\n    constructor(opts){\n        this.middlewares = opts.middlewares;\n        this.resolver = opts.resolver;\n        this.inputParser = opts.inputParser;\n        this.parseInputFn = getParseFn$1(this.inputParser);\n        this.outputParser = opts.outputParser;\n        this.parseOutputFn = getParseFn$1(this.outputParser);\n        this.meta = opts.meta;\n    }\n}\nfunction createProcedure(opts) {\n    const inputParser = 'input' in opts ? opts.input : (input)=>{\n        if (input != null) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'BAD_REQUEST',\n                message: 'No input expected'\n            });\n        }\n        return undefined;\n    };\n    const outputParser = 'output' in opts && opts.output ? opts.output : (output)=>output;\n    return new Procedure({\n        inputParser: inputParser,\n        resolver: opts.resolve,\n        middlewares: [],\n        outputParser: outputParser,\n        meta: opts.meta\n    });\n}\n\nfunction getParseFn(procedureParser) {\n    const parser = procedureParser;\n    if (typeof parser === 'function') {\n        // ParserCustomValidatorEsque\n        return parser;\n    }\n    if (typeof parser.parseAsync === 'function') {\n        // ParserZodEsque\n        return parser.parseAsync.bind(parser);\n    }\n    if (typeof parser.parse === 'function') {\n        // ParserZodEsque\n        // ParserValibotEsque (<= v0.12.X)\n        return parser.parse.bind(parser);\n    }\n    if (typeof parser.validateSync === 'function') {\n        // ParserYupEsque\n        return parser.validateSync.bind(parser);\n    }\n    if (typeof parser.create === 'function') {\n        // ParserSuperstructEsque\n        return parser.create.bind(parser);\n    }\n    if (typeof parser.assert === 'function') {\n        // ParserScaleEsque\n        return (value)=>{\n            parser.assert(value);\n            return value;\n        };\n    }\n    throw new Error('Could not find a validator fn');\n}\n/**\n * @deprecated only for backwards compat\n * @internal\n */ function getParseFnOrPassThrough(procedureParser) {\n    if (!procedureParser) {\n        return (v)=>v;\n    }\n    return getParseFn(procedureParser);\n}\n\n/**\n * Ensures there are no duplicate keys when building a procedure.\n */ function mergeWithoutOverrides(obj1, ...objs) {\n    const newObj = Object.assign(Object.create(null), obj1);\n    for (const overrides of objs){\n        for(const key in overrides){\n            if (key in newObj && newObj[key] !== overrides[key]) {\n                throw new Error(`Duplicate key ${key}`);\n            }\n            newObj[key] = overrides[key];\n        }\n    }\n    return newObj;\n}\n\n/**\n * @internal\n */ function createMiddlewareFactory() {\n    function createMiddlewareInner(middlewares) {\n        return {\n            _middlewares: middlewares,\n            unstable_pipe (middlewareBuilderOrFn) {\n                const pipedMiddleware = '_middlewares' in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [\n                    middlewareBuilderOrFn\n                ];\n                return createMiddlewareInner([\n                    ...middlewares,\n                    ...pipedMiddleware\n                ]);\n            }\n        };\n    }\n    function createMiddleware(fn) {\n        return createMiddlewareInner([\n            fn\n        ]);\n    }\n    return createMiddleware;\n}\nconst experimental_standaloneMiddleware = ()=>({\n        create: createMiddlewareFactory()\n    });\nfunction isPlainObject(obj) {\n    return obj && typeof obj === 'object' && !Array.isArray(obj);\n}\n/**\n * @internal\n * Please note, `trpc-openapi` uses this function.\n */ function createInputMiddleware(parse) {\n    const inputMiddleware = async ({ next , rawInput , input ,  })=>{\n        let parsedInput;\n        try {\n            parsedInput = await parse(rawInput);\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'BAD_REQUEST',\n                cause\n            });\n        }\n        // Multiple input parsers\n        const combinedInput = isPlainObject(input) && isPlainObject(parsedInput) ? {\n            ...input,\n            ...parsedInput\n        } : parsedInput;\n        // TODO fix this typing?\n        return next({\n            input: combinedInput\n        });\n    };\n    inputMiddleware._type = 'input';\n    return inputMiddleware;\n}\n/**\n * @internal\n */ function createOutputMiddleware(parse) {\n    const outputMiddleware = async ({ next  })=>{\n        const result = await next();\n        if (!result.ok) {\n            // pass through failures without validating\n            return result;\n        }\n        try {\n            const data = await parse(result.data);\n            return {\n                ...result,\n                data\n            };\n        } catch (cause) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                message: 'Output validation failed',\n                code: 'INTERNAL_SERVER_ERROR',\n                cause\n            });\n        }\n    };\n    outputMiddleware._type = 'output';\n    return outputMiddleware;\n}\n\n/**\n * @internal\n */ const middlewareMarker = 'middlewareMarker';\n\nfunction createNewBuilder(def1, def2) {\n    const { middlewares =[] , inputs , meta , ...rest } = def2;\n    // TODO: maybe have a fn here to warn about calls\n    return createBuilder({\n        ...mergeWithoutOverrides(def1, rest),\n        inputs: [\n            ...def1.inputs,\n            ...inputs ?? []\n        ],\n        middlewares: [\n            ...def1.middlewares,\n            ...middlewares\n        ],\n        meta: def1.meta && meta ? {\n            ...def1.meta,\n            ...meta\n        } : meta ?? def1.meta\n    });\n}\nfunction createBuilder(initDef = {}) {\n    const _def = {\n        inputs: [],\n        middlewares: [],\n        ...initDef\n    };\n    return {\n        _def,\n        input (input) {\n            const parser = getParseFn(input);\n            return createNewBuilder(_def, {\n                inputs: [\n                    input\n                ],\n                middlewares: [\n                    createInputMiddleware(parser)\n                ]\n            });\n        },\n        output (output) {\n            const parseOutput = getParseFn(output);\n            return createNewBuilder(_def, {\n                output,\n                middlewares: [\n                    createOutputMiddleware(parseOutput)\n                ]\n            });\n        },\n        meta (meta) {\n            return createNewBuilder(_def, {\n                meta: meta\n            });\n        },\n        /**\n     * @deprecated\n     * This functionality is deprecated and will be removed in the next major version.\n     */ unstable_concat (builder) {\n            return createNewBuilder(_def, builder._def);\n        },\n        use (middlewareBuilderOrFn) {\n            // Distinguish between a middleware builder and a middleware function\n            const middlewares = '_middlewares' in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [\n                middlewareBuilderOrFn\n            ];\n            return createNewBuilder(_def, {\n                middlewares: middlewares\n            });\n        },\n        query (resolver) {\n            return createResolver({\n                ..._def,\n                query: true\n            }, resolver);\n        },\n        mutation (resolver) {\n            return createResolver({\n                ..._def,\n                mutation: true\n            }, resolver);\n        },\n        subscription (resolver) {\n            return createResolver({\n                ..._def,\n                subscription: true\n            }, resolver);\n        }\n    };\n}\nfunction createResolver(_def, resolver) {\n    const finalBuilder = createNewBuilder(_def, {\n        resolver,\n        middlewares: [\n            async function resolveMiddleware(opts) {\n                const data = await resolver(opts);\n                return {\n                    marker: middlewareMarker,\n                    ok: true,\n                    data,\n                    ctx: opts.ctx\n                };\n            }\n        ]\n    });\n    return createProcedureCaller(finalBuilder._def);\n}\nconst codeblock = `\nThis is a client-only function.\nIf you want to call this function on the server, see https://trpc.io/docs/server/server-side-calls\n`.trim();\nfunction createProcedureCaller(_def) {\n    const procedure = async function resolve(opts) {\n        // is direct server-side call\n        if (!opts || !('rawInput' in opts)) {\n            throw new Error(codeblock);\n        }\n        // run the middlewares recursively with the resolver as the last one\n        const callRecursive = async (callOpts = {\n            index: 0,\n            ctx: opts.ctx\n        })=>{\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const middleware = _def.middlewares[callOpts.index];\n                const result = await middleware({\n                    ctx: callOpts.ctx,\n                    type: opts.type,\n                    path: opts.path,\n                    rawInput: callOpts.rawInput ?? opts.rawInput,\n                    meta: _def.meta,\n                    input: callOpts.input,\n                    next (_nextOpts) {\n                        const nextOpts = _nextOpts;\n                        return callRecursive({\n                            index: callOpts.index + 1,\n                            ctx: nextOpts && 'ctx' in nextOpts ? {\n                                ...callOpts.ctx,\n                                ...nextOpts.ctx\n                            } : callOpts.ctx,\n                            input: nextOpts && 'input' in nextOpts ? nextOpts.input : callOpts.input,\n                            rawInput: nextOpts && 'rawInput' in nextOpts ? nextOpts.rawInput : callOpts.rawInput\n                        });\n                    }\n                });\n                return result;\n            } catch (cause) {\n                return {\n                    ok: false,\n                    error: (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause),\n                    marker: middlewareMarker\n                };\n            }\n        };\n        // there's always at least one \"next\" since we wrap this.resolver in a middleware\n        const result = await callRecursive();\n        if (!result) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'No result from middlewares - did you forget to `return next()`?'\n            });\n        }\n        if (!result.ok) {\n            // re-throw original error\n            throw result.error;\n        }\n        return result.data;\n    };\n    procedure._def = _def;\n    procedure.meta = _def.meta;\n    return procedure;\n}\n\nfunction migrateProcedure(oldProc, type) {\n    const def = oldProc._def();\n    const inputParser = getParseFnOrPassThrough(def.inputParser);\n    const outputParser = getParseFnOrPassThrough(def.outputParser);\n    const inputMiddleware = createInputMiddleware(inputParser);\n    const builder = createBuilder({\n        inputs: [\n            def.inputParser\n        ],\n        middlewares: [\n            ...def.middlewares,\n            inputMiddleware,\n            createOutputMiddleware(outputParser)\n        ],\n        meta: def.meta,\n        output: def.outputParser,\n        mutation: type === 'mutation',\n        query: type === 'query',\n        subscription: type === 'subscription'\n    });\n    const proc = builder[type]((opts)=>def.resolver(opts));\n    return proc;\n}\nfunction migrateRouter(oldRouter) {\n    const errorFormatter = oldRouter._def.errorFormatter;\n    const transformer = oldRouter._def.transformer;\n    const queries = {};\n    const mutations = {};\n    const subscriptions = {};\n    for (const [name, procedure] of Object.entries(oldRouter._def.queries)){\n        queries[name] = migrateProcedure(procedure, 'query');\n    }\n    for (const [name1, procedure1] of Object.entries(oldRouter._def.mutations)){\n        mutations[name1] = migrateProcedure(procedure1, 'mutation');\n    }\n    for (const [name2, procedure2] of Object.entries(oldRouter._def.subscriptions)){\n        subscriptions[name2] = migrateProcedure(procedure2, 'subscription');\n    }\n    const procedures = mergeWithoutOverrides(queries, mutations, subscriptions);\n    const newRouter = (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.c)({\n        transformer,\n        errorFormatter,\n        isDev: \"development\" !== 'production'\n    })(procedures);\n    return newRouter;\n}\n\nfunction getDataTransformer(transformer) {\n    if ('input' in transformer) {\n        return transformer;\n    }\n    return {\n        input: transformer,\n        output: transformer\n    };\n}\nconst PROCEDURE_DEFINITION_MAP = {\n    query: 'queries',\n    mutation: 'mutations',\n    subscription: 'subscriptions'\n};\nfunction safeObject(...args) {\n    return Object.assign(Object.create(null), ...args);\n}\n/**\n * @internal The type signature of this class may change without warning.\n * @deprecated\n */ class Router {\n    static prefixProcedures(procedures, prefix) {\n        const eps = safeObject();\n        for (const [key, procedure] of Object.entries(procedures)){\n            eps[prefix + key] = procedure;\n        }\n        return eps;\n    }\n    query(path, procedure) {\n        const router = new Router({\n            queries: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    mutation(path, procedure) {\n        const router = new Router({\n            mutations: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    subscription(path, procedure) {\n        const router = new Router({\n            subscriptions: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    merge(prefixOrRouter, maybeRouter) {\n        let prefix = '';\n        let childRouter;\n        if (typeof prefixOrRouter === 'string' && maybeRouter instanceof Router) {\n            prefix = prefixOrRouter;\n            childRouter = maybeRouter;\n        } else if (prefixOrRouter instanceof Router) {\n            childRouter = prefixOrRouter;\n        } else {\n            throw new Error('Invalid args');\n        }\n        const duplicateQueries = Object.keys(childRouter._def.queries).filter((key)=>!!this._def.queries[prefix + key]);\n        const duplicateMutations = Object.keys(childRouter._def.mutations).filter((key)=>!!this._def.mutations[prefix + key]);\n        const duplicateSubscriptions = Object.keys(childRouter._def.subscriptions).filter((key)=>!!this._def.subscriptions[prefix + key]);\n        const duplicates = [\n            ...duplicateQueries,\n            ...duplicateMutations,\n            ...duplicateSubscriptions\n        ];\n        if (duplicates.length) {\n            throw new Error(`Duplicate endpoint(s): ${duplicates.join(', ')}`);\n        }\n        const mergeProcedures = (defs)=>{\n            const newDefs = safeObject();\n            for (const [key, procedure] of Object.entries(defs)){\n                const newProcedure = procedure.inheritMiddlewares(this._def.middlewares);\n                newDefs[key] = newProcedure;\n            }\n            return Router.prefixProcedures(newDefs, prefix);\n        };\n        return new Router({\n            ...this._def,\n            queries: safeObject(this._def.queries, mergeProcedures(childRouter._def.queries)),\n            mutations: safeObject(this._def.mutations, mergeProcedures(childRouter._def.mutations)),\n            subscriptions: safeObject(this._def.subscriptions, mergeProcedures(childRouter._def.subscriptions))\n        });\n    }\n    /**\n   * Invoke procedure. Only for internal use within library.\n   */ async call(opts) {\n        const { type , path  } = opts;\n        const defTarget = PROCEDURE_DEFINITION_MAP[type];\n        const defs = this._def[defTarget];\n        const procedure = defs[path];\n        if (!procedure) {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                code: 'NOT_FOUND',\n                message: `No \"${type}\"-procedure on path \"${path}\"`\n            });\n        }\n        return procedure.call(opts);\n    }\n    createCaller(ctx) {\n        return {\n            query: (path, ...args)=>{\n                return this.call({\n                    type: 'query',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            },\n            mutation: (path, ...args)=>{\n                return this.call({\n                    type: 'mutation',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            },\n            subscription: (path, ...args)=>{\n                return this.call({\n                    type: 'subscription',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            }\n        };\n    }\n    /**\n   * Function to be called before any procedure is invoked\n   * @link https://trpc.io/docs/middlewares\n   */ middleware(middleware) {\n        return new Router({\n            ...this._def,\n            middlewares: [\n                ...this._def.middlewares,\n                middleware\n            ]\n        });\n    }\n    /**\n   * Format errors\n   * @link https://trpc.io/docs/error-formatting\n   */ formatError(errorFormatter) {\n        if (this._def.errorFormatter !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d) {\n            throw new Error('You seem to have double `formatError()`-calls in your router tree');\n        }\n        return new Router({\n            ...this._def,\n            errorFormatter: errorFormatter\n        });\n    }\n    getErrorShape(opts) {\n        const { path , error  } = opts;\n        const { code  } = opts.error;\n        const shape = {\n            message: error.message,\n            code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_3__.T[code],\n            data: {\n                code,\n                httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_2__.g)(error)\n            }\n        };\n        if (globalThis.process?.env?.NODE_ENV !== 'production' && typeof opts.error.stack === 'string') {\n            shape.data.stack = opts.error.stack;\n        }\n        if (typeof path === 'string') {\n            shape.data.path = path;\n        }\n        return this._def.errorFormatter({\n            ...opts,\n            shape\n        });\n    }\n    /**\n   * Add data transformer to serialize/deserialize input args + output\n   * @link https://trpc.io/docs/data-transformers\n   */ transformer(_transformer) {\n        const transformer = getDataTransformer(_transformer);\n        if (this._def.transformer !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a) {\n            throw new Error('You seem to have double `transformer()`-calls in your router tree');\n        }\n        return new Router({\n            ...this._def,\n            transformer\n        });\n    }\n    /**\n   * Flattens the generics of TQueries/TMutations/TSubscriptions.\n   * ⚠️ Experimental - might disappear. ⚠️\n   *\n   * @alpha\n   */ flat() {\n        return this;\n    }\n    /**\n   * Interop mode for v9.x -> v10.x\n   */ interop() {\n        return migrateRouter(this);\n    }\n    constructor(def){\n        this._def = {\n            queries: def?.queries ?? safeObject(),\n            mutations: def?.mutations ?? safeObject(),\n            subscriptions: def?.subscriptions ?? safeObject(),\n            middlewares: def?.middlewares ?? [],\n            errorFormatter: def?.errorFormatter ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d,\n            transformer: def?.transformer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a\n        };\n    }\n}\n/**\n * @deprecated\n */ function router() {\n    return new Router();\n}\n\nfunction mergeRouters(...routerList) {\n    const record = mergeWithoutOverrides({}, ...routerList.map((r)=>r._def.record));\n    const errorFormatter = routerList.reduce((currentErrorFormatter, nextRouter)=>{\n        if (nextRouter._def._config.errorFormatter && nextRouter._def._config.errorFormatter !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d) {\n            if (currentErrorFormatter !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d && currentErrorFormatter !== nextRouter._def._config.errorFormatter) {\n                throw new Error('You seem to have several error formatters');\n            }\n            return nextRouter._def._config.errorFormatter;\n        }\n        return currentErrorFormatter;\n    }, _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d);\n    const transformer = routerList.reduce((prev, current)=>{\n        if (current._def._config.transformer && current._def._config.transformer !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a) {\n            if (prev !== _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a && prev !== current._def._config.transformer) {\n                throw new Error('You seem to have several transformers');\n            }\n            return current._def._config.transformer;\n        }\n        return prev;\n    }, _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a);\n    const router = (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.c)({\n        errorFormatter,\n        transformer,\n        isDev: routerList.some((r)=>r._def._config.isDev),\n        allowOutsideOfServer: routerList.some((r)=>r._def._config.allowOutsideOfServer),\n        isServer: routerList.some((r)=>r._def._config.isServer),\n        $types: routerList[0]?._def._config.$types\n    })(record);\n    return router;\n}\n\n/**\n * TODO: This can be improved:\n * - We should be able to chain `.meta()`/`.context()` only once\n * - Simplify typings\n * - Doesn't need to be a class but it doesn't really hurt either\n */ class TRPCBuilder {\n    context() {\n        return new TRPCBuilder();\n    }\n    meta() {\n        return new TRPCBuilder();\n    }\n    create(options) {\n        return createTRPCInner()(options);\n    }\n}\n/**\n * Initialize tRPC - done exactly once per backend\n */ const initTRPC = new TRPCBuilder();\nfunction createTRPCInner() {\n    return function initTRPCInner(runtime) {\n        const errorFormatter = runtime?.errorFormatter ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.d;\n        const transformer = (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(runtime?.transformer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.a);\n        const config = {\n            transformer,\n            isDev: runtime?.isDev ?? globalThis.process?.env?.NODE_ENV !== 'production',\n            allowOutsideOfServer: runtime?.allowOutsideOfServer ?? false,\n            errorFormatter,\n            isServer: runtime?.isServer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.i,\n            /**\n       * @internal\n       */ $types: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_2__.c)((key)=>{\n                throw new Error(`Tried to access \"$types.${key}\" which is not available at runtime`);\n            })\n        };\n        {\n            // Server check\n            const isServer = runtime?.isServer ?? _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.i;\n            if (!isServer && runtime?.allowOutsideOfServer !== true) {\n                throw new Error(`You're trying to use @trpc/server in a non-server environment. This is not supported by default.`);\n            }\n        }\n        return {\n            /**\n       * These are just types, they can't be used\n       * @internal\n       */ _config: config,\n            /**\n       * Builder object for creating procedures\n       * @see https://trpc.io/docs/server/procedures\n       */ procedure: createBuilder({\n                meta: runtime?.defaultMeta\n            }),\n            /**\n       * Create reusable middlewares\n       * @see https://trpc.io/docs/server/middlewares\n       */ middleware: createMiddlewareFactory(),\n            /**\n       * Create a router\n       * @see https://trpc.io/docs/server/routers\n       */ router: (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.c)(config),\n            /**\n       * Merge Routers\n       * @see https://trpc.io/docs/server/merging-routers\n       */ mergeRouters,\n            /**\n       * Create a server-side caller for a router\n       * @see https://trpc.io/docs/server/server-side-calls\n       */ createCallerFactory: (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.b)()\n        };\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   r: () => (/* binding */ resolveHTTPResponse)\n/* harmony export */ });\n/* harmony import */ var _config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config-d5fdbd39.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/config-d5fdbd39.mjs\");\n/* harmony import */ var _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TRPCError-98d44758.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/TRPCError-98d44758.mjs\");\n/* harmony import */ var _transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformTRPCResponse-1153b421.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\");\n/* harmony import */ var _contentType_9fd995d3_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contentType-9fd995d3.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/contentType-9fd995d3.mjs\");\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n\n\n\n\n\n\nconst HTTP_METHOD_PROCEDURE_TYPE_MAP = {\n    GET: 'query',\n    POST: 'mutation'\n};\nconst fallbackContentTypeHandler = {\n    getInputs: _contentType_9fd995d3_mjs__WEBPACK_IMPORTED_MODULE_3__.g\n};\nfunction initResponse(initOpts) {\n    const { ctx , paths , type , responseMeta , untransformedJSON , errors =[] ,  } = initOpts;\n    let status = untransformedJSON ? (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_4__.b)(untransformedJSON) : 200;\n    const headers = {\n        'Content-Type': 'application/json'\n    };\n    const eagerGeneration = !untransformedJSON;\n    const data = eagerGeneration ? [] : Array.isArray(untransformedJSON) ? untransformedJSON : [\n        untransformedJSON\n    ];\n    const meta = responseMeta?.({\n        ctx,\n        paths,\n        type,\n        data,\n        errors,\n        eagerGeneration\n    }) ?? {};\n    for (const [key, value] of Object.entries(meta.headers ?? {})){\n        headers[key] = value;\n    }\n    if (meta.status) {\n        status = meta.status;\n    }\n    return {\n        status,\n        headers\n    };\n}\nasync function inputToProcedureCall(procedureOpts) {\n    const { opts , ctx , type , input , path  } = procedureOpts;\n    try {\n        const data = await (0,_config_d5fdbd39_mjs__WEBPACK_IMPORTED_MODULE_0__.e)({\n            procedures: opts.router._def.procedures,\n            path,\n            rawInput: input,\n            ctx,\n            type\n        });\n        return {\n            result: {\n                data\n            }\n        };\n    } catch (cause) {\n        const error = (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause);\n        opts.onError?.({\n            error,\n            path,\n            input,\n            ctx,\n            type: type,\n            req: opts.req\n        });\n        return {\n            error: (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.g)({\n                config: opts.router._def._config,\n                error,\n                type,\n                path,\n                input,\n                ctx\n            })\n        };\n    }\n}\nfunction caughtErrorToData(cause, errorOpts) {\n    const { router , req , onError  } = errorOpts.opts;\n    const error = (0,_TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.g)(cause);\n    onError?.({\n        error,\n        path: errorOpts.path,\n        input: errorOpts.input,\n        ctx: errorOpts.ctx,\n        type: errorOpts.type,\n        req\n    });\n    const untransformedJSON = {\n        error: (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.g)({\n            config: router._def._config,\n            error,\n            type: errorOpts.type,\n            path: errorOpts.path,\n            input: errorOpts.input,\n            ctx: errorOpts.ctx\n        })\n    };\n    const transformedJSON = (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(router._def._config, untransformedJSON);\n    const body = JSON.stringify(transformedJSON);\n    return {\n        error,\n        untransformedJSON,\n        body\n    };\n}\n// implementation\nasync function resolveHTTPResponse(opts) {\n    const { router , req , unstable_onHead , unstable_onChunk  } = opts;\n    if (req.method === 'HEAD') {\n        // can be used for lambda warmup\n        const headResponse = {\n            status: 204\n        };\n        unstable_onHead?.(headResponse, false);\n        unstable_onChunk?.([\n            -1,\n            ''\n        ]);\n        return headResponse;\n    }\n    const contentTypeHandler = opts.contentTypeHandler ?? fallbackContentTypeHandler;\n    const batchingEnabled = opts.batching?.enabled ?? true;\n    const type = HTTP_METHOD_PROCEDURE_TYPE_MAP[req.method] ?? 'unknown';\n    let ctx = undefined;\n    let paths;\n    const isBatchCall = !!req.query.get('batch');\n    const isStreamCall = isBatchCall && unstable_onHead && unstable_onChunk && req.headers['trpc-batch-mode'] === 'stream';\n    try {\n        // we create context first so that (unless `createContext()` throws)\n        // error handler may access context information\n        //\n        // this way even if the client sends malformed input that might cause an exception:\n        //  - `opts.error` has value,\n        //  - batching is not enabled,\n        //  - `type` is unknown,\n        //  - `getInputs` throws because of malformed JSON,\n        // context value is still available to the error handler\n        ctx = await opts.createContext();\n        if (opts.error) {\n            throw opts.error;\n        }\n        if (isBatchCall && !batchingEnabled) {\n            throw new Error(`Batching is not enabled on the server`);\n        }\n        /* istanbul ignore if -- @preserve */ if (type === 'subscription') {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                message: 'Subscriptions should use wsLink',\n                code: 'METHOD_NOT_SUPPORTED'\n            });\n        }\n        if (type === 'unknown') {\n            throw new _TRPCError_98d44758_mjs__WEBPACK_IMPORTED_MODULE_1__.T({\n                message: `Unexpected request method ${req.method}`,\n                code: 'METHOD_NOT_SUPPORTED'\n            });\n        }\n        const inputs = await contentTypeHandler.getInputs({\n            isBatchCall,\n            req,\n            router,\n            preprocessedBody: opts.preprocessedBody ?? false\n        });\n        paths = isBatchCall ? decodeURIComponent(opts.path).split(',') : [\n            opts.path\n        ];\n        const promises = paths.map((path, index)=>inputToProcedureCall({\n                opts,\n                ctx,\n                type,\n                input: inputs[index],\n                path\n            }));\n        if (!isStreamCall) {\n            /**\n       * Non-streaming response:\n       * - await all responses in parallel, blocking on the slowest one\n       * - create headers with known response body\n       * - return a complete HTTPResponse\n       */ const untransformedJSON = await Promise.all(promises);\n            const errors = untransformedJSON.flatMap((response)=>'error' in response ? [\n                    response.error\n                ] : []);\n            const headResponse1 = initResponse({\n                ctx,\n                paths,\n                type,\n                responseMeta: opts.responseMeta,\n                untransformedJSON,\n                errors\n            });\n            unstable_onHead?.(headResponse1, false);\n            // return body stuff\n            const result = isBatchCall ? untransformedJSON : untransformedJSON[0]; // eslint-disable-line @typescript-eslint/no-non-null-assertion -- `untransformedJSON` should be the length of `paths` which should be at least 1 otherwise there wouldn't be a request at all\n            const transformedJSON = (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(router._def._config, result);\n            const body = JSON.stringify(transformedJSON);\n            unstable_onChunk?.([\n                -1,\n                body\n            ]);\n            return {\n                status: headResponse1.status,\n                headers: headResponse1.headers,\n                body\n            };\n        }\n        /**\n     * Streaming response:\n     * - block on none, call `onChunk` as soon as each response is ready\n     * - create headers with minimal data (cannot know the response body in advance)\n     * - return void\n     */ const headResponse2 = initResponse({\n            ctx,\n            paths,\n            type,\n            responseMeta: opts.responseMeta\n        });\n        unstable_onHead(headResponse2, true);\n        const indexedPromises = new Map(promises.map((promise, index)=>[\n                index,\n                promise.then((r)=>[\n                        index,\n                        r\n                    ])\n            ]));\n        for (const _ of paths){\n            const [index, untransformedJSON1] = await Promise.race(indexedPromises.values());\n            indexedPromises.delete(index);\n            try {\n                const transformedJSON1 = (0,_transformTRPCResponse_1153b421_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(router._def._config, untransformedJSON1);\n                const body1 = JSON.stringify(transformedJSON1);\n                unstable_onChunk([\n                    index,\n                    body1\n                ]);\n            } catch (cause) {\n                const path = paths[index];\n                const input = inputs[index];\n                const { body: body2  } = caughtErrorToData(cause, {\n                    opts,\n                    ctx,\n                    type,\n                    path,\n                    input\n                });\n                unstable_onChunk([\n                    index,\n                    body2\n                ]);\n            }\n        }\n        return;\n    } catch (cause1) {\n        // we get here if\n        // - batching is called when it's not enabled\n        // - `createContext()` throws\n        // - `router._def._config.transformer.output.serialize()` throws\n        // - post body is too large\n        // - input deserialization fails\n        // - `errorFormatter` return value is malformed\n        const { error , untransformedJSON: untransformedJSON2 , body: body3  } = caughtErrorToData(cause1, {\n            opts,\n            ctx,\n            type\n        });\n        const headResponse3 = initResponse({\n            ctx,\n            paths,\n            type,\n            responseMeta: opts.responseMeta,\n            untransformedJSON: untransformedJSON2,\n            errors: [\n                error\n            ]\n        });\n        unstable_onHead?.(headResponse3, false);\n        unstable_onChunk?.([\n            -1,\n            body3\n        ]);\n        return {\n            status: headResponse3.status,\n            headers: headResponse3.headers,\n            body: body3\n        };\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvcmVzb2x2ZUhUVFBSZXNwb25zZS0yZmM0MzViYi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJEO0FBQzZCO0FBQ2M7QUFDM0I7QUFDYjs7QUFFOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsd0RBQXdCO0FBQ3ZDO0FBQ0E7QUFDQSxZQUFZLHdFQUF3RTtBQUNwRixxQ0FBcUMsc0RBQWlCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZ0VBQWdFO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9DQUFvQztBQUNoRDtBQUNBLDJCQUEyQix1REFBYTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sc0JBQXNCLDBEQUF1QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLG1CQUFtQixzRUFBYTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDBCQUEwQjtBQUN0QyxrQkFBa0IsMERBQXVCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsZUFBZSxzRUFBYTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSw0QkFBNEIsc0VBQXFCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkscURBQXFEO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFTO0FBQy9CO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLHNCQUFzQixzREFBUztBQUMvQixzREFBc0QsV0FBVztBQUNqRTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLG1GQUFtRjtBQUNuRixvQ0FBb0Msc0VBQXFCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsc0VBQXFCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLHdCQUF3QixlQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsK0RBQStEO0FBQy9FO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9yZXNvbHZlSFRUUFJlc3BvbnNlLTJmYzQzNWJiLm1qcz83MmUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGUgYXMgY2FsbFByb2NlZHVyZSB9IGZyb20gJy4vY29uZmlnLWQ1ZmRiZDM5Lm1qcyc7XG5pbXBvcnQgeyBUIGFzIFRSUENFcnJvciwgZyBhcyBnZXRUUlBDRXJyb3JGcm9tVW5rbm93biB9IGZyb20gJy4vVFJQQ0Vycm9yLTk4ZDQ0NzU4Lm1qcyc7XG5pbXBvcnQgeyB0IGFzIHRyYW5zZm9ybVRSUENSZXNwb25zZSwgZyBhcyBnZXRFcnJvclNoYXBlIH0gZnJvbSAnLi90cmFuc2Zvcm1UUlBDUmVzcG9uc2UtMTE1M2I0MjEubWpzJztcbmltcG9ydCB7IGcgYXMgZ2V0SnNvbkNvbnRlbnRUeXBlSW5wdXRzIH0gZnJvbSAnLi9jb250ZW50VHlwZS05ZmQ5OTVkMy5tanMnO1xuaW1wb3J0IHsgYiBhcyBnZXRIVFRQU3RhdHVzQ29kZSB9IGZyb20gJy4vaW5kZXgtZjkxZDcyMGMubWpzJztcblxuY29uc3QgSFRUUF9NRVRIT0RfUFJPQ0VEVVJFX1RZUEVfTUFQID0ge1xuICAgIEdFVDogJ3F1ZXJ5JyxcbiAgICBQT1NUOiAnbXV0YXRpb24nXG59O1xuY29uc3QgZmFsbGJhY2tDb250ZW50VHlwZUhhbmRsZXIgPSB7XG4gICAgZ2V0SW5wdXRzOiBnZXRKc29uQ29udGVudFR5cGVJbnB1dHNcbn07XG5mdW5jdGlvbiBpbml0UmVzcG9uc2UoaW5pdE9wdHMpIHtcbiAgICBjb25zdCB7IGN0eCAsIHBhdGhzICwgdHlwZSAsIHJlc3BvbnNlTWV0YSAsIHVudHJhbnNmb3JtZWRKU09OICwgZXJyb3JzID1bXSAsICB9ID0gaW5pdE9wdHM7XG4gICAgbGV0IHN0YXR1cyA9IHVudHJhbnNmb3JtZWRKU09OID8gZ2V0SFRUUFN0YXR1c0NvZGUodW50cmFuc2Zvcm1lZEpTT04pIDogMjAwO1xuICAgIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICB9O1xuICAgIGNvbnN0IGVhZ2VyR2VuZXJhdGlvbiA9ICF1bnRyYW5zZm9ybWVkSlNPTjtcbiAgICBjb25zdCBkYXRhID0gZWFnZXJHZW5lcmF0aW9uID8gW10gOiBBcnJheS5pc0FycmF5KHVudHJhbnNmb3JtZWRKU09OKSA/IHVudHJhbnNmb3JtZWRKU09OIDogW1xuICAgICAgICB1bnRyYW5zZm9ybWVkSlNPTlxuICAgIF07XG4gICAgY29uc3QgbWV0YSA9IHJlc3BvbnNlTWV0YT8uKHtcbiAgICAgICAgY3R4LFxuICAgICAgICBwYXRocyxcbiAgICAgICAgdHlwZSxcbiAgICAgICAgZGF0YSxcbiAgICAgICAgZXJyb3JzLFxuICAgICAgICBlYWdlckdlbmVyYXRpb25cbiAgICB9KSA/PyB7fTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhtZXRhLmhlYWRlcnMgPz8ge30pKXtcbiAgICAgICAgaGVhZGVyc1trZXldID0gdmFsdWU7XG4gICAgfVxuICAgIGlmIChtZXRhLnN0YXR1cykge1xuICAgICAgICBzdGF0dXMgPSBtZXRhLnN0YXR1cztcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RhdHVzLFxuICAgICAgICBoZWFkZXJzXG4gICAgfTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGlucHV0VG9Qcm9jZWR1cmVDYWxsKHByb2NlZHVyZU9wdHMpIHtcbiAgICBjb25zdCB7IG9wdHMgLCBjdHggLCB0eXBlICwgaW5wdXQgLCBwYXRoICB9ID0gcHJvY2VkdXJlT3B0cztcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgY2FsbFByb2NlZHVyZSh7XG4gICAgICAgICAgICBwcm9jZWR1cmVzOiBvcHRzLnJvdXRlci5fZGVmLnByb2NlZHVyZXMsXG4gICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgcmF3SW5wdXQ6IGlucHV0LFxuICAgICAgICAgICAgY3R4LFxuICAgICAgICAgICAgdHlwZVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlc3VsdDoge1xuICAgICAgICAgICAgICAgIGRhdGFcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9IGNhdGNoIChjYXVzZSkge1xuICAgICAgICBjb25zdCBlcnJvciA9IGdldFRSUENFcnJvckZyb21Vbmtub3duKGNhdXNlKTtcbiAgICAgICAgb3B0cy5vbkVycm9yPy4oe1xuICAgICAgICAgICAgZXJyb3IsXG4gICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgaW5wdXQsXG4gICAgICAgICAgICBjdHgsXG4gICAgICAgICAgICB0eXBlOiB0eXBlLFxuICAgICAgICAgICAgcmVxOiBvcHRzLnJlcVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVycm9yOiBnZXRFcnJvclNoYXBlKHtcbiAgICAgICAgICAgICAgICBjb25maWc6IG9wdHMucm91dGVyLl9kZWYuX2NvbmZpZyxcbiAgICAgICAgICAgICAgICBlcnJvcixcbiAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgaW5wdXQsXG4gICAgICAgICAgICAgICAgY3R4XG4gICAgICAgICAgICB9KVxuICAgICAgICB9O1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNhdWdodEVycm9yVG9EYXRhKGNhdXNlLCBlcnJvck9wdHMpIHtcbiAgICBjb25zdCB7IHJvdXRlciAsIHJlcSAsIG9uRXJyb3IgIH0gPSBlcnJvck9wdHMub3B0cztcbiAgICBjb25zdCBlcnJvciA9IGdldFRSUENFcnJvckZyb21Vbmtub3duKGNhdXNlKTtcbiAgICBvbkVycm9yPy4oe1xuICAgICAgICBlcnJvcixcbiAgICAgICAgcGF0aDogZXJyb3JPcHRzLnBhdGgsXG4gICAgICAgIGlucHV0OiBlcnJvck9wdHMuaW5wdXQsXG4gICAgICAgIGN0eDogZXJyb3JPcHRzLmN0eCxcbiAgICAgICAgdHlwZTogZXJyb3JPcHRzLnR5cGUsXG4gICAgICAgIHJlcVxuICAgIH0pO1xuICAgIGNvbnN0IHVudHJhbnNmb3JtZWRKU09OID0ge1xuICAgICAgICBlcnJvcjogZ2V0RXJyb3JTaGFwZSh7XG4gICAgICAgICAgICBjb25maWc6IHJvdXRlci5fZGVmLl9jb25maWcsXG4gICAgICAgICAgICBlcnJvcixcbiAgICAgICAgICAgIHR5cGU6IGVycm9yT3B0cy50eXBlLFxuICAgICAgICAgICAgcGF0aDogZXJyb3JPcHRzLnBhdGgsXG4gICAgICAgICAgICBpbnB1dDogZXJyb3JPcHRzLmlucHV0LFxuICAgICAgICAgICAgY3R4OiBlcnJvck9wdHMuY3R4XG4gICAgICAgIH0pXG4gICAgfTtcbiAgICBjb25zdCB0cmFuc2Zvcm1lZEpTT04gPSB0cmFuc2Zvcm1UUlBDUmVzcG9uc2Uocm91dGVyLl9kZWYuX2NvbmZpZywgdW50cmFuc2Zvcm1lZEpTT04pO1xuICAgIGNvbnN0IGJvZHkgPSBKU09OLnN0cmluZ2lmeSh0cmFuc2Zvcm1lZEpTT04pO1xuICAgIHJldHVybiB7XG4gICAgICAgIGVycm9yLFxuICAgICAgICB1bnRyYW5zZm9ybWVkSlNPTixcbiAgICAgICAgYm9keVxuICAgIH07XG59XG4vLyBpbXBsZW1lbnRhdGlvblxuYXN5bmMgZnVuY3Rpb24gcmVzb2x2ZUhUVFBSZXNwb25zZShvcHRzKSB7XG4gICAgY29uc3QgeyByb3V0ZXIgLCByZXEgLCB1bnN0YWJsZV9vbkhlYWQgLCB1bnN0YWJsZV9vbkNodW5rICB9ID0gb3B0cztcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ0hFQUQnKSB7XG4gICAgICAgIC8vIGNhbiBiZSB1c2VkIGZvciBsYW1iZGEgd2FybXVwXG4gICAgICAgIGNvbnN0IGhlYWRSZXNwb25zZSA9IHtcbiAgICAgICAgICAgIHN0YXR1czogMjA0XG4gICAgICAgIH07XG4gICAgICAgIHVuc3RhYmxlX29uSGVhZD8uKGhlYWRSZXNwb25zZSwgZmFsc2UpO1xuICAgICAgICB1bnN0YWJsZV9vbkNodW5rPy4oW1xuICAgICAgICAgICAgLTEsXG4gICAgICAgICAgICAnJ1xuICAgICAgICBdKTtcbiAgICAgICAgcmV0dXJuIGhlYWRSZXNwb25zZTtcbiAgICB9XG4gICAgY29uc3QgY29udGVudFR5cGVIYW5kbGVyID0gb3B0cy5jb250ZW50VHlwZUhhbmRsZXIgPz8gZmFsbGJhY2tDb250ZW50VHlwZUhhbmRsZXI7XG4gICAgY29uc3QgYmF0Y2hpbmdFbmFibGVkID0gb3B0cy5iYXRjaGluZz8uZW5hYmxlZCA/PyB0cnVlO1xuICAgIGNvbnN0IHR5cGUgPSBIVFRQX01FVEhPRF9QUk9DRURVUkVfVFlQRV9NQVBbcmVxLm1ldGhvZF0gPz8gJ3Vua25vd24nO1xuICAgIGxldCBjdHggPSB1bmRlZmluZWQ7XG4gICAgbGV0IHBhdGhzO1xuICAgIGNvbnN0IGlzQmF0Y2hDYWxsID0gISFyZXEucXVlcnkuZ2V0KCdiYXRjaCcpO1xuICAgIGNvbnN0IGlzU3RyZWFtQ2FsbCA9IGlzQmF0Y2hDYWxsICYmIHVuc3RhYmxlX29uSGVhZCAmJiB1bnN0YWJsZV9vbkNodW5rICYmIHJlcS5oZWFkZXJzWyd0cnBjLWJhdGNoLW1vZGUnXSA9PT0gJ3N0cmVhbSc7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2UgY3JlYXRlIGNvbnRleHQgZmlyc3Qgc28gdGhhdCAodW5sZXNzIGBjcmVhdGVDb250ZXh0KClgIHRocm93cylcbiAgICAgICAgLy8gZXJyb3IgaGFuZGxlciBtYXkgYWNjZXNzIGNvbnRleHQgaW5mb3JtYXRpb25cbiAgICAgICAgLy9cbiAgICAgICAgLy8gdGhpcyB3YXkgZXZlbiBpZiB0aGUgY2xpZW50IHNlbmRzIG1hbGZvcm1lZCBpbnB1dCB0aGF0IG1pZ2h0IGNhdXNlIGFuIGV4Y2VwdGlvbjpcbiAgICAgICAgLy8gIC0gYG9wdHMuZXJyb3JgIGhhcyB2YWx1ZSxcbiAgICAgICAgLy8gIC0gYmF0Y2hpbmcgaXMgbm90IGVuYWJsZWQsXG4gICAgICAgIC8vICAtIGB0eXBlYCBpcyB1bmtub3duLFxuICAgICAgICAvLyAgLSBgZ2V0SW5wdXRzYCB0aHJvd3MgYmVjYXVzZSBvZiBtYWxmb3JtZWQgSlNPTixcbiAgICAgICAgLy8gY29udGV4dCB2YWx1ZSBpcyBzdGlsbCBhdmFpbGFibGUgdG8gdGhlIGVycm9yIGhhbmRsZXJcbiAgICAgICAgY3R4ID0gYXdhaXQgb3B0cy5jcmVhdGVDb250ZXh0KCk7XG4gICAgICAgIGlmIChvcHRzLmVycm9yKSB7XG4gICAgICAgICAgICB0aHJvdyBvcHRzLmVycm9yO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0JhdGNoQ2FsbCAmJiAhYmF0Y2hpbmdFbmFibGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEJhdGNoaW5nIGlzIG5vdCBlbmFibGVkIG9uIHRoZSBzZXJ2ZXJgKTtcbiAgICAgICAgfVxuICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgLS0gQHByZXNlcnZlICovIGlmICh0eXBlID09PSAnc3Vic2NyaXB0aW9uJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFRSUENFcnJvcih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ1N1YnNjcmlwdGlvbnMgc2hvdWxkIHVzZSB3c0xpbmsnLFxuICAgICAgICAgICAgICAgIGNvZGU6ICdNRVRIT0RfTk9UX1NVUFBPUlRFRCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAndW5rbm93bicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGBVbmV4cGVjdGVkIHJlcXVlc3QgbWV0aG9kICR7cmVxLm1ldGhvZH1gLFxuICAgICAgICAgICAgICAgIGNvZGU6ICdNRVRIT0RfTk9UX1NVUFBPUlRFRCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGlucHV0cyA9IGF3YWl0IGNvbnRlbnRUeXBlSGFuZGxlci5nZXRJbnB1dHMoe1xuICAgICAgICAgICAgaXNCYXRjaENhbGwsXG4gICAgICAgICAgICByZXEsXG4gICAgICAgICAgICByb3V0ZXIsXG4gICAgICAgICAgICBwcmVwcm9jZXNzZWRCb2R5OiBvcHRzLnByZXByb2Nlc3NlZEJvZHkgPz8gZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICAgIHBhdGhzID0gaXNCYXRjaENhbGwgPyBkZWNvZGVVUklDb21wb25lbnQob3B0cy5wYXRoKS5zcGxpdCgnLCcpIDogW1xuICAgICAgICAgICAgb3B0cy5wYXRoXG4gICAgICAgIF07XG4gICAgICAgIGNvbnN0IHByb21pc2VzID0gcGF0aHMubWFwKChwYXRoLCBpbmRleCk9PmlucHV0VG9Qcm9jZWR1cmVDYWxsKHtcbiAgICAgICAgICAgICAgICBvcHRzLFxuICAgICAgICAgICAgICAgIGN0eCxcbiAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgIGlucHV0OiBpbnB1dHNbaW5kZXhdLFxuICAgICAgICAgICAgICAgIHBhdGhcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgaWYgKCFpc1N0cmVhbUNhbGwpIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICogTm9uLXN0cmVhbWluZyByZXNwb25zZTpcbiAgICAgICAqIC0gYXdhaXQgYWxsIHJlc3BvbnNlcyBpbiBwYXJhbGxlbCwgYmxvY2tpbmcgb24gdGhlIHNsb3dlc3Qgb25lXG4gICAgICAgKiAtIGNyZWF0ZSBoZWFkZXJzIHdpdGgga25vd24gcmVzcG9uc2UgYm9keVxuICAgICAgICogLSByZXR1cm4gYSBjb21wbGV0ZSBIVFRQUmVzcG9uc2VcbiAgICAgICAqLyBjb25zdCB1bnRyYW5zZm9ybWVkSlNPTiA9IGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgICAgICAgICAgIGNvbnN0IGVycm9ycyA9IHVudHJhbnNmb3JtZWRKU09OLmZsYXRNYXAoKHJlc3BvbnNlKT0+J2Vycm9yJyBpbiByZXNwb25zZSA/IFtcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UuZXJyb3JcbiAgICAgICAgICAgICAgICBdIDogW10pO1xuICAgICAgICAgICAgY29uc3QgaGVhZFJlc3BvbnNlMSA9IGluaXRSZXNwb25zZSh7XG4gICAgICAgICAgICAgICAgY3R4LFxuICAgICAgICAgICAgICAgIHBhdGhzLFxuICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgcmVzcG9uc2VNZXRhOiBvcHRzLnJlc3BvbnNlTWV0YSxcbiAgICAgICAgICAgICAgICB1bnRyYW5zZm9ybWVkSlNPTixcbiAgICAgICAgICAgICAgICBlcnJvcnNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdW5zdGFibGVfb25IZWFkPy4oaGVhZFJlc3BvbnNlMSwgZmFsc2UpO1xuICAgICAgICAgICAgLy8gcmV0dXJuIGJvZHkgc3R1ZmZcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGlzQmF0Y2hDYWxsID8gdW50cmFuc2Zvcm1lZEpTT04gOiB1bnRyYW5zZm9ybWVkSlNPTlswXTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uIC0tIGB1bnRyYW5zZm9ybWVkSlNPTmAgc2hvdWxkIGJlIHRoZSBsZW5ndGggb2YgYHBhdGhzYCB3aGljaCBzaG91bGQgYmUgYXQgbGVhc3QgMSBvdGhlcndpc2UgdGhlcmUgd291bGRuJ3QgYmUgYSByZXF1ZXN0IGF0IGFsbFxuICAgICAgICAgICAgY29uc3QgdHJhbnNmb3JtZWRKU09OID0gdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlKHJvdXRlci5fZGVmLl9jb25maWcsIHJlc3VsdCk7XG4gICAgICAgICAgICBjb25zdCBib2R5ID0gSlNPTi5zdHJpbmdpZnkodHJhbnNmb3JtZWRKU09OKTtcbiAgICAgICAgICAgIHVuc3RhYmxlX29uQ2h1bms/LihbXG4gICAgICAgICAgICAgICAgLTEsXG4gICAgICAgICAgICAgICAgYm9keVxuICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogaGVhZFJlc3BvbnNlMS5zdGF0dXMsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogaGVhZFJlc3BvbnNlMS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIGJvZHlcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgLyoqXG4gICAgICogU3RyZWFtaW5nIHJlc3BvbnNlOlxuICAgICAqIC0gYmxvY2sgb24gbm9uZSwgY2FsbCBgb25DaHVua2AgYXMgc29vbiBhcyBlYWNoIHJlc3BvbnNlIGlzIHJlYWR5XG4gICAgICogLSBjcmVhdGUgaGVhZGVycyB3aXRoIG1pbmltYWwgZGF0YSAoY2Fubm90IGtub3cgdGhlIHJlc3BvbnNlIGJvZHkgaW4gYWR2YW5jZSlcbiAgICAgKiAtIHJldHVybiB2b2lkXG4gICAgICovIGNvbnN0IGhlYWRSZXNwb25zZTIgPSBpbml0UmVzcG9uc2Uoe1xuICAgICAgICAgICAgY3R4LFxuICAgICAgICAgICAgcGF0aHMsXG4gICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgcmVzcG9uc2VNZXRhOiBvcHRzLnJlc3BvbnNlTWV0YVxuICAgICAgICB9KTtcbiAgICAgICAgdW5zdGFibGVfb25IZWFkKGhlYWRSZXNwb25zZTIsIHRydWUpO1xuICAgICAgICBjb25zdCBpbmRleGVkUHJvbWlzZXMgPSBuZXcgTWFwKHByb21pc2VzLm1hcCgocHJvbWlzZSwgaW5kZXgpPT5bXG4gICAgICAgICAgICAgICAgaW5kZXgsXG4gICAgICAgICAgICAgICAgcHJvbWlzZS50aGVuKChyKT0+W1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICByXG4gICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICBdKSk7XG4gICAgICAgIGZvciAoY29uc3QgXyBvZiBwYXRocyl7XG4gICAgICAgICAgICBjb25zdCBbaW5kZXgsIHVudHJhbnNmb3JtZWRKU09OMV0gPSBhd2FpdCBQcm9taXNlLnJhY2UoaW5kZXhlZFByb21pc2VzLnZhbHVlcygpKTtcbiAgICAgICAgICAgIGluZGV4ZWRQcm9taXNlcy5kZWxldGUoaW5kZXgpO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm1lZEpTT04xID0gdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlKHJvdXRlci5fZGVmLl9jb25maWcsIHVudHJhbnNmb3JtZWRKU09OMSk7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9keTEgPSBKU09OLnN0cmluZ2lmeSh0cmFuc2Zvcm1lZEpTT04xKTtcbiAgICAgICAgICAgICAgICB1bnN0YWJsZV9vbkNodW5rKFtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXgsXG4gICAgICAgICAgICAgICAgICAgIGJvZHkxXG4gICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICB9IGNhdGNoIChjYXVzZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhdGggPSBwYXRoc1tpbmRleF07XG4gICAgICAgICAgICAgICAgY29uc3QgaW5wdXQgPSBpbnB1dHNbaW5kZXhdO1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgYm9keTogYm9keTIgIH0gPSBjYXVnaHRFcnJvclRvRGF0YShjYXVzZSwge1xuICAgICAgICAgICAgICAgICAgICBvcHRzLFxuICAgICAgICAgICAgICAgICAgICBjdHgsXG4gICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgICAgIGlucHV0XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdW5zdGFibGVfb25DaHVuayhbXG4gICAgICAgICAgICAgICAgICAgIGluZGV4LFxuICAgICAgICAgICAgICAgICAgICBib2R5MlxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9IGNhdGNoIChjYXVzZTEpIHtcbiAgICAgICAgLy8gd2UgZ2V0IGhlcmUgaWZcbiAgICAgICAgLy8gLSBiYXRjaGluZyBpcyBjYWxsZWQgd2hlbiBpdCdzIG5vdCBlbmFibGVkXG4gICAgICAgIC8vIC0gYGNyZWF0ZUNvbnRleHQoKWAgdGhyb3dzXG4gICAgICAgIC8vIC0gYHJvdXRlci5fZGVmLl9jb25maWcudHJhbnNmb3JtZXIub3V0cHV0LnNlcmlhbGl6ZSgpYCB0aHJvd3NcbiAgICAgICAgLy8gLSBwb3N0IGJvZHkgaXMgdG9vIGxhcmdlXG4gICAgICAgIC8vIC0gaW5wdXQgZGVzZXJpYWxpemF0aW9uIGZhaWxzXG4gICAgICAgIC8vIC0gYGVycm9yRm9ybWF0dGVyYCByZXR1cm4gdmFsdWUgaXMgbWFsZm9ybWVkXG4gICAgICAgIGNvbnN0IHsgZXJyb3IgLCB1bnRyYW5zZm9ybWVkSlNPTjogdW50cmFuc2Zvcm1lZEpTT04yICwgYm9keTogYm9keTMgIH0gPSBjYXVnaHRFcnJvclRvRGF0YShjYXVzZTEsIHtcbiAgICAgICAgICAgIG9wdHMsXG4gICAgICAgICAgICBjdHgsXG4gICAgICAgICAgICB0eXBlXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBoZWFkUmVzcG9uc2UzID0gaW5pdFJlc3BvbnNlKHtcbiAgICAgICAgICAgIGN0eCxcbiAgICAgICAgICAgIHBhdGhzLFxuICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgIHJlc3BvbnNlTWV0YTogb3B0cy5yZXNwb25zZU1ldGEsXG4gICAgICAgICAgICB1bnRyYW5zZm9ybWVkSlNPTjogdW50cmFuc2Zvcm1lZEpTT04yLFxuICAgICAgICAgICAgZXJyb3JzOiBbXG4gICAgICAgICAgICAgICAgZXJyb3JcbiAgICAgICAgICAgIF1cbiAgICAgICAgfSk7XG4gICAgICAgIHVuc3RhYmxlX29uSGVhZD8uKGhlYWRSZXNwb25zZTMsIGZhbHNlKTtcbiAgICAgICAgdW5zdGFibGVfb25DaHVuaz8uKFtcbiAgICAgICAgICAgIC0xLFxuICAgICAgICAgICAgYm9keTNcbiAgICAgICAgXSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IGhlYWRSZXNwb25zZTMuc3RhdHVzLFxuICAgICAgICAgICAgaGVhZGVyczogaGVhZFJlc3BvbnNlMy5oZWFkZXJzLFxuICAgICAgICAgICAgYm9keTogYm9keTNcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IHJlc29sdmVIVFRQUmVzcG9uc2UgYXMgciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/resolveHTTPResponse-2fc435bb.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/toURL-8f0ea228.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/toURL-8f0ea228.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   t: () => (/* binding */ toURL)\n/* harmony export */ });\nfunction toURL(urlOrPathname) {\n    const url = urlOrPathname.startsWith('/') ? `http://127.0.0.1${urlOrPathname}` : urlOrPathname;\n    return new URL(url);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdG9VUkwtOGYwZWEyMjgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLG1FQUFtRSxjQUFjO0FBQ2pGO0FBQ0E7O0FBRXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnJhaW5yb3QtdmlkZW8tZ2VuLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L3RvVVJMLThmMGVhMjI4Lm1qcz9kZWI1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHRvVVJMKHVybE9yUGF0aG5hbWUpIHtcbiAgICBjb25zdCB1cmwgPSB1cmxPclBhdGhuYW1lLnN0YXJ0c1dpdGgoJy8nKSA/IGBodHRwOi8vMTI3LjAuMC4xJHt1cmxPclBhdGhuYW1lfWAgOiB1cmxPclBhdGhuYW1lO1xuICAgIHJldHVybiBuZXcgVVJMKHVybCk7XG59XG5cbmV4cG9ydCB7IHRvVVJMIGFzIHQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/toURL-8f0ea228.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getErrorShape),\n/* harmony export */   t: () => (/* binding */ transformTRPCResponse)\n/* harmony export */ });\n/* harmony import */ var _index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-f91d720c.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/index-f91d720c.mjs\");\n/* harmony import */ var _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./codes-c924c3db.mjs */ \"(rsc)/./node_modules/@trpc/server/dist/codes-c924c3db.mjs\");\n\n\n\n/**\n * @internal\n */ function getErrorShape(opts) {\n    const { path , error , config  } = opts;\n    const { code  } = opts.error;\n    const shape = {\n        message: error.message,\n        code: _codes_c924c3db_mjs__WEBPACK_IMPORTED_MODULE_1__.T[code],\n        data: {\n            code,\n            httpStatus: (0,_index_f91d720c_mjs__WEBPACK_IMPORTED_MODULE_0__.g)(error)\n        }\n    };\n    if (config.isDev && typeof opts.error.stack === 'string') {\n        shape.data.stack = opts.error.stack;\n    }\n    if (typeof path === 'string') {\n        shape.data.path = path;\n    }\n    return config.errorFormatter({\n        ...opts,\n        shape\n    });\n}\n\nfunction transformTRPCResponseItem(config, item) {\n    if ('error' in item) {\n        return {\n            ...item,\n            error: config.transformer.output.serialize(item.error)\n        };\n    }\n    if ('data' in item.result) {\n        return {\n            ...item,\n            result: {\n                ...item.result,\n                data: config.transformer.output.serialize(item.result.data)\n            }\n        };\n    }\n    return item;\n}\n/**\n * Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n **/ function transformTRPCResponse(config, itemOrItems) {\n    return Array.isArray(itemOrItems) ? itemOrItems.map((item)=>transformTRPCResponseItem(config, item)) : transformTRPCResponseItem(config, itemOrItems);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLTExNTNiNDIxLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVFO0FBQ0g7O0FBRXBFO0FBQ0E7QUFDQTtBQUNBLFlBQVkseUJBQXlCO0FBQ3JDLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0EsY0FBYyxrREFBdUI7QUFDckM7QUFDQTtBQUNBLHdCQUF3QixzREFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwRCIsInNvdXJjZXMiOlsid2VicGFjazovL2JyYWlucm90LXZpZGVvLWdlbi8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC90cmFuc2Zvcm1UUlBDUmVzcG9uc2UtMTE1M2I0MjEubWpzPzExMTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZyBhcyBnZXRIVFRQU3RhdHVzQ29kZUZyb21FcnJvciB9IGZyb20gJy4vaW5kZXgtZjkxZDcyMGMubWpzJztcbmltcG9ydCB7IFQgYXMgVFJQQ19FUlJPUl9DT0RFU19CWV9LRVkgfSBmcm9tICcuL2NvZGVzLWM5MjRjM2RiLm1qcyc7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi8gZnVuY3Rpb24gZ2V0RXJyb3JTaGFwZShvcHRzKSB7XG4gICAgY29uc3QgeyBwYXRoICwgZXJyb3IgLCBjb25maWcgIH0gPSBvcHRzO1xuICAgIGNvbnN0IHsgY29kZSAgfSA9IG9wdHMuZXJyb3I7XG4gICAgY29uc3Qgc2hhcGUgPSB7XG4gICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgIGNvZGU6IFRSUENfRVJST1JfQ09ERVNfQllfS0VZW2NvZGVdLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBjb2RlLFxuICAgICAgICAgICAgaHR0cFN0YXR1czogZ2V0SFRUUFN0YXR1c0NvZGVGcm9tRXJyb3IoZXJyb3IpXG4gICAgICAgIH1cbiAgICB9O1xuICAgIGlmIChjb25maWcuaXNEZXYgJiYgdHlwZW9mIG9wdHMuZXJyb3Iuc3RhY2sgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNoYXBlLmRhdGEuc3RhY2sgPSBvcHRzLmVycm9yLnN0YWNrO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNoYXBlLmRhdGEucGF0aCA9IHBhdGg7XG4gICAgfVxuICAgIHJldHVybiBjb25maWcuZXJyb3JGb3JtYXR0ZXIoe1xuICAgICAgICAuLi5vcHRzLFxuICAgICAgICBzaGFwZVxuICAgIH0pO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1UUlBDUmVzcG9uc2VJdGVtKGNvbmZpZywgaXRlbSkge1xuICAgIGlmICgnZXJyb3InIGluIGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLml0ZW0sXG4gICAgICAgICAgICBlcnJvcjogY29uZmlnLnRyYW5zZm9ybWVyLm91dHB1dC5zZXJpYWxpemUoaXRlbS5lcnJvcilcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKCdkYXRhJyBpbiBpdGVtLnJlc3VsdCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICAgIHJlc3VsdDoge1xuICAgICAgICAgICAgICAgIC4uLml0ZW0ucmVzdWx0LFxuICAgICAgICAgICAgICAgIGRhdGE6IGNvbmZpZy50cmFuc2Zvcm1lci5vdXRwdXQuc2VyaWFsaXplKGl0ZW0ucmVzdWx0LmRhdGEpXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBpdGVtO1xufVxuLyoqXG4gKiBUYWtlcyBhIHVuc2VyaWFsaXplZCBgVFJQQ1Jlc3BvbnNlYCBhbmQgc2VyaWFsaXplcyBpdCB3aXRoIHRoZSByb3V0ZXIncyB0cmFuc2Zvcm1lcnNcbiAqKi8gZnVuY3Rpb24gdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlKGNvbmZpZywgaXRlbU9ySXRlbXMpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShpdGVtT3JJdGVtcykgPyBpdGVtT3JJdGVtcy5tYXAoKGl0ZW0pPT50cmFuc2Zvcm1UUlBDUmVzcG9uc2VJdGVtKGNvbmZpZywgaXRlbSkpIDogdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlSXRlbShjb25maWcsIGl0ZW1Pckl0ZW1zKTtcbn1cblxuZXhwb3J0IHsgZ2V0RXJyb3JTaGFwZSBhcyBnLCB0cmFuc2Zvcm1UUlBDUmVzcG9uc2UgYXMgdCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@trpc/server/dist/transformTRPCResponse-1153b421.mjs\n");

/***/ })

};
;