"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemotionRoot = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const CompositionManager_1 = require("./CompositionManager");
const timeline_position_state_1 = require("./timeline-position-state");
const RemotionRoot = ({ children }) => {
    // Wontfix, expected to have
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const [compositions, setCompositions] = react_1.useState([]);
    const [currentComposition, setCurrentComposition] = react_1.useState(null);
    const [frame, setFrame] = react_1.useState(0);
    const [playing, setPlaying] = react_1.useState(false);
    const registerComposition = react_1.useCallback((comp) => {
        setCompositions((comps) => {
            if (comps.find((c) => c.name === comp.name)) {
                throw new Error(`Multiple composition with name ${comp.name} are registered.`);
            }
            return [...comps, comp];
        });
    }, []);
    const unregisterComposition = react_1.useCallback((name) => {
        setCompositions((comps) => {
            return comps.filter((c) => c.name !== name);
        });
    }, []);
    const contextValue = react_1.useMemo(() => {
        return {
            compositions,
            registerComposition,
            unregisterComposition,
            currentComposition,
            setCurrentComposition,
        };
    }, [
        compositions,
        currentComposition,
        registerComposition,
        unregisterComposition,
    ]);
    const timelineContextValue = react_1.useMemo(() => {
        return {
            frame,
            playing,
            setFrame,
            setPlaying,
        };
    }, [frame, playing]);
    return (jsx_runtime_1.jsx(timeline_position_state_1.TimelineContext.Provider, Object.assign({ value: timelineContextValue }, { children: jsx_runtime_1.jsx(CompositionManager_1.CompositionManager.Provider, Object.assign({ value: contextValue }, { children: children }), void 0) }), void 0));
};
exports.RemotionRoot = RemotionRoot;
//# sourceMappingURL=RemotionRoot.js.map