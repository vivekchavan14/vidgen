"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VideoForDevelopment = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const timeline_position_state_1 = require("../timeline-position-state");
const use_frame_1 = require("../use-frame");
const use_video_config_1 = require("../use-video-config");
const VideoForDevelopment = (props) => {
    const videoRef = react_1.useRef(null);
    const currentFrame = use_frame_1.useCurrentFrame();
    const videoConfig = use_video_config_1.useVideoConfig();
    const [playing] = timeline_position_state_1.usePlayingState();
    react_1.useEffect(() => {
        var _a, _b;
        if (playing) {
            (_a = videoRef.current) === null || _a === void 0 ? void 0 : _a.play();
        }
        else {
            (_b = videoRef.current) === null || _b === void 0 ? void 0 : _b.pause();
        }
    }, [playing]);
    react_1.useEffect(() => {
        if (!videoRef.current) {
            throw new Error('No video ref found');
        }
        if (!videoConfig) {
            throw new Error('No video config found');
        }
        if (!playing || currentFrame === 0) {
            videoRef.current.currentTime = currentFrame / (1000 / videoConfig.fps);
        }
    }, [currentFrame, playing, videoConfig]);
    return jsx_runtime_1.jsx("video", Object.assign({ ref: videoRef }, props), void 0);
};
exports.VideoForDevelopment = VideoForDevelopment;
//# sourceMappingURL=VideoForDevelopment.js.map