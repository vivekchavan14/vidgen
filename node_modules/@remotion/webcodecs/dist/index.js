"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebCodecsInternals = exports.webcodecsController = exports.createVideoEncoder = exports.rotateAndResizeVideoFrame = exports.getDefaultVideoCodec = exports.getDefaultAudioCodec = exports.getAvailableVideoCodecs = exports.getAvailableContainers = exports.getAvailableAudioCodecs = exports.extractFrames = exports.defaultOnVideoTrackHandler = exports.defaultOnAudioTrackHandler = exports.createVideoDecoder = exports.createAudioDecoder = exports.convertMedia = exports.convertAudioData = exports.canReencodeVideoTrack = exports.canReencodeAudioTrack = exports.canCopyVideoTrack = exports.canCopyAudioTrack = exports.createAudioEncoder = void 0;
const rotate_and_resize_video_frame_1 = require("./rotate-and-resize-video-frame");
const rotation_1 = require("./rotation");
const set_remotion_imported_1 = require("./set-remotion-imported");
var audio_encoder_1 = require("./audio-encoder");
Object.defineProperty(exports, "createAudioEncoder", { enumerable: true, get: function () { return audio_encoder_1.createAudioEncoder; } });
var can_copy_audio_track_1 = require("./can-copy-audio-track");
Object.defineProperty(exports, "canCopyAudioTrack", { enumerable: true, get: function () { return can_copy_audio_track_1.canCopyAudioTrack; } });
var can_copy_video_track_1 = require("./can-copy-video-track");
Object.defineProperty(exports, "canCopyVideoTrack", { enumerable: true, get: function () { return can_copy_video_track_1.canCopyVideoTrack; } });
var can_reencode_audio_track_1 = require("./can-reencode-audio-track");
Object.defineProperty(exports, "canReencodeAudioTrack", { enumerable: true, get: function () { return can_reencode_audio_track_1.canReencodeAudioTrack; } });
var can_reencode_video_track_1 = require("./can-reencode-video-track");
Object.defineProperty(exports, "canReencodeVideoTrack", { enumerable: true, get: function () { return can_reencode_video_track_1.canReencodeVideoTrack; } });
var convert_audiodata_1 = require("./convert-audiodata");
Object.defineProperty(exports, "convertAudioData", { enumerable: true, get: function () { return convert_audiodata_1.convertAudioData; } });
var convert_media_1 = require("./convert-media");
Object.defineProperty(exports, "convertMedia", { enumerable: true, get: function () { return convert_media_1.convertMedia; } });
var create_audio_decoder_1 = require("./create-audio-decoder");
Object.defineProperty(exports, "createAudioDecoder", { enumerable: true, get: function () { return create_audio_decoder_1.createAudioDecoder; } });
var create_video_decoder_1 = require("./create-video-decoder");
Object.defineProperty(exports, "createVideoDecoder", { enumerable: true, get: function () { return create_video_decoder_1.createVideoDecoder; } });
var default_on_audio_track_handler_1 = require("./default-on-audio-track-handler");
Object.defineProperty(exports, "defaultOnAudioTrackHandler", { enumerable: true, get: function () { return default_on_audio_track_handler_1.defaultOnAudioTrackHandler; } });
var default_on_video_track_handler_1 = require("./default-on-video-track-handler");
Object.defineProperty(exports, "defaultOnVideoTrackHandler", { enumerable: true, get: function () { return default_on_video_track_handler_1.defaultOnVideoTrackHandler; } });
var extract_frames_1 = require("./extract-frames");
Object.defineProperty(exports, "extractFrames", { enumerable: true, get: function () { return extract_frames_1.extractFrames; } });
var get_available_audio_codecs_1 = require("./get-available-audio-codecs");
Object.defineProperty(exports, "getAvailableAudioCodecs", { enumerable: true, get: function () { return get_available_audio_codecs_1.getAvailableAudioCodecs; } });
var get_available_containers_1 = require("./get-available-containers");
Object.defineProperty(exports, "getAvailableContainers", { enumerable: true, get: function () { return get_available_containers_1.getAvailableContainers; } });
var get_available_video_codecs_1 = require("./get-available-video-codecs");
Object.defineProperty(exports, "getAvailableVideoCodecs", { enumerable: true, get: function () { return get_available_video_codecs_1.getAvailableVideoCodecs; } });
var get_default_audio_codec_1 = require("./get-default-audio-codec");
Object.defineProperty(exports, "getDefaultAudioCodec", { enumerable: true, get: function () { return get_default_audio_codec_1.getDefaultAudioCodec; } });
var get_default_video_codec_1 = require("./get-default-video-codec");
Object.defineProperty(exports, "getDefaultVideoCodec", { enumerable: true, get: function () { return get_default_video_codec_1.getDefaultVideoCodec; } });
var rotate_and_resize_video_frame_2 = require("./rotate-and-resize-video-frame");
Object.defineProperty(exports, "rotateAndResizeVideoFrame", { enumerable: true, get: function () { return rotate_and_resize_video_frame_2.rotateAndResizeVideoFrame; } });
var video_encoder_1 = require("./video-encoder");
Object.defineProperty(exports, "createVideoEncoder", { enumerable: true, get: function () { return video_encoder_1.createVideoEncoder; } });
var webcodecs_controller_1 = require("./webcodecs-controller");
Object.defineProperty(exports, "webcodecsController", { enumerable: true, get: function () { return webcodecs_controller_1.webcodecsController; } });
exports.WebCodecsInternals = {
    rotateAndResizeVideoFrame: rotate_and_resize_video_frame_1.rotateAndResizeVideoFrame,
    normalizeVideoRotation: rotate_and_resize_video_frame_1.normalizeVideoRotation,
    calculateNewDimensionsFromDimensions: rotation_1.calculateNewDimensionsFromRotateAndScale,
};
(0, set_remotion_imported_1.setRemotionImported)();
